BTFW.define("feature:chat",["feature:layout"],async ({}) =>{const $ = (s,r=document) => r.querySelector(s);const $$ = (s,r=document) => Array.from(r.querySelectorAll(s));const MESSAGE_SELECTOR = ".chat-msg,.message,[class*=message]";const BASE = (window.BTFW && BTFW.BASE ? BTFW.BASE.replace(/\/+$/,''):"");function positionAboveChatBar(el,opts){if (!el) return;const cw = document.querySelector("#chatwrap");const bar = cw && cw.querySelector(".btfw-chat-bottombar");if (!cw || !bar) return;const{margin = 8,widthPx = 560,widthVw = 92,maxHpx = 480,maxHvh = 70}= (opts ||{});const cwRect = cw.getBoundingClientRect();const barRect = bar.getBoundingClientRect();const safeMargin = Math.max(6,margin);const viewportLimitPx = isFinite(widthVw) ? (window.innerWidth * (widthVw / 100)):widthPx;const availableViewport = Math.max(0,window.innerWidth - safeMargin * 2);const availableWithinChat = Math.max(0,cwRect.width - safeMargin * 2);let width = Math.min(widthPx,viewportLimitPx,availableViewport || widthPx);if (availableWithinChat > 0){width = Math.min(width,availableWithinChat);}const minComfort = Math.min(widthPx,viewportLimitPx,availableViewport || widthPx);if (width < 280 && minComfort >= 280){width = Math.min(minComfort,Math.max(width,280));}if (!Number.isFinite(width) || width <= 0){width = Math.min(widthPx,viewportLimitPx,availableViewport || widthPx);}const left = Math.max(safeMargin,cwRect.right - width);const bottomOffset = Math.max(safeMargin,window.innerHeight - barRect.top + safeMargin);const maxHeightViewport = isFinite(maxHvh) ? window.innerHeight * (maxHvh / 100):maxHpx;const availableHeight = Math.max(0,barRect.top - safeMargin);const maxHeight = Math.min(maxHpx,maxHeightViewport,availableHeight || maxHpx);el.style.position = "fixed";el.style.left = `${Math.round(left)}px`;el.style.right = "auto";el.style.bottom = `${Math.round(bottomOffset)}px`;el.style.width = `${Math.round(width)}px`;el.style.maxWidth = `${Math.round(Math.min(widthPx,viewportLimitPx,Math.max(width,availableWithinChat || width,availableViewport || width)))}px`;if (Number.isFinite(maxHeight) && maxHeight > 0){el.style.maxHeight = `${Math.round(maxHeight)}px`;}else{el.style.removeProperty("max-height");}el.style.zIndex = el.style.zIndex || "6002";}window.BTFW_positionPopoverAboveChatBar = positionAboveChatBar;let scrolling = false;let scrollTimeout;window.addEventListener('scroll',() =>{if (!scrolling){document.body.classList.add('is-scrolling');scrolling = true;}clearTimeout(scrollTimeout);scrollTimeout = setTimeout(() =>{document.body.classList.remove('is-scrolling');scrolling = false;},150);},{passive:true});function repositionOpenPopins(){const helper = (el,opts) => window.BTFW_positionPopoverAboveChatBar && window.BTFW_positionPopoverAboveChatBar(el,opts);const em = document.getElementById("btfw-emotes-pop");if (em && !em.classList.contains("hidden")){helper(em,{widthPx:560,widthVw:92,maxHpx:480,maxHvh:70});}const ctCard = document.querySelector("#btfw-ct-modal.is-active .btfw-ct-card");if (ctCard){helper(ctCard,{widthPx:420,widthVw:92,maxHpx:360,maxHvh:60});}const ul = document.getElementById("btfw-userlist-pop");if (ul && ul.style.display !== "none"){helper(ul);}}window.addEventListener("resize",repositionOpenPopins);window.addEventListener("scroll",repositionOpenPopins,true);document.addEventListener("btfw:layoutReady",()=> setTimeout(repositionOpenPopins,0));function adoptUserlistIntoPopover(){const body = $("#btfw-userlist-pop .btfw-popbody");const ul = $("#userlist");if (!body || !ul) return;if (ul.parentElement !== body){ul.classList.add("btfw-userlist-overlay");ul.classList.remove("btfw-userlist-overlay--open");ul.style.removeProperty("display");ul.style.removeProperty("position");body.appendChild(ul);}}const scheduleAdoptUserlist = (() =>{let pending = false;const raf = window.requestAnimationFrame || ((cb) => setTimeout(cb,16));return () =>{if (pending) return;pending = true;raf(() =>{pending = false;adoptUserlistIntoPopover();});};})();const userlistSocketState ={wired:false,socketRef:null,teardown:null,retryTimer:null};function wireUserlistSocketWatchers(){const sock = window.socket;if (userlistSocketState.wired && userlistSocketState.socketRef && userlistSocketState.socketRef !== sock){if (typeof userlistSocketState.teardown === "function"){try{userlistSocketState.teardown();}catch (_){}}userlistSocketState.teardown = null;userlistSocketState.wired = false;userlistSocketState.socketRef = null;}if (userlistSocketState.retryTimer){clearTimeout(userlistSocketState.retryTimer);userlistSocketState.retryTimer = null;}if (userlistSocketState.wired) return;if (!sock || typeof sock.on !== "function"){if (!userlistSocketState.retryTimer){userlistSocketState.retryTimer = setTimeout(() =>{userlistSocketState.retryTimer = null;wireUserlistSocketWatchers();},1000);}return;}const events = ["userlist","addUser","userLeave"];const handler = () =>{wireUserlistSocketWatchers();scheduleAdoptUserlist();};try{events.forEach((evt) => sock.on(evt,handler));userlistSocketState.teardown = () =>{events.forEach((evt) =>{if (typeof sock.off === "function"){try{sock.off(evt,handler);}catch (_){}}else if (typeof sock.removeListener === "function"){try{sock.removeListener(evt,handler);}catch (_){}}});};userlistSocketState.wired = true;userlistSocketState.socketRef = sock;scheduleAdoptUserlist();}catch (_){userlistSocketState.wired = false;userlistSocketState.socketRef = null;if (typeof userlistSocketState.teardown === "function"){try{userlistSocketState.teardown();}catch (_){}}userlistSocketState.teardown = null;if (!userlistSocketState.retryTimer){userlistSocketState.retryTimer = setTimeout(() =>{userlistSocketState.retryTimer = null;wireUserlistSocketWatchers();},1500);}}}const ensureUserlistDomTriggers = (() =>{let wired = false;const handler = () =>{wireUserlistSocketWatchers();scheduleAdoptUserlist();};return () =>{if (wired) return;wired = true;if (document.readyState === "loading"){document.addEventListener("DOMContentLoaded",handler,{once:true});}else{setTimeout(handler,0);}document.addEventListener("btfw:layoutReady",handler);document.addEventListener("btfw:chat:barsReady",handler);};})();function ensureUserlistWatch(){if (document._btfw_userlist_watch?.disconnect){try{document._btfw_userlist_watch.disconnect();}catch (_){}}document._btfw_userlist_watch = true;ensureUserlistDomTriggers();scheduleAdoptUserlist();wireUserlistSocketWatchers();}function actionsNode(){const bar = document.querySelector("#chatwrap .btfw-chat-bottombar");return bar && bar.querySelector("#btfw-chat-actions");}function normalizeChatActionButtons(){const actions = actionsNode();if (!actions) return;const legacyGif = document.getElementById("btfw-gif-btn");if (legacyGif) legacyGif.remove();const nativeEmoteBtn = document.querySelector("#emotelistbtn,#emotelist");if (nativeEmoteBtn) nativeEmoteBtn.style.display = "none";if (!document.getElementById("btfw-btn-emotes")){const b = document.createElement("button");b.id = "btfw-btn-emotes";b.className = "button is-dark is-small btfw-chatbtn";b.title = "Emotes / Emoji";b.innerHTML = '<i class="fa fa-smile"></i>';actions.appendChild(b);}if (!document.getElementById("btfw-btn-gif")){const b = document.createElement("button");b.id = "btfw-btn-gif";b.className = "button is-dark is-small btfw-chatbtn";b.title = "GIFs";b.innerHTML = '<i class="fa-solid fa-gif"></i>';actions.appendChild(b);}["btfw-btn-emotes","btfw-btn-gif","btfw-chatcmds-btn","btfw-users-toggle","usercount"].forEach(id=>{const el = document.getElementById(id);if (el && el.parentElement !== actions) actions.appendChild(el);});const gifBtn = actions.querySelector("#btfw-btn-gif");if (gifBtn){gifBtn.classList.add("btfw-chatbtn");gifBtn.classList.add("button","is-dark","is-small");gifBtn.title = gifBtn.title || "GIFs";const hasIcon = gifBtn.querySelector("i.fa-solid.fa-gif");if (!hasIcon){gifBtn.innerHTML = '<i class="fa-solid fa-gif"></i>';}}orderChatActions(actions);}const CHAT_ACTION_ORDER = [ "#btfw-btn-emotes","#btfw-btn-gif","#btfw-chattools-btn","#btfw-ct-open","#btfw-chatcmds-btn","#btfw-users-toggle","#usercount" ];function orderChatActions(actions){if (!actions) return;const orderedNodes = [];CHAT_ACTION_ORDER.forEach((sel) =>{const el = actions.querySelector(sel);if (el && el.parentElement === actions && !orderedNodes.includes(el)){orderedNodes.push(el);}});if (orderedNodes.length <= 1) return;let alreadyOrdered = true;outer:for (let i = 0;i < orderedNodes.length - 1;i += 1){for (let j = i + 1;j < orderedNodes.length;j += 1){const rel = orderedNodes[i].compareDocumentPosition(orderedNodes[j]);if (rel & Node.DOCUMENT_POSITION_PRECEDING){alreadyOrdered = false;break outer;}}}if (alreadyOrdered) return;const anchor = document.createElement("span");anchor.style.display = "none";actions.insertBefore(anchor,actions.firstChild);orderedNodes.forEach((node) =>{if (node.parentElement === actions){actions.insertBefore(node,anchor);}});anchor.remove();}const scheduleNormalizeChatActions = (() =>{let pending = false;const raf = window.requestAnimationFrame || ((cb) => setTimeout(cb,16));return () =>{if (pending) return;pending = true;raf(() =>{pending = false;normalizeChatActionButtons();});};})();const buttonSocketState ={wired:false,socketRef:null,teardown:null,retryTimer:null};function ensureChatActionsObserver(){const actions = actionsNode();if (!actions) return;const prev = document._btfw_btn_obsTarget;if (prev && prev !== actions){const prevObserver = prev._btfwNormalizeObserver;if (prevObserver && typeof prevObserver.disconnect === "function"){try{prevObserver.disconnect();}catch (_){}}prev._btfwNormalizeObserver = null;document._btfw_btn_obsTarget = null;}if (actions._btfwNormalizeObserver) return;const observer = new MutationObserver(() => scheduleNormalizeChatActions());try{observer.observe(actions,{childList:true});actions._btfwNormalizeObserver = observer;document._btfw_btn_obsTarget = actions;}catch (_){scheduleNormalizeChatActions();}}function wireButtonSocketListeners(){const sock = window.socket;if (buttonSocketState.wired && buttonSocketState.socketRef && buttonSocketState.socketRef !== sock){if (typeof buttonSocketState.teardown === "function"){try{buttonSocketState.teardown();}catch (_){}}buttonSocketState.teardown = null;buttonSocketState.wired = false;buttonSocketState.socketRef = null;}if (buttonSocketState.retryTimer){clearTimeout(buttonSocketState.retryTimer);buttonSocketState.retryTimer = null;}if (buttonSocketState.wired) return;if (!sock || typeof sock.on !== "function"){if (!buttonSocketState.retryTimer){buttonSocketState.retryTimer = setTimeout(() =>{buttonSocketState.retryTimer = null;wireButtonSocketListeners();},1000);}return;}const events = ["changeMedia","queue","setUserMeta","setAFK"];const handler = () =>{wireButtonSocketListeners();ensureChatActionsObserver();scheduleNormalizeChatActions();};try{events.forEach((evt) => sock.on(evt,handler));buttonSocketState.teardown = () =>{events.forEach((evt) =>{if (typeof sock.off === "function"){try{sock.off(evt,handler);}catch (_){}}else if (typeof sock.removeListener === "function"){try{sock.removeListener(evt,handler);}catch (_){}}});};buttonSocketState.wired = true;buttonSocketState.socketRef = sock;}catch (_){buttonSocketState.wired = false;buttonSocketState.socketRef = null;if (typeof buttonSocketState.teardown === "function"){try{buttonSocketState.teardown();}catch (_){}}buttonSocketState.teardown = null;if (!buttonSocketState.retryTimer){buttonSocketState.retryTimer = setTimeout(() =>{buttonSocketState.retryTimer = null;wireButtonSocketListeners();},1500);}}}const ensureButtonDomTriggers = (() =>{let wired = false;const handler = () =>{wireButtonSocketListeners();ensureChatActionsObserver();scheduleNormalizeChatActions();};return () =>{if (wired) return;wired = true;if (document.readyState === "loading"){document.addEventListener("DOMContentLoaded",handler,{once:true});}else{setTimeout(handler,0);}document.addEventListener("btfw:layoutReady",handler);document.addEventListener("btfw:chat:barsReady",handler);};})();function watchForStrayButtons(){if (document._btfw_btn_watch) return;document._btfw_btn_watch = true;ensureButtonDomTriggers();ensureChatActionsObserver();scheduleNormalizeChatActions();wireButtonSocketListeners();}function isChatMessageElement(el){if (!el || el.nodeType !== 1) return false;const classList = el.classList;if (!classList || classList.length === 0) return false;if (classList.contains("chat-msg")) return true;for (const cls of classList){if (cls && cls.startsWith("chat-msg-")) return true;}return false;}function applyChatMessageGrouping(el){if (!isChatMessageElement(el)) return;const hasUsername = !!el.querySelector(".username");if (hasUsername){el.classList.add("btfw-new-user-msg");el.classList.remove("btfw-continuation-msg");}else{el.classList.add("btfw-continuation-msg");el.classList.remove("btfw-new-user-msg");}}function markChatMessageGroups(){const buffer = getChatBuffer();if (!buffer) return;const nodes = buffer.children || [];for (const node of nodes){if (!node || node.nodeType !== 1) continue;applyChatMessageGrouping(node);}}const scheduleMarkChatMessageGroups = (() =>{let pending = false;const raf = window.requestAnimationFrame || ((cb) => setTimeout(cb,16));return () =>{if (pending) return;pending = true;raf(() =>{pending = false;markChatMessageGroups();});};})();const processedMessages = new WeakSet();function getChatBuffer(){return document.getElementById("messagebuffer") || document.querySelector(".chat-messages,#chatbuffer,.message-buffer");}function ensureScrollManagement(){const buffer = getChatBuffer();if (!buffer) return;const sock = window.socket;if (sock && typeof sock.on === "function"){sock.on("chatMsg",() =>{if (typeof window.scrollChat === "function"){window.scrollChat();setTimeout(() => window.scrollChat(),100);setTimeout(() => window.scrollChat(),250);}});}processPendingChatMessages();if (typeof window.scrollChat === "function"){setTimeout(() => window.scrollChat(),80);}}function escapeHTML(str){return (str || "").replace(/[&<>"']/g,(ch) => ({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"})[ch] || ch);}function processPendingChatMessages(){const buffer = getChatBuffer();if (!buffer) return;const newMessages = [];buffer.querySelectorAll(MESSAGE_SELECTOR).forEach((el) =>{if (processedMessages.has(el)) return;applyChatMessageGrouping(el);newMessages.push(el);});if (!newMessages.length) return;newMessages.forEach((el) =>{processedMessages.add(el);});}const scheduleProcessPendingChatMessages = (() =>{let pending = false;const raf = window.requestAnimationFrame || ((cb) => setTimeout(cb,16));return () =>{if (pending) return;pending = true;raf(() =>{pending = false;processPendingChatMessages();});};})();function onSocketChatMessage(){scheduleProcessPendingChatMessages();setTimeout(() => processPendingChatMessages(),80);}const chatSocketState ={wired:false,retryTimer:null,socketRef:null,teardown:null};function wireChatSocketWatcher(){const sock = window.socket;if (chatSocketState.wired && chatSocketState.socketRef && chatSocketState.socketRef !== sock){if (typeof chatSocketState.teardown === "function"){try{chatSocketState.teardown();}catch(_){}}chatSocketState.wired = false;chatSocketState.socketRef = null;chatSocketState.teardown = null;}if (chatSocketState.wired) return;if (!sock || typeof sock.on !== "function"){if (!chatSocketState.retryTimer){chatSocketState.retryTimer = setTimeout(() =>{chatSocketState.retryTimer = null;wireChatSocketWatcher();},1000);}return;}try{sock.on("chatMsg",onSocketChatMessage);chatSocketState.wired = true;chatSocketState.socketRef = sock;if (typeof sock.off === "function"){chatSocketState.teardown = () =>{try{sock.off("chatMsg",onSocketChatMessage);}catch(_){}};}else if (typeof sock.removeListener === "function"){chatSocketState.teardown = () =>{try{sock.removeListener("chatMsg",onSocketChatMessage);}catch(_){}};}else{chatSocketState.teardown = null;}if (chatSocketState.retryTimer){clearTimeout(chatSocketState.retryTimer);chatSocketState.retryTimer = null;}scheduleProcessPendingChatMessages();}catch (err){chatSocketState.wired = false;if (!chatSocketState.retryTimer){chatSocketState.retryTimer = setTimeout(() =>{chatSocketState.retryTimer = null;wireChatSocketWatcher();},1500);}}}function normalizeUserIdentifier(str){if (str == null) return "";let result = String(str).trim();if (!result) return "";if (result.endsWith(":")){result = result.slice(0,-1).trimEnd();}return result;}function locateUserlistItem(name){const targetName = normalizeUserIdentifier(name);if (!targetName) return null;const direct = document.querySelector(`#userlist li[data-name="${CSS.escape(targetName)}"]`);if (direct) return direct;const candidates = document.querySelectorAll('#userlist li,#userlist .userlist_item,#userlist .user');const normalizedTarget = targetName.toLowerCase();for (const el of candidates){const attr = (el.getAttribute && el.getAttribute('data-name')) || '';const text = attr || (el.textContent || '');if (!text) continue;const normalizedText = normalizeUserIdentifier(text);if (!normalizedText) continue;if (normalizedText.toLowerCase() === normalizedTarget) return el;}return null;}function wireChatUsernameContextMenu(){const buf = document.getElementById('messagebuffer');if (!buf || buf._btfwNameContext) return;buf._btfwNameContext = true;buf.addEventListener('click',(ev) =>{if (ev.button !== 0) return;const target = ev.target.closest('.username');if (!target) return;const raw = target.textContent || '';const name = normalizeUserIdentifier(raw);if (!name) return;const item = locateUserlistItem(name);if (!item) return;const rect = target.getBoundingClientRect();const clientX = ev.clientX || rect.left + rect.width / 2;const clientY = ev.clientY || rect.bottom + 6;const menuEvent = new MouseEvent('contextmenu',{bubbles:true,cancelable:true,view:window,clientX,clientY});item.dispatchEvent(menuEvent);ev.preventDefault();ev.stopPropagation();},true);}function adoptNewMessageIndicator(){const indicator = document.getElementById('newmessages-indicator');const controls = document.querySelector('#chatwrap .btfw-controls-row');if (!indicator || !controls) return;const buffer = document.getElementById('messagebuffer');indicator.classList.add('btfw-newmessages');indicator.style.position = '';indicator.style.left = '';indicator.style.right = '';indicator.style.bottom = '';indicator.style.top = '';let slot = document.querySelector('#chatwrap .btfw-newmessages-slot');if (!slot){slot = document.createElement('div');slot.className = 'btfw-newmessages-slot';}if (buffer && buffer.parentNode){const parent = buffer.parentNode;if (slot.parentNode !== parent){parent.insertBefore(slot,buffer.nextSibling);}else if (slot.previousElementSibling !== buffer){parent.insertBefore(slot,buffer.nextSibling);}}else if (!slot.parentNode && controls.parentNode){controls.parentNode.insertBefore(slot,controls);}else if (slot.parentNode === controls.parentNode && slot.nextSibling !== controls){controls.parentNode.insertBefore(slot,controls);}if (indicator.parentElement !== slot){slot.appendChild(indicator);}}function ensureUserlistPopover(){if ($("#btfw-userlist-pop")) return;const back = document.createElement("div");back.id = "btfw-userlist-backdrop";back.className = "btfw-popover-backdrop";back.style.display = "none";back.style.zIndex = "6001";document.body.appendChild(back);const pop = document.createElement("div");pop.id = "btfw-userlist-pop";pop.className = "btfw-popover btfw-userlist-pop";pop.style.display = "none";pop.style.zIndex = "6002";pop.innerHTML = ` <div class="btfw-pophead"> <span>Users</span> <button class="btfw-popclose" aria-label="Close">&times;</button> </div> <div class="btfw-popbody"></div> `;document.body.appendChild(pop);adoptUserlistIntoPopover();const close = () =>{back.style.display = "none";pop.style.display = "none";const ul = $("#userlist");if (ul) ul.classList.remove("btfw-userlist-overlay--open");};back.addEventListener("click",close);pop.querySelector(".btfw-popclose").addEventListener("click",close);document.addEventListener("keydown",(ev)=>{if (ev.key === "Escape") close();},true);function position(){positionAboveChatBar(pop);}window.addEventListener("resize",position);window.addEventListener("scroll",position,true);document._btfw_userlist_isOpen = () => pop.style.display !== "none";document._btfw_userlist_open = () =>{adoptUserlistIntoPopover();const ul = $("#userlist");if (ul) ul.classList.add("btfw-userlist-overlay--open");back.style.display = "block";pop.style.display = "block";positionAboveChatBar(pop);};document._btfw_userlist_close = close;document._btfw_userlist_position = position;}function toggleUserlist(){ensureUserlistPopover();if (document._btfw_userlist_isOpen && document._btfw_userlist_isOpen()){document._btfw_userlist_close && document._btfw_userlist_close();}else{document._btfw_userlist_open && document._btfw_userlist_open();}}function ensureBars(){const cw = $("#chatwrap");if (!cw) return;cw.classList.add("btfw-chatwrap");let top = cw.querySelector(".btfw-chat-topbar");if (!top){top = document.createElement("div");top.className = "btfw-chat-topbar";top.innerHTML = ` <div class="btfw-chat-topbar-left"> <div class="btfw-chat-title" id="btfw-nowplaying-slot"></div> </div> <div class="btfw-chat-topbar-actions" id="btfw-chat-topbar-actions"></div> `;cw.prepend(top);}let left = top.querySelector(".btfw-chat-topbar-left");if (!left){left = document.createElement("div");left.className = "btfw-chat-topbar-left";top.prepend(left);}if (!left.querySelector("#btfw-nowplaying-slot")){const slot = document.createElement("div");slot.id = "btfw-nowplaying-slot";slot.className = "btfw-chat-title";left.appendChild(slot);}let topActions = top.querySelector("#btfw-chat-topbar-actions");if (!topActions){topActions = document.createElement("div");topActions.id = "btfw-chat-topbar-actions";topActions.className = "btfw-chat-topbar-actions";top.appendChild(topActions);}if (!topActions.querySelector("#btfw-mobile-modules-toggle")){const btn = document.createElement("button");btn.id = "btfw-mobile-modules-toggle";btn.className = "button is-dark is-small btfw-chatbtn";btn.title = "Modules";btn.setAttribute("aria-label","Toggle modules stack");btn.innerHTML = '<i class="fa fa-bars"></i>';topActions.appendChild(btn);}let bottom = cw.querySelector(".btfw-chat-bottombar");if (!bottom){bottom = document.createElement("div");bottom.className = "btfw-chat-bottombar";cw.appendChild(bottom);}let composer = bottom.querySelector(".btfw-chat-composer");if (!composer){composer = document.createElement("div");composer.className = "btfw-chat-composer";bottom.prepend(composer);}let composerMain = composer.querySelector("#btfw-chat-composer-main");if (!composerMain){composerMain = document.createElement("div");composerMain.id = "btfw-chat-composer-main";composerMain.className = "btfw-chat-composer-main";composer.prepend(composerMain);}let actions = composer.querySelector("#btfw-chat-actions") || bottom.querySelector("#btfw-chat-actions");if (actions && actions.parentElement !== composer){composer.appendChild(actions);}if (!actions){actions = document.createElement("div");actions.id = "btfw-chat-actions";composer.appendChild(actions);}actions.classList.add("btfw-chat-actions");const oldGif = $("#btfw-gif-btn");if (oldGif) oldGif.remove();const chatTheme = $("#btfw-theme-btn-chat");if (chatTheme) chatTheme.remove();if (!$("#btfw-btn-emotes")){const b = document.createElement("button");b.id = "btfw-btn-emotes";b.className = "button is-dark is-small btfw-chatbtn";b.title = "Emotes / Emoji";b.innerHTML = '<i class="fa fa-smile"></i>';actions.appendChild(b);}const nativeEmoteBtn = $("#emotelistbtn,#emotelist");if (nativeEmoteBtn) nativeEmoteBtn.style.display = "none";if (!$("#btfw-btn-gif")){const b = document.createElement("button");b.id = "btfw-btn-gif";b.className = "button is-dark is-small btfw-chatbtn";b.title = "GIFs";b.innerHTML = '<i class="fa fa-file-video-o"></i>';actions.appendChild(b);}const cmds = $("#btfw-chatcmds-btn");if (cmds && cmds.parentElement !== actions){cmds.classList.add("button","is-dark","is-small","btfw-chatbtn");actions.appendChild(cmds);}if (!$("#btfw-users-toggle")){const b = document.createElement("button");b.id = "btfw-users-toggle";b.className = "button is-dark is-small btfw-chatbtn";b.title = "Users";b.innerHTML = '<i class="fa fa-users"></i>';actions.appendChild(b);}const msg = $("#messagebuffer");if (msg) msg.classList.add("btfw-messagebuffer");const controls = $("#chatcontrols,#chat-controls") || ($("#chatline") && $("#chatline").parentElement);if (controls && controls.parentElement !== composerMain){controls.classList.add("btfw-controls-row");composerMain.appendChild(controls);}scheduleNormalizeChatActions();wireChatUsernameContextMenu();adoptNewMessageIndicator();document.dispatchEvent(new CustomEvent("btfw:chat:barsReady",{detail:{topbar:top,bottombar:bottom,actions:topActions}}));}function refreshChatDom(){ensureBars();adoptUserlistIntoPopover();adoptNewMessageIndicator();ensureScrollManagement();scheduleProcessPendingChatMessages();scheduleMarkChatMessageGroups();}const scheduleChatDomRefresh = (() =>{let pending = false;const raf = window.requestAnimationFrame || ((cb) => setTimeout(cb,16));return () =>{if (pending) return;pending = true;raf(() =>{pending = false;refreshChatDom();});};})();const usercountState ={socket:null};function cleanUsercountText(){const uc = $("#usercount");if (!uc) return;const cleaned = (uc.textContent || "") .replace(/connected users/gi," ") .replace(/connected user/gi," ") .replace(/not connected/gi," ") .replace(/\s+/g," ") .trim();uc.textContent = cleaned || "0";}function wireUsercountSocket(){const uc = $("#usercount");if (!uc) return;cleanUsercountText();const sock = window.socket;if (!sock || typeof sock.on !== "function"){setTimeout(wireUsercountSocket,500);return;}if (usercountState.socket === sock) return;usercountState.socket = sock;sock.on("usercount",() =>{cleanUsercountText();});sock.on("userlist",(list) =>{if (Array.isArray(list)){const el = $("#usercount");if (el) el.textContent = String(list.length);}cleanUsercountText();});}function ensureUsercountInBar(){const cw = $("#chatwrap");if (!cw) return;const bar = cw.querySelector(".btfw-chat-bottombar");if (!bar) return;const actions = bar.querySelector("#btfw-chat-actions");if (!actions) return;let uc = actions.querySelector("#usercount");if (!uc){uc = $("#usercount");if (uc && uc.parentElement !== actions){actions.appendChild(uc);}}if (!uc){uc = document.createElement("div");uc.id = "usercount";actions.appendChild(uc);}uc.classList.add("btfw-usercount");uc.classList.remove("pointer");if (!uc.title) uc.title = "Connected users";if (!uc.dataset.btfwUsercountBound){uc.addEventListener("click",(e) =>{e.preventDefault();e.stopPropagation();},true);uc.addEventListener("contextmenu",(e) =>{e.preventDefault();e.stopPropagation();},true);uc.dataset.btfwUsercountBound = "true";}cleanUsercountText();orderChatActions(actions);wireUsercountSocket();}function colorizeUser(el){const n = el.matches?.(".username,.nick,.name") ? el:el.querySelector?.(".username,.nick,.name");if (!n) return;const t = (n.textContent||"").replace(":","").trim();if(!t) return;let hash=0;for(let i=0;i<t.length;i++) hash=t.charCodeAt(i)+((hash<<5)-hash);let c="#";for(let i=0;i<3;i++) c+=("00"+((hash>>(i*8))&0xff).toString(16)).slice(-2);n.style.color=c;}function observeChatDom(){const cw = $("#chatwrap");if (!cw || cw._btfw_chat_obs) return;cw._btfw_chat_obs = true;new MutationObserver(()=>{scheduleChatDomRefresh();}).observe(cw,{childList:true,subtree:true});const buf = $("#messagebuffer");if (buf && !buf._btfw_color_obs){buf._btfw_color_obs = true;new MutationObserver(muts=>{muts.forEach(r=>{r.addedNodes.forEach(n=>{if (n.nodeType===1) colorizeUser(n);});});}).observe(buf,{childList:true});Array.from(buf.querySelectorAll(".username,.nick,.name")).forEach(colorizeUser);}ensureScrollManagement();}function loadScript(src){return new Promise((res,rej)=>{const s=document.createElement("script");s.src = src;s.async=true;s.defer=true;s.onload = ()=> res(true);s.onerror= ()=> rej(new Error("Failed to load "+src));document.head.appendChild(s);});}let _tsLoading = false;async function openThemeSettings(){document.dispatchEvent(new CustomEvent("btfw:openThemeSettings"));let modal = $("#btfw-theme-modal");if (modal){modal.classList.add("is-active");return;}await new Promise(r => setTimeout(r,40));modal = $("#btfw-theme-modal");if (modal){modal.classList.add("is-active");return;}if (_tsLoading) return;_tsLoading = true;try{const url = BASE ? `${BASE}/modules/feature-theme-settings.js`:"/modules/feature-theme-settings.js";await loadScript(url);document.dispatchEvent(new CustomEvent("btfw:openThemeSettings"));await new Promise(r => setTimeout(r,40));modal = $("#btfw-theme-modal");if (modal) modal.classList.add("is-active");}catch(e){console.warn("[chat] Theme Settings lazy-load failed:",e.message||e);}finally{_tsLoading = false;}}function wireDelegatedClicks(){if (window._btfwChatClicksWired) return;window._btfwChatClicksWired = true;document.addEventListener("click",function(e){const t = e.target;const gifBtn = t.closest && t.closest("#btfw-btn-gif");const emoBtn = t.closest && t.closest("#btfw-btn-emotes");const themeBtn = t.closest && (t.closest("#btfw-theme-btn-nav"));const usersBtn = t.closest && t.closest("#btfw-users-toggle");const cmdsBtn = t.closest && t.closest("#btfw-chatcmds-btn");if (gifBtn){e.preventDefault();document.dispatchEvent(new Event("btfw:openGifs"));return;}if (emoBtn){e.preventDefault();const ev = new Event("btfw:openEmotes");document.dispatchEvent(ev);setTimeout(()=>{const existing = document.querySelector(".btfw-emote-pop,.btfw-popover.btfw-emote-pop");if (!existing){const nativeBtn = document.querySelector("#emotelistbtn,#emotelist");if (nativeBtn) nativeBtn.click();}},10);return;}if (themeBtn){e.preventDefault();openThemeSettings();return;}if (usersBtn){e.preventDefault();toggleUserlist();return;}if (cmdsBtn){e.preventDefault();document.dispatchEvent(new Event("btfw:openChatCmds"));return;}},true);}document.addEventListener("btfw:themeSettings:apply",() =>{scheduleMarkChatMessageGroups();});function boot(){refreshChatDom();wireChatSocketWatcher();ensureUserlistWatch();ensureUsercountInBar();ensureUserlistPopover();observeChatDom();scheduleMarkChatMessageGroups();wireDelegatedClicks();watchForStrayButtons();}document.addEventListener("btfw:layoutReady",()=> setTimeout(boot,50));if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();return{name:"feature:chat"};});BTFW.define("feature:chat-tools",["feature:chat"],async ({}) =>{const $ = (s,r=document) => r.querySelector(s);const $$ = (s,r=document) => Array.from(r.querySelectorAll(s));const LS ={hist:"btfw:chat:history",stickColor:"btfw:chat:stickColor"};const COLORS = ["#1abc9c","#16a085","#f1c40f","#f39c12","#2ecc71","#27ae60","#e67e22","#d35400","#3498db","#2980b9","#e74c3c","#c0392b","#9b59b6","#8e44ad","#0080a5","#34495e","#2c3e50","#87724b","#7300a7","#ec87bf","#d870ad","#f69785","#9ba37e","#b49255","#a94136"];try{localStorage.removeItem("btfw:chat:nameColor");}catch(e){}(function clearUsernameTint(){$$("#messagebuffer .username,#messagebuffer .nick,#messagebuffer .name") .forEach(n =>{try{n.style.color = "";}catch(e){}});})();const chatline = () => $("#chatline");function withSelection(fn){const l = chatline();if (!l) return;const a = l.selectionStart ?? l.value.length;const b = l.selectionEnd ?? l.value.length;const before = l.value.slice(0,a);const mid = l.value.slice(a,b);const after = l.value.slice(b);fn(l,{a,b,before,mid,after});}function wrapWithTag(tag){withSelection((l,s)=>{const open = `[${tag}]`,close = `[/${tag}]`;l.value = s.before + open + s.mid + close + s.after;if (s.mid.length === 0){const pos = s.before.length + open.length;l.focus();l.setSelectionRange(pos,pos);}else{const start = s.before.length + open.length;const end = start + s.mid.length;l.focus();l.setSelectionRange(start,end);}});}function normalizeHex(x){if (!x) return "";x = x.trim();if (/^[0-9a-f]{6}$/i.test(x)) x = "#"+x;if (!/^#[0-9a-f]{6}$/i.test(x)) return "";return x.toLowerCase();}function applyColPrefix(hex){hex = normalizeHex(hex);if (!hex) return;const l = chatline();if (!l) return;const prefixRe = /^col:\s*#?[0-9a-fA-F]{6}:\s*/;const current = l.value || "";const without = current.replace(prefixRe,"");const prefix = `col:${hex}:`;const glue = without && !/^\s/.test(without) ? " ":"";l.value = prefix + glue + without;const pos = l.value.length;l.focus();l.setSelectionRange(pos,pos);}function getStickColor(){try{return localStorage.getItem(LS.stickColor)||"";}catch(e){return "";}}function setStickColor(hex){try{localStorage.setItem(LS.stickColor,normalizeHex(hex)||"");}catch(e){}}function applyStickyColorBeforeSend(){const hex = getStickColor();if (!hex) return;const l = chatline();if (!l) return;const v = (l.value||"").trimStart();if (/^col:\s*#?[0-9a-fA-F]{6}:/i.test(v)) return;l.value = `col:${normalizeHex(hex)}:` + (v ? " ":"") + v;}function ensureMiniModal(){const cw = document.getElementById("chatwrap") || document.body;let modal = document.getElementById("btfw-ct-modal");if (!modal){modal = document.createElement("div");modal.id = "btfw-ct-modal";cw.appendChild(modal);}modal.innerHTML = ` <div class="btfw-ct-card"> <div class="btfw-ct-cardhead"> <span>Chat Tools</span> <button class="btfw-ct-close" aria-label="Close">&times;</button> </div> <div class="btfw-ct-body"> <!-- BBCode grid --> <div class="btfw-ct-grid"> <button class="btfw-ct-item" data-tag="b"><strong>B</strong><span>Bold</span></button> <button class="btfw-ct-item" data-tag="i"><em>I</em><span>Italic</span></button> <button class="btfw-ct-item" data-tag="u"><u>U</u><span>Underline</span></button> <button class="btfw-ct-item" data-tag="s"><span style="text-decoration:line-through">S</span><span>Strike</span></button> <button class="btfw-ct-item" data-tag="spoiler"><span>🙈</span><span>Spoiler</span></button> </div> <!-- Color tools --> <div class="btfw-ct-color"> <label class="btfw-ct-keep"> <input type="checkbox" id="btfw-ct-keepcolor"> Keep color </label> <div class="btfw-ct-swatch" id="btfw-ct-swatch"></div> <div class="btfw-ct-hexrow" style="display:flex;gap:6px;align-items:center;margin-top:6px;"> <input id="btfw-ct-hex" type="text" placeholder="#rrggbb" maxlength="7" class="input is-small" style="max-width:120px;" /> <button id="btfw-ct-insertcolor" class="button is-small">Insert</button> <button id="btfw-ct-clearcolor" class="button is-small">Clear Keep</button> </div> </div> <!-- Actions --> <div class="btfw-ct-actions" style="display:flex;gap:6px;margin-top:8px;"> <button class="btfw-ct-item button is-small" data-act="clear">Clear</button> <button class="btfw-ct-item button is-small" data-act="afk">AFK</button> </div> </div> </div> `;modal.style.background = "transparent";modal.style.pointerEvents = "none";modal.classList.add("hidden");(function syncKeepColorUI(){const keep = $("#btfw-ct-keepcolor");const hexEl = $("#btfw-ct-hex");const stored = (getStickColor && getStickColor()) || "";if (keep) keep.checked = !!stored;if (hexEl && stored) hexEl.value = stored;})();const card = modal.querySelector(".btfw-ct-card");if (card){card.classList.add("btfw-popover");card.style.pointerEvents = "auto";}const sw = document.querySelector("#btfw-ct-swatch");if (sw && !sw.hasChildNodes()){COLORS.forEach(c =>{const b = document.createElement("button");b.className = "btfw-ct-swatchbtn";b.style.background = c;b.dataset.color = c;sw.appendChild(b);});}return modal;}function openMiniModal(){const m = ensureMiniModal();if (!m) return;(function syncKeepColorUI(){const keep = document.getElementById("btfw-ct-keepcolor");const hexEl = document.getElementById("btfw-ct-hex");const stored = (typeof getStickColor === "function" && getStickColor()) || "";if (keep) keep.checked = !!stored;if (hexEl && stored) hexEl.value = stored;if (keep && keep.checked && !stored) keep.checked = false;})();positionMiniModal();m.classList.remove("hidden");m.classList.add("is-active");}function closeMiniModal(){const m = $("#btfw-ct-modal");if (m){m.classList.add("hidden");m.classList.remove("is-active");}}function positionMiniModal(){const m = document.getElementById("btfw-ct-modal");if (!m) return;const card = m.querySelector(".btfw-ct-card");if (!card) return;if (window.BTFW_positionPopoverAboveChatBar){window.BTFW_positionPopoverAboveChatBar(card,{widthPx:420,widthVw:92,maxHpx:360,maxHvh:60});return;}const c = (document.getElementById("chatcontrols") || document.getElementById("chat-controls") || (document.getElementById("chatline") && document.getElementById("chatline").parentElement));if (!c) return;const bottom = (c.offsetHeight || 48) + 12;card.style.position = "fixed";card.style.right = "8px";card.style.bottom = bottom + "px";card.style.maxHeight = "60vh";card.style.width = "min(420px,92vw)";}function ensureActionsButton(){const actions = $("#chatwrap .btfw-chat-bottombar #btfw-chat-actions");if (!actions) return;if ($("#btfw-chattools-btn") || $("#btfw-ct-open")) return;const b = document.createElement("button");b.id = "btfw-chattools-btn";b.className = "button is-dark is-small btfw-chatbtn";b.innerHTML = '<span style="font-weight:700;letter-spacing:.5px;">Aa</span>';const insertBefore = actions.querySelector("#btfw-chatcmds-btn") || actions.querySelector("#btfw-users-toggle") || actions.querySelector("#usercount");actions.insertBefore(b,insertBefore || null);}function getHist(){try{return JSON.parse(localStorage.getItem(LS.hist)||"[]");}catch(e){return [];}}function setHist(a){try{localStorage.setItem(LS.hist,JSON.stringify(a.slice(-50)));}catch(e){}}let histIndex = -1;function commitToHist(text){if (!text) return;const h = getHist();if (h[h.length-1] !== text){h.push(text);setHist(h);}histIndex = -1;}function histUpDown(dir){const l = chatline();if (!l) return;const h = getHist();if (!h.length) return;if (histIndex === -1) histIndex = h.length;histIndex += (dir<0 ? -1:+1);histIndex = Math.max(0,Math.min(h.length-1,histIndex));l.value = h[histIndex] || "";l.focus();l.setSelectionRange(l.value.length,l.value.length);}function wire(){if (window._btfwChatToolsWired) return;window._btfwChatToolsWired = true;ensureActionsButton();ensureMiniModal();const toolsBtn = $("#btfw-chattools-btn") || $("#btfw-ct-open");if (toolsBtn){toolsBtn.addEventListener("click",(e)=>{e.preventDefault();e.stopPropagation();e.stopImmediatePropagation();const m = $("#btfw-ct-modal");const isOpen = m && !m.classList.contains("hidden");if (isOpen) closeMiniModal();else openMiniModal();},{capture:true});}document.addEventListener("click",(e) =>{if (e.target.closest && e.target.closest(".btfw-ct-close")){e.preventDefault();closeMiniModal();return;}const inCard = e.target.closest && e.target.closest("#btfw-ct-modal .btfw-ct-card");const bb = e.target.closest && e.target.closest(".btfw-ct-item[data-tag]");if (bb && inCard){e.preventDefault();wrapWithTag(bb.dataset.tag);closeMiniModal();return;}const afk = e.target.closest && e.target.closest('.btfw-ct-item[data-act="afk"]');if (afk && inCard){e.preventDefault();if (window.socket?.emit) window.socket.emit("chatMsg",{msg:"/afk"});closeMiniModal();return;}const clr = e.target.closest && e.target.closest('.btfw-ct-item[data-act="clear"]');if (clr && inCard){e.preventDefault();const mb = $("#messagebuffer");if (mb) mb.innerHTML = "";closeMiniModal();return;}const swb = e.target.closest && e.target.closest(".btfw-ct-swatchbtn");if (swb && inCard){e.preventDefault();const swHex = normalizeHex(swb.dataset.color || "");const hexEl = $("#btfw-ct-hex");if (hexEl) hexEl.value = swHex;const keep = $("#btfw-ct-keepcolor");if (keep && keep.checked) setStickColor(swHex);return;}if (e.target && e.target.id === "btfw-ct-insertcolor" && inCard){e.preventDefault();const hexEl = $("#btfw-ct-hex");const hex = normalizeHex((hexEl?.value || "").trim());if (hex){applyColPrefix(hex);const keep = $("#btfw-ct-keepcolor");if (keep && keep.checked) setStickColor(hex);closeMiniModal();}return;}if (e.target && e.target.id === "btfw-ct-clearcolor" && inCard){e.preventDefault();setStickColor("");const keep = $("#btfw-ct-keepcolor");if (keep) keep.checked = false;return;}if (!inCard && !e.target.closest("#btfw-chattools-btn") && !e.target.closest("#btfw-ct-open")){closeMiniModal();return;}},true);document.addEventListener("change",(e)=>{if (e.target && e.target.id === "btfw-ct-keepcolor"){const hexEl = $("#btfw-ct-hex");const hex = normalizeHex((hexEl?.value || "").trim());if (e.target.checked){if (hex){setStickColor(hex);}else{setStickColor("");e.target.checked = false;}}else{setStickColor("");}return;}},true);document.addEventListener("input",(e)=>{if (e.target && e.target.id === "btfw-ct-hex"){const keep = $("#btfw-ct-keepcolor");if (keep && keep.checked){const val = normalizeHex((e.target.value || "").trim());setStickColor(val);}}},true);document.addEventListener("keydown",(e)=>{if (e.key === "Escape") closeMiniModal();},true);const l = chatline();if (l){l.addEventListener("keydown",(ev)=>{if (ev.key === "Enter" && !ev.shiftKey){applyStickyColorBeforeSend();commitToHist(l.value.trim());}if (ev.key === "ArrowUp" && !ev.shiftKey && l.selectionStart===l.selectionEnd && l.selectionStart===0){ev.preventDefault();histUpDown(-1);}if (ev.key === "ArrowDown" && !ev.shiftKey && l.selectionStart===l.selectionEnd && l.selectionStart===l.value.length){ev.preventDefault();histUpDown(+1);}});}window.addEventListener("resize",positionMiniModal);$("#chatwrap")?.addEventListener("scroll",positionMiniModal,{passive:true});}function boot(){wire();positionMiniModal();}document.addEventListener("btfw:layoutReady",()=>setTimeout(boot,0));if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();return{name:"feature:chat-tools"};});BTFW.define("feature:chat-filters",[],async () =>{const customFilters = [{name:"monospace",source:"`(.+?)`",flags:"g",replace:"<code>\\1</code>",active:true,filterlinks:false},{name:"bold",source:"\\*(.+?)\\*",flags:"g",replace:"<strong>\\1</strong>",active:true,filterlinks:false},{name:"italic",source:"_(.+?)_",flags:"g",replace:"<em>\\1</em>",active:true,filterlinks:false},{name:"strike",source:"~~(.+?)~~",flags:"g",replace:"<s>\\1</s>",active:true,filterlinks:false},{name:"inline spoiler",source:"\\[sp\\](.*?)\\[\\/sp\\]",flags:"gi",replace:"<span class=\"spoiler\">\\1</span>",active:true,filterlinks:false},{name:"partial quote",source:"&gt;(.+?)$",flags:"g",replace:"<span class=\"quote\">&gt;\\1 </span>",active:true,filterlinks:false},{name:"italic text",source:"\\[i\\](.+?)\\[\\/i\\]",flags:"g",replace:"<em>\\1</em>",active:true,filterlinks:false},{name:"monospace text",source:"\\[code\\](.+?)\\[\\/code\\]",flags:"gi",replace:"<code>\\1</code>",active:true,filterlinks:false},{name:"bold text",source:"\\[b\\](.+?)\\[\\/b\\]",flags:"gi",replace:"<strong>\\1</strong>",active:true,filterlinks:false},{name:"striked text",source:"\\[s\\](.+?)\\[\\/s\\]",flags:"gi",replace:"<s>\\1</s>",active:true,filterlinks:false},{name:"short spoiler",source:"\\[sp\\]",flags:"g",replace:"<span class=\"spoiler\">",active:true,filterlinks:false},{name:"closing font style",source:"\\[\\/\\]",flags:"g",replace:"<span>",active:true,filterlinks:false},{name:"chat colors (premium)",source:"col:(.*?):",flags:"g",replace:"<span style=\"color:\\1\" class=\"chatcolor\">",active:true,filterlinks:false},{name:"giphy",source:"https?://(?|media\\d\\.giphy\\.com/media/(?:[^/]+/)?([^ /\\n]+)/giphy\\.gif|i\\.giphy\\.com/([^ /\\n]+)\\.gif|giphy\\.com/gifs/(?:.*-)?([^ /\\n]+))",flags:"gi",replace:"<img class=\"giphy chat-picture\" src=\"https://media.giphy.com/media/\\1/200_s.gif\" />",active:true,filterlinks:true},{name:"tenor",source:"(https?://media\\.tenor\\.com/[^\\s]+\\.gif)",flags:"gi",replace:"<img class=\"tenor chat-picture\" src=\"\\0\" />",active:true,filterlinks:true},{name:"TMDB",source:"\\[tmdbcard\\]([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^\\[]+)\\[\\/tmdbcard\\]",flags:"g",replace:"<div class=\"tmdb-card\"><img class=\"tmdb-card__poster\" src=\"https://image.tmdb.org/t/p/w342\\5\" alt=\"\\1 poster\" onerror=\"this.style.display='none'\"><div class=\"tmdb-card__content\"><div class=\"tmdb-card__title\">\\1 <span class=\"tmdb-card__year\">(\\2)</span></div><div class=\"tmdb-card__rating\">★ \\3</div><div class=\"tmdb-card__overview\">\\4</div></div></div>",active:true,filterlinks:true}];function getjQuery(){if (window.jQuery && typeof window.jQuery === "function"){return window.jQuery;}if (window.$ && typeof window.$ === "function"){return window.$;}return null;}function importCustomChatFiltersToTextarea($){const exportTextField = $("#cs-chatfilters-exporttext");if (!exportTextField || !exportTextField.length){console.error("[BTFW chat-filters] Unable to find export text field.");return;}try{exportTextField.val(JSON.stringify(customFilters,null,2));console.info("[BTFW chat-filters] Imported custom chat filters into text field.",customFilters);}catch (error){console.error("[BTFW chat-filters] Error serializing custom filters:",error);}}function addChatFilterButton($){const chatFilterMenu = $("#cs-chatfilters");if (!chatFilterMenu || !chatFilterMenu.length){console.error("[BTFW chat-filters] Chat filter menu not found.");return;}if (chatFilterMenu.find("#btfw-add-custom-filter-button").length){return;}const newFilterButton = $( '<button id="btfw-add-custom-filter-button" class="btn btn-sm btn-primary" style="margin-top:10px;">Import Required BillTube Chat Filters</button>' );newFilterButton.on("click",function (event){event.preventDefault();importCustomChatFiltersToTextarea($);});chatFilterMenu.append(newFilterButton);}function init(){const $ = getjQuery();if (!$){console.warn("[BTFW chat-filters] jQuery not available;cannot attach import button.");return;}const run = () => addChatFilterButton($);if (document.readyState === "loading"){document.addEventListener("DOMContentLoaded",run,{once:true});}else{run();}}init();return{importCustomChatFiltersToTextarea:($) => importCustomChatFiltersToTextarea($ || getjQuery())};});BTFW.define("feature:chat-username-colors",[],async () =>{const $ = (s,r=document)=>r.querySelector(s);const $$ = (s,r=document)=>Array.from(r.querySelectorAll(s));const LS = "btfw:chat:unameColors";function getEnabled(){try{return (localStorage.getItem(LS) ?? "1")==="1";}catch(_){return true;}}function setEnabled(v){try{localStorage.setItem(LS,v?"1":"0");}catch(_){}applyAll();}const PALETTE = [ "#6D4DF6","#2CB1BC","#F29D49","#E85D75","#5AC26A","#B980F0","#59A1FF","#ED6A5E","#F2C94C","#00B894","#E84393","#0984E3","#55EFC4","#FAB1A0","#A29BFE" ];function pickColor(name){let h=0;for (let i=0;i<name.length;i++){h = Math.imul(31,h) + name.charCodeAt(i) | 0;}const idx = Math.abs(h) % PALETTE.length;return PALETTE[idx];}function colorFor(name){const li = findUserlistItem(name);const color = li?.getAttribute?.("data-color") || li?.style?.color || null;return color || pickColor(name);}function findUserlistItem(name){if (!name) return null;const byData = document.querySelector(`#userlist li[data-name="${CSS.escape(name)}"]`);if (byData) return byData;const items = document.querySelectorAll("#userlist li,#userlist .userlist_item,#userlist .user");for (const el of items){const t = (el.textContent || "").trim();if (t && t.replace(/\s+/g,"").toLowerCase().startsWith(name.toLowerCase())) return el;}return null;}function tint(el,name){if (!el || !name) return;const on = getEnabled();if (!on){el.style.removeProperty("--btfw-name-color");el.classList.remove("btfw-username-colored");return;}const c = colorFor(name);el.style.setProperty("--btfw-name-color",c);el.classList.add("btfw-username-colored");}function processNode(node){if (!node) return;const list = node.matches?.(".username") ? [node]:(node.querySelectorAll?.(".username") || []);list.forEach(u =>{const raw = (u.textContent || "").trim();const name = raw.replace(/:\s*$/,"");if (!name) return;tint(u,name);});}function applyAll(){const buf = document.getElementById("messagebuffer");if (buf) processNode(buf);}function boot(){applyAll();const buf = document.getElementById("messagebuffer");if (buf && !buf._btfwNameColorMO){const mo = new MutationObserver(muts=>{for (const m of muts){if (m.type==="childList" && m.addedNodes){m.addedNodes.forEach(n =>{if (n.nodeType===1) processNode(n);});}}});mo.observe(buf,{childList:true,subtree:true});buf._btfwNameColorMO = mo;}}if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();return{name:"feature:chat-username-colors",getEnabled,setEnabled,reapply:applyAll};});BTFW.define("feature:chatMedia",[],async () =>{const $ = (s,r=document)=>r.querySelector(s);const $$ = (s,r=document)=>Array.from(r.querySelectorAll(s));const LS_SIZE = "btfw:chat:emoteSize";const LS_AUTO = "btfw:chat:gifAutoplay";// "1" | "0" const SIZE_PX ={sm:100,md:130,lg:170};const SEL = "#messagebuffer img.giphy.chat-picture,#messagebuffer img.tenor.chat-picture";function getSize(){try{return localStorage.getItem(LS_SIZE) || "md";}catch(_){return "md";}}function setSize(v){if (!SIZE_PX[v]) v = "md";try{localStorage.setItem(LS_SIZE,v);}catch(_){}applySize(v);}function getAutoplay(){try{return localStorage.getItem(LS_AUTO) ?? "1";}catch(_){return "1";}}function setAutoplay(on){try{localStorage.setItem(LS_AUTO,on ? "1":"0");}catch(_){}applyAutoplay();}function applySize(mode){const px = SIZE_PX[mode] || SIZE_PX.md;document.documentElement.style.setProperty("--btfw-emote-size",px + "px");$$(SEL).forEach(forceSizeOn);}const isGiphy = (img)=> img.classList.contains("giphy") || /media\d\.giphy\.com\/media\/.+\/.+\.gif/i.test(img.src);const isTenor = (img)=> img.classList.contains("tenor") || /media\.tenor\.com\/.+\.gif/i.test(img.src);const toAnimated = (src)=> src.replace(/\/200_s\.gif$/i,"/200.gif");const toStatic = (src)=> src.replace(/\/200\.gif$/i,"/200_s.gif");function ensureTagged(img){if (!img.classList.contains("channel-emote")) img.classList.add("channel-emote");}function setSrcIfDifferent(img,next){if (next && img.src !== next) img.src = next;}function forceSizeOn(img){if (img.hasAttribute("width")) img.removeAttribute("width");if (img.hasAttribute("height")) img.removeAttribute("height");const v = "var(--btfw-emote-size)";img.style.setProperty("width","auto","important");img.style.setProperty("height","auto","important");img.style.setProperty("max-width",v,"important");img.style.setProperty("max-height",v,"important");img.style.setProperty("object-fit","contain");img.style.setProperty("vertical-align","middle");img.style.setProperty("border-radius","8px");img.style.setProperty("margin","2px 3px");}function wireOne(img){ensureTagged(img);forceSizeOn(img);if (!img._btfwWired){img._btfwWired = true;}const auto = getAutoplay() === "1";if (isGiphy(img)){if (auto){setSrcIfDifferent(img,toAnimated(img.src));img.onmouseenter = null;img.onmouseleave = null;}else{setSrcIfDifferent(img,toStatic(img.src));img.onmouseenter = () =>{setSrcIfDifferent(img,toAnimated(img.src));};img.onmouseleave = () =>{setSrcIfDifferent(img,toStatic(img.src));};}}else if (isTenor(img)){img.onmouseenter = null;img.onmouseleave = null;}}function processNode(node){if (!node) return;const direct = (node.matches && node.matches(SEL)) ? [node]:[];const list = direct.length ? direct:(node.querySelectorAll ? node.querySelectorAll(SEL):[]);list.forEach(wireOne);}function applyAutoplay(){$$(SEL).forEach(wireOne);}function boot(){const buf = $("#messagebuffer");if (buf) processNode(buf);if (buf && !buf._btfwMediaMO){const mo = new MutationObserver(muts=>{for (const m of muts){if (m.type === "childList" && m.addedNodes){m.addedNodes.forEach(n =>{if (n.nodeType===1) processNode(n);});}}});mo.observe(buf,{childList:true,subtree:true});buf._btfwMediaMO = mo;}applySize(getSize());applyAutoplay();console.log("[BTFW] chatMedia ready (runtime sizing)");}if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();return{name:"feature:chatMedia",setEmoteSize:setSize,getEmoteSize:getSize,setGifAutoplayOn:setAutoplay,getGifAutoplayOn:()=> getAutoplay()==="1"};});BTFW.define("feature:chat-avatars",[],async () =>{const $ = (s,r=document)=>r.querySelector(s);const $$ = (s,r=document)=>Array.from(r.querySelectorAll(s));const AVATAR_KEY = "btfw:chat:avatars";const avatarCache = new Map();const MAX_CACHE_SIZE = 500;function loadMode(){try{const stored = localStorage.getItem(AVATAR_KEY);if (stored === "off" || stored === "big" || stored === "small") return stored;}catch(_){}return "big";}function saveMode(mode){try{localStorage.setItem(AVATAR_KEY,mode);}catch(_){}}let currentMode = loadMode();function getProfileImgFromUserlist(name){try{const li = findUserlistItem(name);if (!li || !window.jQuery) return "";const $li = window.jQuery(li);const prof = $li.data && $li.data("profile");const img = prof && prof.image;return img || "";}catch(_){return "";}}function findUserlistItem(name){if (!name) return null;const byData = document.querySelector(`#userlist li[data-name="${CSS.escape(name)}"]`);if (byData) return byData;const items = document.querySelectorAll("#userlist li,#userlist .userlist_item,#userlist .user");for (const el of items){const t = (el.textContent || "").trim();if (t && t.replace(/\s+/g,"").toLowerCase().startsWith(name.toLowerCase())) return el;}return null;}function getCyTubeAvatarMaybe(name){return "";}function initialsDataURL(name,sizePx){const cacheKey = `${name}-${sizePx}`;if (avatarCache.has(cacheKey)){return avatarCache.get(cacheKey);}const colors = ["#1abc9c","#16a085","#f1c40f","#f39c12","#2ecc71","#27ae60","#e67e22","#d35400","#3498db","#2980b9","#e74c3c","#c0392b","#9b59b6","#8e44ad","#0080a5","#34495e","#2c3e50","#87724b","#7300a7","#ec87bf","#d870ad","#f69785","#9ba37e","#b49255","#a94136"];const c = (name||"?").trim();const first = (c.codePointAt(0)||63) % colors.length;const bg = colors[first];const letters = c.slice(0,2).toUpperCase();const sz = sizePx || 24;const svg = `<svg xmlns="http://www.w3.org/2000/svg" width="${sz}" height="${sz}"><rect width="100%" height="100%" fill="${bg}"/><text x="50%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="#fff" font-family="Inter,Arial,sans-serif" font-size="${Math.round(sz*0.5)}" font-weight="600">${letters}</text></svg>`;const dataUrl = "data:image/svg+xml;base64," + btoa(unescape(encodeURIComponent(svg)));if (avatarCache.size >= MAX_CACHE_SIZE){const firstKey = avatarCache.keys().next().value;avatarCache.delete(firstKey);}avatarCache.set(cacheKey,dataUrl);return dataUrl;}function ensureAvatar(msgEl){if (currentMode === "off") return;const uEl = msgEl.querySelector(".username");if (!uEl) return;const raw = (uEl.textContent || "").trim();const name = raw.replace(/:\s*$/,"");if (!name) return;if (msgEl.querySelector(".btfw-chat-avatar")) return;const size = getComputedStyle(document.documentElement).getPropertyValue("--btfw-avatar-size").trim() || "24px";const px = parseInt(size,10) || 24;let src = getProfileImgFromUserlist(name) || getCyTubeAvatarMaybe(name);if (!src) src = initialsDataURL(name,px);const img = document.createElement("img");img.className = "btfw-chat-avatar";img.src = src;img.alt = name;img.loading = "lazy";img.decoding = "async";const wrap = document.createElement("span");wrap.className = "btfw-chat-avatarwrap";wrap.appendChild(img);uEl.parentNode.insertBefore(wrap,uEl);msgEl.classList.add("btfw-has-avatar");}let lastSender = null;function compactIfConsecutive(msgEl){if (!msgEl) return;const uEl = msgEl.querySelector(".username");const avatar = msgEl.querySelector(".btfw-chat-avatarwrap");const classes = Array.from(msgEl.classList || []);const isChatMessage = classes.some(cls => cls === "chat-msg" || cls.startsWith("chat-msg-")) || !!avatar;if (!isChatMessage) return;if (!uEl){lastSender = null;return;}const name = (uEl.textContent || "").trim().replace(/:\s*$/,"");if (!name || !avatar){lastSender = null;return;}const consecutive = currentMode !== "off" && lastSender && lastSender === name;msgEl.classList.toggle("btfw-compact",consecutive);avatar.style.display = consecutive ? "none":"";lastSender = name;}function processNode(node){if (!node) return;const msgs = (node.matches && node.matches("#messagebuffer > div")) ? [node]:(node.querySelectorAll ? node.querySelectorAll("#messagebuffer > div"):[]);msgs.forEach(m =>{ensureAvatar(m);compactIfConsecutive(m);});}function reflowAll(){if (currentMode === "off"){removeAllAvatars();return;}lastSender = null;const buf = document.getElementById("messagebuffer");if (!buf) return;const msgs = Array.from(buf.children || []);msgs.forEach(m =>{ensureAvatar(m);compactIfConsecutive(m);});}function removeAllAvatars(){lastSender = null;const buf = document.getElementById("messagebuffer");if (!buf) return;buf.querySelectorAll(".btfw-chat-avatarwrap").forEach(el => el.remove());buf.querySelectorAll(".btfw-has-avatar").forEach(el => el.classList.remove("btfw-has-avatar","btfw-compact"));}function applyMode(mode){const chatwrap = document.getElementById("chatwrap");if (chatwrap){chatwrap.classList.remove("btfw-avatars-off","btfw-avatars-small","btfw-avatars-big");chatwrap.classList.add(`btfw-avatars-${mode}`);}const size = mode === "big" ? 40:mode === "off" ? 0:28;document.documentElement.style.setProperty("--btfw-avatar-size",`${size}px`);if (size > 0){document.querySelectorAll("#messagebuffer .btfw-chat-avatar").forEach(img =>{if (!img.hasAttribute("loading")) img.loading = "lazy";if (!img.hasAttribute("decoding")) img.decoding = "async";});}}function setMode(mode){const normalized = (mode === "off" || mode === "big") ? mode:"small";currentMode = normalized;applyMode(normalized);if (normalized === "off"){removeAllAvatars();}else{reflowAll();}saveMode(normalized);}function getMode(){return currentMode;}function boot(){applyMode(currentMode);reflowAll();const buf = document.getElementById("messagebuffer");if (buf && !buf._btfwAvMO){const mo = new MutationObserver(muts=>{for (const m of muts){if (m.type==="childList" && m.addedNodes){m.addedNodes.forEach(n =>{if (n.nodeType===1) processNode(n);});}}});mo.observe(buf,{childList:true,subtree:false});buf._btfwAvMO = mo;}}if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();return{name:"feature:chat-avatars",reflow:reflowAll,setMode,getMode,getCacheStats:() => ({size:avatarCache.size,maxSize:MAX_CACHE_SIZE})};});BTFW.define("feature:chat-timestamps",[],async () =>{const $ = (s,r=document)=>r.querySelector(s);const $$ = (s,r=document)=>Array.from(r.querySelectorAll(s));const LS_SHOW = "btfw:chat:ts:show";const LS_FORMAT = "btfw:chat:ts:fmt";function getShow(){try{return (localStorage.getItem(LS_SHOW) ?? "1")==="1";}catch(_){return true;}}function setShow(v){try{localStorage.setItem(LS_SHOW,v?"1":"0");}catch(_){}applyVisibility(v);}function getFmt(){try{return localStorage.getItem(LS_FORMAT) || "24";}catch(_){return "24";}}function setFmt(f){try{localStorage.setItem(LS_FORMAT,f);}catch(_){}reformatAll(f);}function applyVisibility(on){document.body.classList.toggle("btfw-ts-hide",!on);}function reformatOne(tEl,fmt){if (!tEl) return;const raw = (tEl.textContent||"").trim();const m = raw.match(/^\[([^\]]+)\]$/);if (!m) return;const s = m[1].trim();let hh=0,mm=0,ampm=null;let m1 = s.match(/^(\d{1,2}):(\d{2})\s*(AM|PM)$/i);if (m1){hh = parseInt(m1[1],10);mm = parseInt(m1[2],10);ampm = m1[3].toUpperCase();}else{let m2 = s.match(/^(\d{1,2}):(\d{2})$/);if (!m2) return;hh = parseInt(m2[1],10);mm = parseInt(m2[2],10);}let out="";if (fmt==="12"){let h = hh % 12;if (h===0) h=12;const mer = (ampm ? ampm:(hh>=12?"PM":"AM"));out = `[${h}:${String(mm).padStart(2,"0")}${mer}]`;}else{let h = hh;if (ampm==="AM" && hh===12) h=0;if (ampm==="PM" && hh<12) h=hh+1*12;out = `[${String(h).padStart(2,"0")}:${String(mm).padStart(2,"0")}]`;}if (out !== raw) tEl.textContent = out;}function reformatAll(fmt){$$("#messagebuffer .timestamp").forEach(t => reformatOne(t,fmt));}function processNode(n){if (!n) return;const ts = n.matches?.(".timestamp") ? [n]:(n.querySelectorAll?.(".timestamp")||[]);ts.forEach(t => reformatOne(t,getFmt()));}function boot(){applyVisibility(getShow());reformatAll(getFmt());const buf = $("#messagebuffer");if (buf && !buf._btfwTsMO){const mo = new MutationObserver(muts=>{for (const m of muts){if (m.type==="childList" && m.addedNodes){m.addedNodes.forEach(n =>{if (n.nodeType===1) processNode(n);});}}});mo.observe(buf,{childList:true,subtree:true});buf._btfwTsMO = mo;}}if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();return{name:"feature:chat-timestamps",getShow,setShow,getFmt,setFmt,reapply:()=>{applyVisibility(getShow());reformatAll(getFmt());}};});BTFW.define("feature:chat-ignore",[],async () =>{const $ = (s,r=document)=>r.querySelector(s);const $$ = (s,r=document)=>Array.from(r.querySelectorAll(s));const LS = "btfw:chat:ignore";// JSON array of names (case-insensitive store) function loadSet(){try{const raw = localStorage.getItem(LS);const arr = raw ? JSON.parse(raw):[];return new Set(arr.map(v=>String(v).toLowerCase()));}catch(_){return new Set();}}function saveSet(set){try{localStorage.setItem(LS,JSON.stringify(Array.from(set)));}catch(_){}}let IG = loadSet();function has(name){return IG.has((name||"").toLowerCase());}function add(name){if (!name) return;IG.add(name.toLowerCase());saveSet(IG);markUserlist(name,true);}function remove(name){if (!name) return;IG.delete(name.toLowerCase());saveSet(IG);markUserlist(name,false);}function toggle(name){has(name) ? remove(name):add(name);}function userFromMsg(el){const u = el.querySelector(".username");if (!u) return "";return (u.textContent||"").trim().replace(/:\s*$/,"");}function processNewMessage(el){const name = userFromMsg(el);if (name && has(name)){el.style.display = "none";}}function rescanBuffer(){const buf = $("#messagebuffer");if (!buf) return;Array.from(buf.children).forEach(processNewMessage);}function markUserlist(name,muted){const li = document.querySelector(`#userlist li[data-name="${CSS.escape(name)}"]`) || null;(li||{}).classList?.toggle("btfw-muted",!!muted);}function wireUserlistActions(){const ul = $("#userlist");if (!ul || ul._btfwIgnoreWired) return;ul._btfwIgnoreWired = true;const decorate = (root)=>{const items = root.querySelectorAll("li");items.forEach(li=>{if (li._btfwMuteChip) return;li._btfwMuteChip = true;const name = li.getAttribute("data-name") || (li.textContent||"").trim();if (!name) return;const chip = document.createElement("button");chip.type = "button";chip.className = "btfw-mute-chip";chip.textContent = has(name) ? "Unmute":"Mute";chip.addEventListener("click",(e)=>{e.preventDefault();e.stopPropagation();toggle(name);chip.textContent = has(name) ? "Unmute":"Mute";rescanBuffer();});li.appendChild(chip);li.classList.toggle("btfw-muted",has(name));});};decorate(ul);const mo = new MutationObserver(muts=>{muts.forEach(m=>{if (m.addedNodes) m.addedNodes.forEach(n=>{if (n.nodeType===1) decorate(n);});});});mo.observe(ul,{childList:true,subtree:true});}function boot(){rescanBuffer();const buf = $("#messagebuffer");if (buf && !buf._btfwIgnoreMO){const mo = new MutationObserver(muts=>{muts.forEach(m=>{if (m.addedNodes) m.addedNodes.forEach(n=>{if (n.nodeType===1) processNewMessage(n);});});});mo.observe(buf,{childList:true,subtree:false});buf._btfwIgnoreMO = mo;}wireUserlistActions();}if (document.readyState==="loading") document.addEventListener("DOMContentLoaded",boot);else boot();return{name:"feature:chat-ignore",has,add,remove,toggle,list:()=>Array.from(IG)};});BTFW.define("feature:chat-commands",[],async () =>{const $ = (s,r=document)=>r.querySelector(s);const $$ = (s,r=document)=>Array.from(r.querySelectorAll(s));const now = ()=>Date.now();function sendChat(msg){try{if (window.socket?.emit){socket.emit("chatMsg",{msg});return true;}}catch(_){}return false;}function sysLocal(text){const buf = $("#messagebuffer");if (!buf) return;const d = document.createElement("div");d.className = "server-msg btfw-cmd";d.textContent = text;buf.appendChild(d);buf.scrollTop = buf.scrollHeight;}function getUser(){try{return (window.CLIENT && CLIENT.name) ? CLIENT.name:"";}catch(_){return "";}}function getRank(){try{return (window.CLIENT && (CLIENT.rank|0)) || 0;}catch(_){return 0;}}function hasRank(min){return getRank() >= min;}function clamp(n,a,b){return Math.min(b,Math.max(a,n));}function norm(s){return String(s||"").toLowerCase().replace(/['".,;:!?()\[\]{}]/g,"").replace(/\s+/g," ").trim();}function getCurrentTitle(){const ct = document.getElementById('currenttitle') || document.querySelector('.currenttitle');let t = (ct?.textContent || "").trim();t = t.replace(/^\s*(?:currently|now)\s*playing\s*[:\-]\s*/i,"").trim();return t;}const workerUrl = 'https://trivia-worker.billtube.workers.dev';const triviaAPIUrl = 'https://opentdb.com/api.php?amount=1&type=multiple';let triviaActive=false,correctAnswer='',answeredUsers=new Set(),triviaTimeoutId=null;function decodeHTMLEntities(text){const t=document.createElement('textarea');t.innerHTML=text;return t.value;}function stylizeUsername(u){const map={'a':'a','b':'b','c':'c','d':'d','e':'e','f':'f','g':'g','h':'h','i':'i','j':'j','k':'k','l':'l','m':'m','n':'n','o':'o','p':'p','q':'q','r':'r','s':'s','t':'t','u':'u','v':'v','w':'w','x':'x','y':'y','z':'z','A':'A','B':'B','C':'C','D':'D','E':'E','F':'F','G':'G','H':'H','I':'I','J':'J','K':'K','L':'L','M':'M','N':'N','O':'O','P':'P','Q':'Q','R':'R','S':'S','T':'T','U':'U','V':'V','W':'W','X':'X','Y':'Y','Z':'Z'};return String(u||"").split("").map(ch=>map[ch]||ch).join("");}async function updateScore(username){try{await fetch(`${workerUrl}/updateScore`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username})});}catch(e){console.error('[trivia] updateScore failed:',e);}}async function displayLeaderboard(){try{const res = await fetch(`${workerUrl}/leaderboard`);const leaderboard = await res.json();let message = '🎉 Leaderboard:\n';leaderboard.forEach(({username,score}) =>{message += `${stylizeUsername(username)}:${score}points\n`;});sendChat(message);}catch(e){console.error('[trivia] leaderboard failed:',e);}}async function fetchTriviaQuestion(){try{const response = await fetch(triviaAPIUrl);const data = await response.json();if (data.results && data.results.length > 0){const q = data.results[0];correctAnswer = decodeHTMLEntities(q.correct_answer.toLowerCase());const all = [...q.incorrect_answers,q.correct_answer].map(decodeHTMLEntities).sort(()=>Math.random()-0.5);const colors = ["#ffa500","#ff4500","#1e90ff","#32cd32"];const colored = all.map((ans,i)=>`col:${colors[i%colors.length]}:${ans}`);const question = decodeHTMLEntities(q.question);return `🎬 [code]Trivia:${question}[/code] \nOptions:${colored.join(',')}`;}return '[i]No trivia question available at the moment.[/i]';}catch(e){console.error('[trivia] OpenTDB error:',e);return 'Error fetching trivia question. Please try again later.';}}async function startTriviaOnce(){if (!hasRank(2)) return 'col:#a52a2a:You do not have permission to start a trivia question.';if (triviaActive) return 'col:#a52a2a:A trivia question is already active!';const q = await fetchTriviaQuestion();triviaActive = true;answeredUsers.clear();sendChat('!trivia');sendChat(q);clearTimeout(triviaTimeoutId);triviaTimeoutId = setTimeout(()=>{if (triviaActive){triviaActive=false;sendChat(`col:#a52a2a:⏰ Time's up! The correct answer was:${correctAnswer}`);}},30000);return '';}function onIncomingChatMsg(data){const username = data?.username || '';const message = (data?.msg || '').trim();if (!triviaActive || !username || !message) return;if (answeredUsers.has(username)) return;if (message.toLowerCase() === correctAnswer){answeredUsers.add(username);triviaActive=false;clearTimeout(triviaTimeoutId);updateScore(username).then(()=> displayLeaderboard()).catch(()=>{});sendChat(`col:#008000:🎉 ${username}got the right answer! Their score has been updated.`);}}function getTMDBKey(){try{const cfg = (window.BTFW_CONFIG && typeof window.BTFW_CONFIG === "object") ? window.BTFW_CONFIG:{};const tmdbObj = (cfg.tmdb && typeof cfg.tmdb === "object") ? cfg.tmdb:{};const cfgKey = typeof tmdbObj.apiKey === "string" ? tmdbObj.apiKey.trim():"";const legacyCfg = typeof cfg.tmdbKey === "string" ? cfg.tmdbKey.trim():"";let lsKey = "";try{lsKey = (localStorage.getItem("btfw:tmdb:key") || "").trim();}catch(_){}const g = v => (v==null ? "":String(v)).trim();const globalKey = g(window.TMDB_API_KEY) || g(window.BTFW_TMDB_KEY) || g(window.tmdb_key);const bodyKey = (document.body?.dataset?.tmdbKey || "").trim();const key = cfgKey || legacyCfg || lsKey || globalKey || bodyKey;return key || null;}catch(_){return null;}}async function fetchTMDBSummary(title){const key = getTMDBKey();if (!key) return 'TMDB key missing. Open Theme Settings → General → Integrations to add your TMDB API key,or set one of:\nwindow.BTFW_CONFIG.tmdb ={apiKey:"KEY"};\nlocalStorage.setItem("btfw:tmdb:key","KEY");\nwindow.tmdb_key = "KEY";';try{const imdbMatch = /^tt\d+$/.test(title.trim());let r;if (imdbMatch){const url = `https://api.themoviedb.org/3/find/${encodeURIComponent(title.trim())}?api_key=${key}&external_source=imdb_id`;const res = await fetch(url);if (!res.ok) throw new Error(`HTTP ${res.status}`);const data = await res.json();r = (data.movie_results||[])[0] || (data.tv_results||[])[0];}else{const yearMatch = title.match(/\b(19|20)\d{2}\b/);const year = yearMatch ? yearMatch[0]:'';let cleanTitle = title;if (year){cleanTitle = title.replace(/\s*\(?\s*(19|20)\d{2}\s*\)?\s*/g,' ').trim();}const q = encodeURIComponent(cleanTitle);if (year){const movieUrl = `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${q}&primary_release_year=${year}&include_adult=false&language=en-US`;const movieRes = await fetch(movieUrl);if (movieRes.ok){const movieData = await movieRes.json();if (movieData.results && movieData.results.length > 0){r = movieData.results[0];r.media_type = 'movie';}}}if (!r && year){const tvUrl = `https://api.themoviedb.org/3/search/tv?api_key=${key}&query=${q}&first_air_date_year=${year}&include_adult=false&language=en-US`;const tvRes = await fetch(tvUrl);if (tvRes.ok){const tvData = await tvRes.json();if (tvData.results && tvData.results.length > 0){r = tvData.results[0];r.media_type = 'tv';}}}if (!r){const multiUrl = `https://api.themoviedb.org/3/search/multi?api_key=${key}&query=${q}&include_adult=false&language=en-US`;const res = await fetch(multiUrl);if (!res.ok) throw new Error(`HTTP ${res.status}`);const data = await res.json();r = (data.results||[])[0];}}if (!r) return 'No TMDB result.';const mediaType = r.media_type || (r.title ? 'movie':'tv');const name = r.title || r.name || title;const year = (r.release_date || r.first_air_date || '').slice(0,4);const rating = (typeof r.vote_average === "number") ? r.vote_average.toFixed(1):'n/a';let overview = r.overview || '';if (!overview && r.id){const detailsUrl = `https://api.themoviedb.org/3/${mediaType}/${r.id}?api_key=${key}&language=en-US`;const dres = await fetch(detailsUrl);if (dres.ok){const det = await dres.json();overview = det.overview || '';}}if (!overview) overview = 'No summary available.';if (overview.length > 150){overview = overview.substring(0,147) + '...';}overview = overview.replace(/\|/g,'&#124;');const posterPath = r.poster_path || '';return `[tmdbcard]${name}|${year}|${rating}|${overview}|${posterPath}[/tmdbcard]`;}catch(e){console.error('[summary] TMDB error',e);return `TMDB error:${e.message||e}`;}}async function fetchTMDBCast(title){const key = getTMDBKey();if (!key) return 'TMDB key missing. Configure your API key first.';try{const imdbMatch = /^tt\d+$/.test(title.trim());let movieId,mediaType = 'movie';if (imdbMatch){const url = `https://api.themoviedb.org/3/find/${encodeURIComponent(title.trim())}?api_key=${key}&external_source=imdb_id`;const res = await fetch(url);if (!res.ok) throw new Error(`HTTP ${res.status}`);const data = await res.json();const r = (data.movie_results||[])[0] || (data.tv_results||[])[0];if (!r) return 'No TMDB result.';movieId = r.id;mediaType = r.media_type || (data.movie_results?.[0] ? 'movie':'tv');}else{const yearMatch = title.match(/\b(19|20)\d{2}\b/);const year = yearMatch ? yearMatch[0]:'';let cleanTitle = title;if (year){cleanTitle = title.replace(/\s*\(?\s*(19|20)\d{2}\s*\)?\s*/g,' ').trim();}const q = encodeURIComponent(cleanTitle);let r;if (year){const movieUrl = `https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${q}&primary_release_year=${year}&include_adult=false&language=en-US`;const movieRes = await fetch(movieUrl);if (movieRes.ok){const movieData = await movieRes.json();if (movieData.results && movieData.results.length > 0){r = movieData.results[0];mediaType = 'movie';}}}if (!r && year){const tvUrl = `https://api.themoviedb.org/3/search/tv?api_key=${key}&query=${q}&first_air_date_year=${year}&include_adult=false&language=en-US`;const tvRes = await fetch(tvUrl);if (tvRes.ok){const tvData = await tvRes.json();if (tvData.results && tvData.results.length > 0){r = tvData.results[0];mediaType = 'tv';}}}if (!r){const multiUrl = `https://api.themoviedb.org/3/search/multi?api_key=${key}&query=${q}&include_adult=false&language=en-US`;const res = await fetch(multiUrl);if (!res.ok) throw new Error(`HTTP ${res.status}`);const data = await res.json();r = (data.results||[])[0];if (r) mediaType = r.media_type || (r.title ? 'movie':'tv');}if (!r) return 'No TMDB result.';movieId = r.id;}const creditsUrl = `https://api.themoviedb.org/3/${mediaType}/${movieId}/credits?api_key=${key}`;const creditsRes = await fetch(creditsUrl);if (!creditsRes.ok) throw new Error(`HTTP ${creditsRes.status}`);const creditsData = await creditsRes.json();const cast = creditsData.cast || [];if (!cast.length) return 'No cast information available.';const top8 = cast.slice(0,8);const castList = top8.map(actor =>{const character = actor.character ? ` (${actor.character})`:'';return `${actor.name}${character}`;}).join(',');return `col:#87ceeb:Cast:${castList}`;}catch(e){console.error('[cast] TMDB error',e);return `TMDB error:${e.message||e}`;}}function getChannelEmotes(){try{if (window.CHANNEL?.emotes){const em = CHANNEL.emotes;if (Array.isArray(em)) return em.map(x => x.name || x);if (typeof em === 'object') return Object.keys(em);}}catch(_){}const els = $$("#emotelist img,#emotelist .emote");if (els.length) return els.map(el => el.getAttribute('title') || el.getAttribute('alt') || el.dataset?.name).filter(Boolean);return [];}function emitVoteSkip(){try{socket.emit("voteskip");}catch(_){}}function emitPlayNext(){try{socket.emit("playNext");}catch(_){}}function emitBumpLastAfterCurrent(){try{const items = $$("#queue .queue_entry");if (items.length < 2) return "Not enough items to bump.";const active = $("#queue .queue_active");if (!active) return "No active item found.";const last = items[items.length-1];const fromUid = last.getAttribute("data-uid") || last.dataset?.uid;const afterUid = active.getAttribute("data-uid") || active.dataset?.uid;if (!fromUid || !afterUid) return "Missing media UID.";socket.emit("moveMedia",{from:fromUid,after:afterUid});return null;}catch(e){return "Bump failed.";}}function emitQueueAdd(url){try{if (typeof window.parseMediaLink === "function"){const parsed = parseMediaLink(url);if (!parsed) return "Couldn’t parse media link.";socket.emit("queue",{id:parsed.id,type:parsed.type,pos:"end",ttl:parsed.title || url});return null;}socket.emit("queue",{id:url,type:"url",pos:"end",ttl:url});return null;}catch(e){return "Queue add failed.";}}function canonicalizeYearSuffix(value){const input = String(value || "").trim();if (!input) return "";if (/\(\s*(?:19|20)\d{2}\s*\)\s*$/.test(input)) return input;const match = /(?:^|[\s,;:|/-])((?:19|20)\d{2})\s*$/.exec(input);if (!match) return input;const year = match[1];const basePart = input .slice(0,match.index) .replace(/[\s,;:|/-]+$/,"") .trim();if (!basePart) return input;return `${basePart}(${year})`;}function sanitizeTitleForSearch(t){if (!t) return "";let s = " " + t + " ";s = s.replace(/\[[^\]]*\]/g," ");s = s.replace(/\(([^)]*)\)/g,(m,inner) => /^\s*\d{4}\s*$/.test(inner) ? m:" ");s = s.replace(/\b(?:official\s*trailer|trailer|teaser|lyrics|mv|amv|full\s*episode|episode\s*\d+|season\s*\d+)\b/gi," ");s = s.replace(/\b(?:\d{3,4}p|[48]k|hdr|dolby(?:\s+vision)?|remaster|extended|uncut|subbed|dubbed)\b/gi," ");s = s.replace(/\s{2,}/g," ").trim();const split = s.split(/\s[-–|:]\s/);if (split.length > 1 && split[0].length >= 3) s = split[0].trim();s = canonicalizeYearSuffix(s);return s || t;}const REG = new Map();function addCommand(name,handler,{desc="",usage="",cooldownMs=800,aliases=[]}={}){REG.set(name,{name,handler,desc,usage,cooldownMs,last:0,aliases});aliases.forEach(a => REG.set(a,REG.get(name)));}function listPrimary(){return Array.from(new Set(Array.from(REG.values()).map(c=>c.name))).sort();}function parseCommand(text){if (!text || text.length<2) return null;if (text.startsWith("/me ")) return{name:"/me",args:[text.slice(4)]};if (text[0] !== "!") return null;const parts = text.slice(1).trim().split(/\s+/);const name = (parts.shift()||"").toLowerCase();return{name,args:parts,raw:text};}addCommand("help",()=> `Commands:${listPrimary().map(n=>"!"+n).join(",")}— Click the “?” button below chat for details.`,{desc:"List commands",usage:"!help"});addCommand("leaderboard",async ()=>{await displayLeaderboard();return "";},{desc:"Show trivia leaderboard",usage:"!leaderboard"});addCommand("trivia",async ()=>{const out=await startTriviaOnce();return out||"";},{desc:"Start one trivia question (rank ≥2)",usage:"!trivia"});addCommand("summary",async (ctx)=>{const raw = ctx.args.length ? ctx.args.join(" "):getCurrentTitle();if (!raw) return "No current title,try:!summary <title>";const q = sanitizeTitleForSearch(raw);const out = await fetchTMDBSummary(q);sendChat(out);return "";},{desc:"TMDB summary for current or given title",usage:"!summary [title]"});addCommand("cast",async (ctx)=>{const raw = ctx.args.length ? ctx.args.join(" "):getCurrentTitle();if (!raw) return "No current title,try:!cast <title>";const q = sanitizeTitleForSearch(raw);const out = await fetchTMDBCast(q);sendChat(out);return "";},{desc:"Show cast for current or given title",usage:"!cast [title]"});addCommand("pick",(ctx)=>{const raw=ctx.args.join(" ");const parts=raw.split(/[,|]/).map(s=>s.trim()).filter(Boolean);if (parts.length<2) return "Usage:!pick a,b,c";sendChat(`🎯 I choose:${parts[Math.floor(Math.random()*parts.length)]}`);return "";},{desc:"Pick randomly",usage:"!pick a,b,c"});addCommand("ask",()=>{const a=["Yes.","No.","Maybe.","Probably.","Probably not.","Absolutely.","Definitely not.","Ask again later."];sendChat(a[Math.floor(Math.random()*a.length)]);return "";},{desc:"Magic-8",usage:"!ask <q>"});addCommand("time",()=>{const d=new Date();sendChat(`[${String(d.getHours()).padStart(2,"0")}:${String(d.getMinutes()).padStart(2,"0")}]`);return "";},{desc:"Current time",usage:"!time"});addCommand("dice",()=>{sendChat(`🎲 ${1+Math.floor(Math.random()*5)}`);return "";},{desc:"Roll 1–5",usage:"!dice"});addCommand("roll",()=>{sendChat(String(Math.floor(Math.random()*1000)).padStart(3,"0"));return "";},{desc:"Random 000–999",usage:"!roll"});addCommand("skip",()=>{if (!hasRank(2)) return "You lack permission to voteskip.";emitVoteSkip();return "";},{desc:"Vote skip",usage:"!skip"});addCommand("next",()=>{if (!hasRank(2)) return "You lack permission to play next.";emitPlayNext();return "";},{desc:"Play next",usage:"!next"});addCommand("bump",()=>{if (!hasRank(2)) return "You lack permission to move items.";const e=emitBumpLastAfterCurrent();return e||"";},{desc:"Move last after current",usage:"!bump"});addCommand("add",(ctx)=>{if (!hasRank(2)) return "You lack permission to add.";const url=ctx.args.join(" ").trim();if (!url) return "Usage:!add <url>";const e=emitQueueAdd(url);return e||"";},{desc:"Queue URL",usage:"!add <url>"});addCommand("now",()=>{const t=getCurrentTitle();if (!t) return "No current media.";sendChat(`now:${t}`);return "";},{desc:"Show current title",usage:"!now"});addCommand("sm",()=>{const em=getChannelEmotes();if (!em.length) return "No channel emotes found.";sendChat(em[Math.floor(Math.random()*em.length)]);return "";},{desc:"Random channel emote",usage:"!sm"});addCommand("/me",(ctx)=>{const msg=(ctx.args[0]||"").trim();if (msg) sendChat(`/me ${msg}`);return "";});function onEnterIntercept(e){try{const input = e.currentTarget;if (!input) return;if (e.key === "Enter" && !e.shiftKey){const text = input.value.trim();const parsed = parseCommand(text);if (!parsed) return;// normal message const cmd = REG.get(parsed.name);if (!cmd) return;const t = now();if (t - cmd.last < (cmd.cooldownMs||800)){e.preventDefault();sysLocal("Command is on cooldown…");return;}cmd.last = t;e.preventDefault();const ctx ={args:parsed.args,raw:parsed.raw,user:getUser()};const res = cmd.handler(ctx);if (res instanceof Promise){res.then(msg =>{if (typeof msg === "string" && msg) sendChat(msg);}) .catch(err => sysLocal(String(err)));}else if (typeof res === "string" && res){sendChat(res);}input.value = "";}}catch(_){}}function wireIncoming(){try{if (window.socket && socket.on) socket.on("chatMsg",onIncomingChatMsg);}catch(_){}}function buildCommandsTable(){const rows = listPrimary().map(name=>{const c = REG.get(name);const desc = c?.desc || "";const usage = c?.usage || ("!"+name);return `<tr><td><code>!${name}</code></td><td>${desc}</td><td><code>${usage}</code></td></tr>`;}).join("");return ` <div class="content"> <p>Type these in chat. Some require moderator permissions.</p> <div class="table-container"> <table class="table is-fullwidth is-striped is-narrow"> <thead><tr><th>Command</th><th>Description</th><th>Usage</th></tr></thead> <tbody>${rows}</tbody> </table> </div> </div>`;}function ensureCommandsModal(){let m = $("#btfw-cmds-modal");if (m) return m;m = document.createElement("div");m.id = "btfw-cmds-modal";m.className = "modal";m.innerHTML = ` <div class="modal-background"></div> <div class="modal-card btfw-modal"> <header class="modal-card-head"> <p class="modal-card-title">Chat Commands</p> <button class="delete" aria-label="close"></button> </header> <section class="modal-card-body">${buildCommandsTable()}</section> <footer class="modal-card-foot"> <button class="button is-link" id="btfw-cmds-close">Close</button> </footer> </div>`;document.body.appendChild(m);$(".modal-background",m).addEventListener("click",()=> m.classList.remove("is-active"));$(".delete",m).addEventListener("click",()=> m.classList.remove("is-active"));$("#btfw-cmds-close",m).addEventListener("click",()=> m.classList.remove("is-active"));return m;}function openCommandsModal(){const m = ensureCommandsModal();const body = m.querySelector(".modal-card-body");if (body) body.innerHTML = buildCommandsTable();m.classList.add("is-active");}function injectCommandsButton(into){if (!into || into._btfwCmdBtn) return false;const btn = document.createElement("button");btn.id = "btfw-chatcmds-btn";btn.className = "button is-dark is-small btfw-chatbtn";btn.innerHTML = `<i class="fa fa-question-circle" aria-hidden="true"></i>`;btn.title = "Commands";btn.addEventListener("click",(e)=>{e.preventDefault();openCommandsModal();});into.appendChild(btn);into._btfwCmdBtn = true;return true;}function ensureCommandsButton(){let placed = false;const bottom = $("#btfw-chat-bottombar");if (bottom) placed = injectCommandsButton(bottom);if (!placed){const top = $("#btfw-chat-topbar");if (top) placed = injectCommandsButton(top);}if (!placed){const wrap = $("#chatwrap");if (wrap && !$("#btfw-chatcmds-float")){const f = document.createElement("div");f.id = "btfw-chatcmds-float";f.style.position = "absolute";f.style.right = "8px";f.style.bottom = "42px";f.style.zIndex = "1100";wrap.appendChild(f);injectCommandsButton(f);}}}function watchBars(){const root = document.body;const mo = new MutationObserver(()=>{if ($("#btfw-chat-bottombar") || $("#btfw-chat-topbar")){ensureCommandsButton();}});mo.observe(root,{childList:true,subtree:true});}function boot(){const input = $("#chatline");if (input && !input._btfwCmds){input._btfwCmds = true;input.addEventListener("keydown",onEnterIntercept,true);}wireIncoming();ensureCommandsButton();watchBars();}document.addEventListener("btfw:layoutReady",()=> setTimeout(boot,0));if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();return{name:"feature:chat-commands"};});