BTFW.define("feature:nowplaying",[],async () =>{const $ = (s,r = document) => r.querySelector(s);const state ={lastCleanTitle:null,lastMediaKey:null,pendingUpdate:null,lastLookupInfo:null};function deriveLookupInfo(rawTitle){const original = String(rawTitle || "").trim();if (!original){return{original:"",base:"",year:"",canonical:"",query:""};}const parenMatch = original.match(/\(\s*((?:19|20)\d{2})\s*\)\s*$/);let base = original;let year = "";let canonical = original;if (parenMatch){year = parenMatch[1];const basePart = original.slice(0,parenMatch.index).trim();base = basePart;canonical = basePart ? `${basePart}(${year})`:`(${year})`;}else{const bareYearMatch = /(?:^|[\s,;:|/-])((?:19|20)\d{2})\s*$/.exec(original);if (bareYearMatch){year = bareYearMatch[1];const basePart = original .slice(0,bareYearMatch.index) .replace(/[\s,;:|/-]+$/,"") .trim();if (basePart){base = basePart;canonical = `${basePart}(${year})`;}else{base = original;canonical = original;}}}if (!base){base = original;}const query = canonical || base || original;return{original,base,year,canonical,query};}function setLookupDataset(el,info){if (!el || !info) return;const map = el.dataset;const canonical = info.canonical || "";const base = info.base || "";const year = info.year || "";const original = info.original || canonical || base || "";const query = info.query || canonical || original;map.btfwLookup = canonical;map.btfwLookupQuery = query;map.btfwLookupBase = base;map.btfwLookupYear = year;map.btfwLookupOriginal = original;}function applyLookupMetadata(info,options ={}){const normalized = info ?{original:info.original || "",base:info.base || "",year:info.year || "",canonical:info.canonical || info.query || info.original || "",query:info.query || info.canonical || info.original || ""}:{original:"",base:"",year:"",canonical:"",query:""};state.lastLookupInfo = normalized;const ct = findCurrentTitle();if (ct){setLookupDataset(ct,normalized);}const slot = $("#btfw-nowplaying-slot");if (slot){setLookupDataset(slot,normalized);}try{window.BTFW = window.BTFW ||{};window.BTFW.nowPlayingLookup ={...normalized};if (!window.BTFW.normalizeTitleForLookup){window.BTFW.normalizeTitleForLookup = deriveLookupInfo;}}catch (_){}if (!options.skipEvent){try{document.dispatchEvent( new CustomEvent("btfw:nowplayingLookup",{detail:{...normalized}}) );}catch (_){}}}function stripPrefix(t){return String(t || "") .replace(/^\s*(?:currently|now)\s*playing\s*[:\-]\s*/i,"") .replace(/[.]/g,' ') .trim();}function ensureSlot(){const cw = $("#chatwrap");if (!cw) return null;let top = cw.querySelector(".btfw-chat-topbar");if (!top){top = document.createElement("div");top.className = "btfw-chat-topbar";cw.prepend(top);}let slot = top.querySelector("#btfw-nowplaying-slot");if (!slot){slot = document.createElement("div");slot.id = "btfw-nowplaying-slot";slot.className = "btfw-chat-title";top.appendChild(slot);}return slot;}function findCurrentTitle(){return $("#currenttitle") || document.querySelector(".currenttitle") || null;}function createCurrentTitle(){const ct = document.createElement("span");ct.id = "currenttitle";ct.className = "btfw-nowplaying";return ct;}function mountTitleIntoSlot(){const slot = ensureSlot();if (!slot) return;let ct = findCurrentTitle();if (!ct){ct = createCurrentTitle();}if (ct.parentElement !== slot){const slotHasTitle = slot.contains(ct);if (!slotHasTitle){slot.innerHTML = "";}slot.appendChild(ct);ct.classList.add("btfw-nowplaying");if (state.lastLookupInfo){applyLookupMetadata(state.lastLookupInfo,{skipEvent:true});}}}function getQueueActiveTitle(){const active = document.querySelector("#queue .queue_active .qe_title a,#queue .queue_active .qe_title");return active && active.textContent ? active.textContent.trim():"";}function setTitle(newTitle,options ={}){let ct = findCurrentTitle();if (!ct){ct = createCurrentTitle();const slot = ensureSlot();if (slot){slot.appendChild(ct);}}const title = newTitle || ct.textContent || getQueueActiveTitle();const cleanTitle = stripPrefix(title);if (!cleanTitle){return false;}const currentText = stripPrefix(ct.textContent || "");if (currentText !== cleanTitle || options.force){ct.textContent = cleanTitle;const lookupInfo = deriveLookupInfo(cleanTitle);ct.title = lookupInfo.canonical || cleanTitle;ct.style.setProperty("--length",String(cleanTitle.length));state.lastCleanTitle = cleanTitle;applyLookupMetadata(lookupInfo);console.log('[nowplaying] Set title:',cleanTitle);return true;}return false;}function debouncedSetTitle(title,options ={}){if (state.pendingUpdate){clearTimeout(state.pendingUpdate);}if (options.force){setTitle(title,options);return;}state.pendingUpdate = setTimeout(() =>{state.pendingUpdate = null;setTitle(title,options);},100);}function handleMediaChange(data){console.log('[nowplaying] Media changed:',data);if (data && typeof data === 'object' && data.title){setTitle(data.title,{force:true});mountTitleIntoSlot();const mediaKey = mediaIdentity(data);if (mediaKey){state.lastMediaKey = mediaKey;}}else if (typeof data === 'number'){console.log('[nowplaying] Received queue position:',data);}}function mediaIdentity(media){if (!media) return "";const parts = [ media.uid,media.queue?.uid,media.qe?.uid,media.temp?.uid,media.uniqueID,media.id && media.type ? `${media.type}:${media.id}`:null,media.id,media.title ? stripPrefix(media.title):null ] .map(value => (value === undefined || value === null) ? null:String(value)) .filter(value => value);if (!parts.length) return "";return `m:${parts.join('|')}`;}function requestMediaInfo(){if (state.lastCleanTitle){return;}if (window.socket && socket.connected){socket.emit('playerReady');}else if (window.socket){socket.once('connect',() =>{socket.emit('playerReady');});}}function boot(){console.log('[nowplaying] Initializing...');mountTitleIntoSlot();try{if (window.socket && socket.on){socket.on("changeMedia",handleMediaChange);socket.on("setCurrent",handleMediaChange);socket.on("mediaUpdate",data =>{if (data && data.title){debouncedSetTitle(data.title,{force:false});}mountTitleIntoSlot();});}}catch (e){console.warn('[nowplaying] Socket not available:',e);}try{if (window.Callbacks && Callbacks.changeMedia){const originalChangeMedia = Callbacks.changeMedia;Callbacks.changeMedia = function(data){originalChangeMedia(data);handleMediaChange(data);};}}catch (e){console.warn('[nowplaying] Could not override Callbacks.changeMedia:',e);}const q = $("#queue");if (q && !q._btfwNPObs){const mo = new MutationObserver(() =>{const queueTitle = getQueueActiveTitle();if (queueTitle){debouncedSetTitle(queueTitle);}mountTitleIntoSlot();});mo.observe(q,{childList:true,subtree:true,attributes:true,attributeFilter:['class']});q._btfwNPObs = mo;}if (!document._btfwNpMoveObs){const obs = new MutationObserver(() =>{const ct = findCurrentTitle();const slot = $("#btfw-nowplaying-slot");if (ct && slot && !slot.contains(ct)){mountTitleIntoSlot();}});obs.observe(document.body,{childList:true,subtree:true});document._btfwNpMoveObs = obs;}setTimeout(requestMediaInfo,500);setTimeout(requestMediaInfo,2000);document.addEventListener('btfw:ready',() =>{setTimeout(requestMediaInfo,500);});[500,1500].forEach(delay =>{setTimeout(() =>{mountTitleIntoSlot();const ct = findCurrentTitle();if (ct && ct.textContent){const existing = ct.textContent.trim();if (existing){setTitle(existing,{force:true});}}},delay);});}if (document.readyState === "loading"){document.addEventListener("DOMContentLoaded",boot);}else{boot();}return{name:"feature:nowplaying",setTitle,mountTitleIntoSlot};});BTFW.define("feature:playlistPerformance",[],function(){const $ = s => document.querySelector(s);let isOptimized = false;let originalDisplay = new Map();let currentVisibleCount = Infinity;let scrollHandler = null;const INITIAL_BATCH = 120;const BATCH_SIZE = 80;const SCROLL_THRESHOLD = 300;function getQueue(){return $('#queue');}function getPlaylistItems(){const queue = getQueue();if (!queue) return [];return Array.from(queue.children).filter(item => item.id !== 'btfw-playlist-performance-indicator');}function ensurePollButtonForItem(item){if (!item) return;const group = item.querySelector('.btn-group');if (!group || group.querySelector('.btfw-qbtn-pollcopy')) return;const btn = document.createElement('button');btn.type = 'button';btn.className = 'btn btn-xs btn-default qbtn-pollcopy btfw-qbtn-pollcopy';btn.title = 'Add this title to the poll';btn.textContent = 'Poll';const queueNext = group.querySelector('.qbtn-next');if (queueNext && queueNext.nextSibling){group.insertBefore(btn,queueNext.nextSibling);}else{group.appendChild(btn);}}function ensurePollButtonsForVisibleItems(children){const items = Array.isArray(children) ? children:getPlaylistItems();if (!items.length) return;const limit = Number.isFinite(currentVisibleCount) ? Math.min(items.length,currentVisibleCount):items.length;for (let index = 0;index < limit;index += 1){const item = items[index];if (!item || item.style.display === 'none' || item.hidden) continue;ensurePollButtonForItem(item);}}function applyVisibility(children){children.forEach((item,index) =>{if (!originalDisplay.has(item)){originalDisplay.set(item,item.style.display || '');}if (index < currentVisibleCount){const display = originalDisplay.get(item);item.style.display = display === undefined ? '':display;}else{item.style.display = 'none';}});ensurePollButtonsForVisibleItems(children);}function detachScrollWatcher(queue){if (queue && scrollHandler){queue.removeEventListener('scroll',scrollHandler);}scrollHandler = null;}function updatePerformanceIndicator(totalCount){const indicator = $('#btfw-playlist-performance-indicator');if (!indicator) return;indicator.dataset.totalCount = totalCount;const status = indicator.querySelector('.btfw-perf-status');if (!status) return;const hiddenCount = Math.max(totalCount - Math.min(currentVisibleCount,totalCount),0);const shownCount = totalCount - hiddenCount;if (hiddenCount > 0){status.textContent = `Showing ${shownCount}of ${totalCount}items (${hiddenCount}hidden for performance)`;}else{status.textContent = `Showing all ${totalCount}items`;}const showMoreBtn = indicator.querySelector('#btfw-show-more-items');if (showMoreBtn){showMoreBtn.disabled = hiddenCount === 0;showMoreBtn.style.opacity = hiddenCount === 0 ? '0.5':'1';}const showAllBtn = indicator.querySelector('#btfw-show-all-items');if (showAllBtn){showAllBtn.disabled = hiddenCount === 0;showAllBtn.style.opacity = hiddenCount === 0 ? '0.5':'1';}}function optimizePlaylist(){const queue = getQueue();if (!queue) return;const children = getPlaylistItems();if (!children.length) return;const hadOptimization = isOptimized;if (!hadOptimization || !Number.isFinite(currentVisibleCount)){currentVisibleCount = INITIAL_BATCH;}currentVisibleCount = Math.min(children.length,Math.max(currentVisibleCount,INITIAL_BATCH));applyVisibility(children);isOptimized = true;addPerformanceIndicator(children.length);updatePerformanceIndicator(children.length);detachScrollWatcher(queue);scrollHandler = () =>{if (!isOptimized) return;if (queue.scrollTop + queue.clientHeight >= queue.scrollHeight - SCROLL_THRESHOLD){revealNextBatch();}};queue.addEventListener('scroll',scrollHandler,{passive:true});}function restorePlaylist(){const queue = getQueue();const children = getPlaylistItems();children.forEach(item =>{const display = originalDisplay.get(item);item.style.display = display === undefined ? '':display;});originalDisplay.clear();currentVisibleCount = Infinity;ensurePollButtonsForVisibleItems(children);isOptimized = false;if (queue){detachScrollWatcher(queue);}removePerformanceIndicator();}function addPerformanceIndicator(totalCount){removePerformanceIndicator();const queue = getQueue();if (!queue) return;const indicator = document.createElement('div');indicator.id = 'btfw-playlist-performance-indicator';indicator.className = 'playlist-performance-indicator';indicator.style.cssText = ` padding:10px;margin:10px 0;background:rgba(0,150,0,0.1);border:1px solid rgba(0,150,0,0.3);border-radius:4px;text-align:center;color:#0f0;font-size:12px;`;indicator.innerHTML = ` <i class="fa fa-rocket"></i> Performance Mode Active<br> <small class="btfw-perf-status"></small><br> <div class="btfw-perf-controls" style="margin-top:5px;display:flex;gap:6px;justify-content:center;flex-wrap:wrap;"> <button id="btfw-show-more-items" class="btn btn-xs btn-default">Show More</button> <button id="btfw-show-all-items" class="btn btn-xs btn-default">Show All (May Lag)</button> </div> `;queue.appendChild(indicator);const showMoreBtn = indicator.querySelector('#btfw-show-more-items');if (showMoreBtn){showMoreBtn.addEventListener('click',() =>{revealNextBatch();});}const showAllBtn = indicator.querySelector('#btfw-show-all-items');if (showAllBtn){showAllBtn.addEventListener('click',() =>{restorePlaylist();});}updatePerformanceIndicator(totalCount);}function removePerformanceIndicator(){const indicator = $('#btfw-playlist-performance-indicator');if (indicator) indicator.remove();}function revealNextBatch(){const queue = getQueue();const children = getPlaylistItems();if (!queue || !children.length) return;const previousVisible = currentVisibleCount;currentVisibleCount = Math.min(children.length,currentVisibleCount + BATCH_SIZE);if (currentVisibleCount === previousVisible) return;applyVisibility(children);updatePerformanceIndicator(children.length);}function scrollToCurrentOptimized(){const queue = getQueue();if (!queue) return;const active = queue.querySelector('.queue_active');if (!active) return;const children = getPlaylistItems();const activeIndex = children.indexOf(active);if (activeIndex > -1){const BUFFER = 25;if (isOptimized){const targetVisible = Math.min(children.length,Math.max(currentVisibleCount,activeIndex + BUFFER + 1));currentVisibleCount = Math.max(targetVisible,BUFFER * 2);currentVisibleCount = Math.min(children.length,currentVisibleCount);applyVisibility(children);updatePerformanceIndicator(children.length);}active.scrollIntoView({behavior:'smooth',block:'center'});}}function addToggleButton(){const toolbar = $('.btfw-pl-toolbar');if (!toolbar || toolbar.querySelector('#btfw-perf-toggle')) return;const btn = document.createElement('button');btn.id = 'btfw-perf-toggle';btn.className = 'btn btn-xs btn-default';btn.innerHTML = '<i class="fa fa-rocket"></i> Performance';btn.title = 'Toggle performance mode for smooth scrolling';btn.style.marginLeft = '5px';btn.addEventListener('click',() =>{if (isOptimized){restorePlaylist();btn.classList.remove('btn-success');btn.innerHTML = '<i class="fa fa-rocket"></i> Performance';}else{optimizePlaylist();btn.classList.add('btn-success');btn.innerHTML = '<i class="fa fa-rocket"></i> Performance ON';}});toolbar.appendChild(btn);}function addStackToggle(){const playlistModule = $('.btfw-stack-item[data-bind="playlist-group"]');if (!playlistModule) return;const header = playlistModule.querySelector('.btfw-stack-item__header');if (!header || header.querySelector('#btfw-stack-perf-toggle')) return;const btn = document.createElement('button');btn.id = 'btfw-stack-perf-toggle';btn.className = 'btfw-stack-perf-btn';btn.innerHTML = '⚡';btn.title = 'Performance mode - hide excess items';btn.style.cssText = ` background:rgba(0,150,0,0.2);border:1px solid rgba(0,150,0,0.4);color:#0f0;padding:2px 8px;margin:0 5px;border-radius:3px;cursor:pointer;font-size:14px;`;btn.addEventListener('click',(e) =>{e.stopPropagation();if (isOptimized){restorePlaylist();btn.style.background = 'rgba(0,150,0,0.2)';btn.innerHTML = '⚡';}else{optimizePlaylist();btn.style.background = 'rgba(0,150,0,0.5)';btn.innerHTML = '⚡ ON';}});const arrows = header.querySelector('.btfw-stack-arrows');if (arrows){header.insertBefore(btn,arrows);}else{header.appendChild(btn);}}function enhanceScrollButton(){const scrollBtn = $('#btfw-pl-scroll');if (scrollBtn && !scrollBtn._perfEnhanced){scrollBtn._perfEnhanced = true;scrollBtn.addEventListener('click',(e) =>{if (isOptimized){e.preventDefault();e.stopPropagation();scrollToCurrentOptimized();}});}}function checkAutoEnable(){const queue = getQueue();if (!queue) return;const itemCount = getPlaylistItems().length;if (itemCount > 100 && !isOptimized){optimizePlaylist();const btn = $('#btfw-perf-toggle');if (btn){btn.classList.add('btn-success');btn.innerHTML = '<i class="fa fa-rocket"></i> Performance ON';}}}function watchPlaylist(){const queue = getQueue();if (!queue || queue._perfWatched) return;queue._perfWatched = true;const observer = new MutationObserver((mutations) =>{const hasRelevantChange = mutations.some(mutation =>{const added = Array.from(mutation.addedNodes || []);const removed = Array.from(mutation.removedNodes || []);const touchesQueueEntry = node =>{if (!(node instanceof HTMLElement)) return false;if (node.id === 'btfw-playlist-performance-indicator') return false;return node.classList.contains('queue_entry') || !!node.querySelector?.('.queue_entry');};return added.some(touchesQueueEntry) || removed.some(touchesQueueEntry);});if (!hasRelevantChange){return;}if (isOptimized){setTimeout(() =>{optimizePlaylist();},100);}checkAutoEnable();});observer.observe(queue,{childList:true,subtree:false});}function boot(){addToggleButton();addStackToggle();enhanceScrollButton();watchPlaylist();checkAutoEnable();}if (document.readyState === 'loading'){document.addEventListener('DOMContentLoaded',boot);}else{boot();}document.addEventListener('btfw:layoutReady',boot);window.BTFW_PlaylistPerformance ={optimize:optimizePlaylist,restore:restorePlaylist,toggle:() => isOptimized ? restorePlaylist():optimizePlaylist(),isOptimized:() => isOptimized};return{name:'feature:playlistPerformance'};});BTFW.define("feature:playlist-tools",[],async () =>{const $ = (s,r = document) => r.querySelector(s);const $$ = (s,r = document) => Array.from(r.querySelectorAll(s));function injectToolbar(){if ($("#btfw-plbar")) return;const header = $("#playlistwrap") || $("#ploptions") || $("#queue")?.parentElement || $("#queue")?.closest(".well") || $("#btfw-leftpad");if (!header) return;const bar = document.createElement("div");bar.id = "btfw-plbar";bar.className = "btfw-plbar";bar.innerHTML = ` <div class="field has-addons" style="margin:0;"> <p class="control is-expanded"> <input id="btfw-pl-filter" class="input is-small" type="text" placeholder="Filter playlist…"> </p> <p class="control"> <button id="btfw-pl-clear" class="button is-small" title="Clear filter"><i class="fa fa-times"></i></button> </p> <p class="control"> <button id="btfw-pl-scroll" class="button is-small" title="Scroll to current"><i class="fa fa-location-arrow"></i></button> </p> </div> <span id="btfw-pl-count" class="is-size-7" style="opacity:.75;"></span> `;header.insertBefore(bar,header.firstChild);wireFilter();wireScrollToCurrent();updateCount();}let copyTitlesEnabled = false;let copyTitlesToggle = null;function ensureCopyTitlesToggle(){const bar = $("#btfw-plbar");if (!bar) return;let actions = bar.querySelector(".btfw-plbar__actions");if (!actions){actions = document.createElement("div");actions.className = "btfw-plbar__actions";bar.appendChild(actions);}if (copyTitlesToggle && copyTitlesToggle.isConnected){updateCopyTitlesToggleAppearance();return;}const btn = document.createElement("button");btn.type = "button";btn.id = "btfw-pl-copytoggle";btn.className = "button is-dark is-small btfw-plbar__action-btn";btn.textContent = "Copy titles";btn.setAttribute("aria-pressed",copyTitlesEnabled ? "true":"false");btn.addEventListener("click",() =>{copyTitlesEnabled = !copyTitlesEnabled;updateCopyTitlesToggleAppearance();ensureCopyTitleButtons();toast(copyTitlesEnabled ? "Copy buttons enabled":"Copy buttons disabled","info");});actions.appendChild(btn);copyTitlesToggle = btn;updateCopyTitlesToggleAppearance();}function updateCopyTitlesToggleAppearance(){if (!copyTitlesToggle) return;copyTitlesToggle.setAttribute("aria-pressed",copyTitlesEnabled ? "true":"false");copyTitlesToggle.classList.toggle("is-success",copyTitlesEnabled);copyTitlesToggle.classList.toggle("is-dark",!copyTitlesEnabled);copyTitlesToggle.classList.toggle("is-outlined",copyTitlesEnabled);}function ensureCopyTitleButtons(){const entries = $$("#queue > .queue_entry");if (!entries.length) return;entries.forEach(li =>{const group = li.querySelector(".btn-group");if (!group) return;const existing = group.querySelector(".btfw-qbtn-copytitle");if (copyTitlesEnabled){if (existing) return;const btn = document.createElement("button");btn.type = "button";btn.className = "btn btn-xs btn-default qbtn-copytitle btfw-qbtn-copytitle";btn.setAttribute("title","Copy title and URL");btn.innerHTML = `<span class="glyphicon glyphicon-copy"></span>Copy`;group.appendChild(btn);}else if (existing){existing.remove();}});}async function copyTitleForEntry(entry){if (!entry) return false;const titleAnchor = entry.querySelector(".qe_title") || entry.querySelector("a");if (!titleAnchor) return false;const rawTitle = (titleAnchor.textContent || "").trim();const href = titleAnchor.getAttribute("href") || "";if (!rawTitle || !href) return false;const formattedTitle = formatTitleForCopy(rawTitle);const payload = formattedTitle ? `${href}${formattedTitle}`:href;const ok = await copyToClipboard(payload);if (ok) toast(`Copied "${formattedTitle}"`,"success");else toast("Unable to copy to clipboard","warn");return ok;}function formatTitleForCopy(raw){if (!raw) return "";let text = String(raw).trim();if (!text) return "";const yearMatch = text.match(/\b(19|20)\d{2}\b(?!.*\b(19|20)\d{2}\b)/);let year = "";if (yearMatch){year = yearMatch[0];const idx = yearMatch.index ?? text.indexOf(year);if (idx > -1){text = `${text.slice(0,idx)}${text.slice(idx + year.length)}`;}}text = text.replace(/\s+/g," ").trim();const titled = text.replace(/\b([A-Za-z][^\s]*)/g,(word) =>{if (word.toUpperCase() === word) return word;return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();});return year ? `${titled}${titled ? " ":""}(${year})`:titled;}async function copyToClipboard(text){if (!text) return false;try{if (navigator.clipboard?.writeText){await navigator.clipboard.writeText(text);return true;}}catch (_){}try{const ta = document.createElement("textarea");ta.value = text;ta.style.position = "fixed";ta.style.opacity = "0";document.body.appendChild(ta);ta.focus();ta.select();const ok = document.execCommand("copy");document.body.removeChild(ta);return ok;}catch (_){}return false;}function wireCopyTitleButtons(){const queue = $("#queue");if (!queue || queue._btfwCopyTitleDelegated) return;queue._btfwCopyTitleDelegated = true;queue.addEventListener("click",(ev) =>{const btn = ev.target.closest?.(".btfw-qbtn-copytitle");if (!btn) return;ev.preventDefault();ev.stopPropagation();const entry = btn.closest(".queue_entry");copyTitleForEntry(entry);},true);}let lastQ = "";function applyFilter(q){const queue = $("#queue");if (!queue) return;let visible = 0;const term = (q || "").trim().toLowerCase();$$("#queue > .queue_entry").forEach(li =>{const text = (li.textContent || "").toLowerCase();const ok = term ? text.includes(term):true;li.style.display = ok ? "":"none";if (ok) visible++;});updateCount(visible);}function wireFilter(){const input = $("#btfw-pl-filter");const clear = $("#btfw-pl-clear");if (!input) return;const debounced = debounce(() =>{const q = input.value || "";if (q === lastQ) return;lastQ = q;applyFilter(q);},120);input.addEventListener("input",debounced);clear.addEventListener("click",(e) =>{e.preventDefault();input.value = "";lastQ = "";applyFilter("");input.focus();});}function updateCount(known){const count = $("#btfw-pl-count");const queue = $("#queue");if (!count || !queue) return;const n = (known != null) ? known:$$("#queue > .queue_entry").filter(li => li.style.display !== "none").length;count.textContent = n ? `${n}item${n === 1 ? "":"s"}`:"";}function wireScrollToCurrent(){const btn = $("#btfw-pl-scroll");const queue = $("#queue");if (!btn || !queue) return;btn.addEventListener("click",(e) =>{e.preventDefault();const active = $("#queue .queue_active");if (!active) return;const r = active.getBoundingClientRect();const qR = queue.getBoundingClientRect();queue.scrollTop += (r.top - qR.top) - (qR.height * 0.3);});}function ensureQueuePollButtons(){const visibleItems = Array.from(document.querySelectorAll('#queue > .queue_entry')) .filter(li =>{const style = window.getComputedStyle(li);return style.display !== 'none' && style.visibility !== 'hidden';}) .slice(0,50);visibleItems.forEach(li =>{if (!li) return;const group = li.querySelector(".btn-group");if (!group) return;if (group.querySelector(".btfw-qbtn-pollcopy")) return;const btn = document.createElement("button");btn.type = "button";btn.className = "btn btn-xs btn-default qbtn-pollcopy btfw-qbtn-pollcopy";btn.setAttribute("title","Add this title to the poll");btn.textContent = "Poll";const queueNext = group.querySelector(".qbtn-next");if (queueNext && queueNext.nextSibling){group.insertBefore(btn,queueNext.nextSibling);}else if (queueNext){group.appendChild(btn);}else{group.appendChild(btn);}});}function findOpenPollInputs(){const wrap = document.getElementById("pollwrap");if (!wrap || !wrap.isConnected) return null;const menu = wrap.querySelector(".poll-menu");if (!menu) return null;const wrapStyle = window.getComputedStyle(wrap);const menuStyle = window.getComputedStyle(menu);const hidden = value => value === "none" || value === "hidden" || value === "0";if (hidden(wrapStyle.display) || hidden(menuStyle.display) || hidden(wrapStyle.visibility) || hidden(menuStyle.visibility)) return null;if (Number.parseFloat(wrapStyle.opacity) === 0 || Number.parseFloat(menuStyle.opacity) === 0) return null;const inputs = $$(".poll-menu-option",menu).filter(input => input instanceof HTMLInputElement);if (!inputs.length) return null;return inputs;}function wireQueuePollCopy(){const queue = $("#queue");if (!queue || queue._btfwPollCopyDelegated) return;queue._btfwPollCopyDelegated = true;queue.addEventListener("click",(ev) =>{const btn = ev.target.closest?.(".btfw-qbtn-pollcopy");if (!btn) return;ev.preventDefault();ev.stopPropagation();const entry = btn.closest(".queue_entry");if (!entry) return;const titleEl = entry.querySelector(".qe_title") || entry.querySelector("a");const title = titleEl ? (titleEl.textContent || "").trim():"";if (!title){toast("No title found for this entry","warn");return;}const pollInputs = findOpenPollInputs();if (!pollInputs){toast("No poll is open","warn");return;}const targetInput = pollInputs.find(input => !(input.value || "").trim());if (!targetInput){toast("No empty poll option available","warn");return;}targetInput.value = title;targetInput.dispatchEvent(new Event("input",{bubbles:true}));toast("Successfully added to poll options","success");},true);}const scrubTokens = ["720p","brrip","x264","yify","mp4"];const scrubPattern = new RegExp(`\\b(?:${scrubTokens.join("|")})\\b`,"gi");const titleInputSelectors = ["#addfromurl-title-val","#mediaurl-title",".media-title-input"];function sanitiseTitleInput(value){if (!value) return "";let title = String(value);title = title.replace(/\.+/g," ");scrubPattern.lastIndex = 0;title = title.replace(scrubPattern," ");title = title.replace(/\b(19|20)\d{2}\b/g,(match,_prefix,offset,src) =>{const before = src[offset - 1];const after = src[offset + match.length];if (before === "(" && after === ")") return match;return `(${match})`;});return title.replace(/\s+/g," ").trim();}let titleFilterObserver = null;function ensureAddFromUrlTitleFilter(){let anyBound = false;titleInputSelectors .flatMap(sel => Array.from(document.querySelectorAll(sel))) .forEach(input =>{if (!(input instanceof HTMLInputElement)) return;if (input._btfwTitleFilterBound){anyBound = true;return;}const apply = () =>{const raw = input.value || "";const cleaned = sanitiseTitleInput(raw);if (cleaned === raw) return;const start = input.selectionStart;const end = input.selectionEnd;input.value = cleaned;if (typeof start === "number" && typeof end === "number"){const delta = cleaned.length - raw.length;const newStart = Math.max(0,start + delta);const newEnd = Math.max(0,end + delta);try{input.setSelectionRange(newStart,newEnd);}catch (_){}}};input.addEventListener("input",apply);input.addEventListener("change",apply);input.addEventListener("paste",() => requestAnimationFrame(apply));input._btfwTitleFilterBound = true;apply();anyBound = true;});if (!titleFilterObserver){const target = document.getElementById("addfromurl") || document.body;titleFilterObserver = new MutationObserver(() => ensureAddFromUrlTitleFilter());titleFilterObserver.observe(target,{childList:true,subtree:true});}return anyBound;}const tempCheckboxKey = "btfw:addfromurl:addTemp";let addTempObserver = null;function ensureAddTempPreference(){const checkbox = document.querySelector("#addfromurl input.add-temp");if (!(checkbox instanceof HTMLInputElement)){if (!addTempObserver){const target = document.getElementById("addfromurl") || document.body;addTempObserver = new MutationObserver(() => ensureAddTempPreference());addTempObserver.observe(target,{childList:true,subtree:true});}return false;}if (checkbox._btfwTempPersistBound) return true;try{const stored = localStorage.getItem(tempCheckboxKey);if (stored != null) checkbox.checked = stored === "true";}catch (_){}checkbox.addEventListener("change",() =>{try{localStorage.setItem(tempCheckboxKey,checkbox.checked ? "true":"false");}catch (_){}});checkbox._btfwTempPersistBound = true;return true;}function debounce(fn,ms){let t;return (...a) =>{clearTimeout(t);t = setTimeout(() => fn(...a),ms);};}function toast(msg,kind = "info"){const text = (msg == null) ? "":String(msg).trim();if (!text) return;try{const notify = window.BTFW_notify;if (notify && typeof notify.notify === "function"){const type = (kind && typeof notify[kind] === "function") ? kind:"info";const fn = (type === "info") ? notify.info:notify[type];const icons ={info:"📝",success:"✅",warn:"⚠️",error:"⚠️"};fn({title:"Playlist",html:`<span>${escapeHtml(text)}</span>`,icon:icons[type] || icons.info,timeout:type === "success" ? 4200:5200});return;}}catch (_){}try{if (window.makeAlert){makeAlert("Playlist",text).insertBefore("#motdrow");return;}}catch (_){}console.log("[playlist-tools]",text);}function escapeHtml(str){return str.replace(/[&<>"']/g,(c) => ({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"})[c]);}function setupOptimizedObservers(){const container = $("#queuecontainer") || $("#playlistwrap") || document.body;if (container && !container._btfw_pl_obs_optimized){container._btfw_pl_obs_optimized = true;let observerTimeout;const debouncedCallback = () =>{clearTimeout(observerTimeout);observerTimeout = setTimeout(() =>{injectToolbar();ensureCopyTitlesToggle();ensureQueuePollButtons();ensureCopyTitleButtons();ensureAddFromUrlTitleFilter();ensureAddTempPreference();},100);};new MutationObserver(debouncedCallback).observe(container,{childList:true,subtree:true});}const queue = $("#queue");if (queue && !queue._btfw_pl_count_obs_optimized){queue._btfw_pl_count_obs_optimized = true;let queueTimeout;const debouncedQueueCallback = () =>{clearTimeout(queueTimeout);queueTimeout = setTimeout(() =>{updateCount();ensureQueuePollButtons();ensureCopyTitleButtons();},100);};new MutationObserver(debouncedQueueCallback).observe(queue,{childList:true,subtree:false});}}function boot(){injectToolbar();ensureCopyTitlesToggle();ensureQueuePollButtons();ensureCopyTitleButtons();wireCopyTitleButtons();wireQueuePollCopy();ensureAddFromUrlTitleFilter();ensureAddTempPreference();setupOptimizedObservers();}if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();document.addEventListener("btfw:layoutReady",boot);return{name:"feature:playlist-tools"};});BTFW.define("feature:playlistSearch",["core","bridge"],async function(){function debounce(f,ms){var t=null;return function(){clearTimeout(t);var a=arguments;t=setTimeout(function(){f.apply(null,a);},ms);}}function boot(){var container=document.getElementById("queuecontainer");var queue=document.getElementById("queue");if(!queue){return;}if(!container){container=document.createElement("div");container.id="queuecontainer";container.className="section";queue.parentNode.insertBefore(container,queue);container.appendChild(queue);}if(!container.querySelector(".btfw-pl-search")){var wrap=document.createElement("div");wrap.className="btfw-pl-search-wrap";wrap.innerHTML="<input type='text' class='btfw-pl-search' placeholder='Search playlist'>";container.insertBefore(wrap,container.firstChild);var input=wrap.querySelector("input");input.addEventListener("keyup",debounce(function(){var term=input.value.trim().toLowerCase();var items=queue.children;for(var i=0;i<items.length;i++){var it=items[i];var match=it.textContent.toLowerCase().indexOf(term)>=0;it.style.display=match?"":"none";}},150));}}if(document.readyState==="loading")document.addEventListener("DOMContentLoaded",boot);else boot();return{};});