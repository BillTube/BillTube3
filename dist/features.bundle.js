BTFW.define("feature:channels",[],async () =>{const $ = (s,r = document) => r.querySelector(s);function resolveSliderSettings(){try{const global = window.BTFW ||{};const theme = global.channelTheme ||{};const slider = theme.slider ||{};let enabled = slider.enabled;let url = slider.feedUrl || slider.url || slider.json || '';if (typeof enabled === 'undefined' && typeof theme.sliderEnabled !== 'undefined'){enabled = theme.sliderEnabled;}if (!url){url = theme.sliderJson || theme.sliderJSON || '';}if (typeof enabled === 'undefined' && global.channelSlider){enabled = global.channelSlider.enabled;if (!url) url = global.channelSlider.feedUrl || '';}if (typeof enabled === 'undefined' && typeof global.channelSliderEnabled !== 'undefined'){enabled = global.channelSliderEnabled;}if (!url && global.channelSliderJSON){url = global.channelSliderJSON;}if (typeof enabled === 'undefined' && typeof window.UI_ChannelList !== 'undefined'){enabled = window.UI_ChannelList === '1' || window.UI_ChannelList === 1;}if (!url && typeof window.Channel_JSON !== 'undefined'){url = window.Channel_JSON || '';}if (typeof enabled === 'undefined' && url){enabled = true;}return{enabled:Boolean(enabled),url:url || ''};}catch (_){return{enabled:false,url:''};}}function isChannelListEnabled(){return resolveSliderSettings().enabled;}function getChannelJSON(){return resolveSliderSettings().url || '';}function createChannelSlider(channels){const slider = document.createElement('section');slider.className = 'btfw-channels';slider.id = 'btfw-channels';slider.dataset.title = 'Featured Channels';const prev = document.createElement('button');prev.type = 'button';prev.className = 'btfw-channels__arrow btfw-channels__arrow--prev';prev.setAttribute('aria-label','Scroll featured channels left');prev.innerHTML = '<span aria-hidden="true">‹</span>';const next = document.createElement('button');next.type = 'button';next.className = 'btfw-channels__arrow btfw-channels__arrow--next';next.setAttribute('aria-label','Scroll featured channels right');next.innerHTML = '<span aria-hidden="true">›</span>';const viewport = document.createElement('div');viewport.className = 'btfw-channels__viewport';viewport.id = 'btfw-carousel';const track = document.createElement('div');track.className = 'btfw-channels__track';viewport.appendChild(track);if (channels.length === 0){const empty = document.createElement('div');empty.className = 'btfw-channels__empty';empty.textContent = 'No channels available';track.appendChild(empty);}else{channels.forEach((channel,index) =>{const item = document.createElement('article');item.className = 'btfw-channels__item';item.dataset.index = String(index);const link = document.createElement('a');link.href = channel.channel_url || '#';link.target = '_blank';link.rel = 'noopener noreferrer';link.className = 'btfw-channels__link';link.title = channel.title || channel.channel_url;const media = document.createElement('div');media.className = 'btfw-channels__media';const img = document.createElement('img');img.className = 'btfw-channels__thumb';img.src = channel.image_url;img.alt = channel.title || 'Channel thumbnail';img.loading = 'lazy';img.onerror = function(){this.classList.add('is-missing');};media.appendChild(img);const label = document.createElement('span');label.className = 'btfw-channels__label';label.textContent = channel.title || channel.channel_url || 'Channel';link.appendChild(media);link.appendChild(label);item.appendChild(link);track.appendChild(item);});}slider.appendChild(prev);slider.appendChild(viewport);slider.appendChild(next);return slider;}function injectChannelCSS(){if (document.getElementById('btfw-channels-css')) return;const style = document.createElement('style');style.id = 'btfw-channels-css';style.textContent = ` .btfw-channels{position:relative;margin-top:10px;border-radius:16px;border:1px solid rgba(109,77,246,0.22);border:1px solid color-mix(in srgb,var(--btfw-theme-accent,#6d4df6) 28%,transparent 72%);background:rgba(12,18,34,0.92);background:linear-gradient(135deg,color-mix(in srgb,var(--btfw-theme-surface,#0b111d) 94%,transparent 6%),color-mix(in srgb,var(--btfw-theme-panel,#141f36) 86%,black 14%));padding:18px 52px;display:flex;align-items:center;gap:14px;width:100%;color:var(--btfw-theme-text,#e8ecfb);box-shadow:0 24px 48px color-mix(in srgb,var(--btfw-theme-bg,#05060d) 30%,transparent 70%);backdrop-filter:blur(14px);}.btfw-channels__viewport{flex:1 1 auto;overflow:hidden;touch-action:pan-y;}.btfw-channels__track{display:flex;gap:16px;transition:transform 0.3s ease;will-change:transform;}.btfw-channels__item{flex:0 0 clamp(160px,18vw,220px);max-width:clamp(160px,18vw,220px);}.btfw-channels__link{display:flex;flex-direction:column;gap:8px;text-decoration:none;color:color-mix(in srgb,var(--btfw-theme-text,#e8ecfb) 96%,transparent 4%);background:var(--btfw-theme-surface,#0b111d);background:color-mix(in srgb,var(--btfw-theme-surface,#0b111d) 88%,transparent 12%);border-radius:12px;border:1px solid color-mix(in srgb,var(--btfw-theme-accent,#6d4df6) 22%,transparent 78%);overflow:hidden;box-shadow:0 14px 30px color-mix(in srgb,var(--btfw-theme-panel,#141f36) 28%,transparent 72%);transition:transform 0.18s ease,box-shadow 0.18s ease,border-color 0.18s ease,background 0.18s ease;cursor:grab;user-select:none;}.btfw-channels__link:hover,.btfw-channels__link:focus{transform:translateY(-4px);border-color:color-mix(in srgb,var(--btfw-theme-accent,#6d4df6) 70%,white 30%);background:color-mix(in srgb,var(--btfw-theme-panel,#141f36) 82%,var(--btfw-theme-accent,#6d4df6) 18%);box-shadow:0 18px 36px color-mix(in srgb,var(--btfw-theme-accent,#6d4df6) 35%,transparent 65%);}.btfw-channels__media{position:relative;width:100%;aspect-ratio:16 / 6;overflow:hidden;background:var(--btfw-theme-panel,#141f36);background:color-mix(in srgb,var(--btfw-theme-panel,#141f36) 88%,black 12%);}.btfw-channels__thumb{width:100%;height:100%;object-fit:cover;display:block;transition:transform 0.2s ease;}.btfw-channels__thumb.is-missing{opacity:0.45;object-fit:contain;}.btfw-channels__link:hover .btfw-channels__thumb{transform:scale(1.05);}.btfw-channels__label{padding:10px 12px 14px;font-weight:600;letter-spacing:0.01em;font-size:14px;color:color-mix(in srgb,var(--btfw-theme-text,#e6edf3) 92%,transparent 8%);text-overflow:ellipsis;overflow:hidden;white-space:nowrap;}.btfw-channels__arrow{width:38px;height:38px;border-radius:50%;border:0;display:inline-flex;align-items:center;justify-content:center;background:color-mix(in srgb,var(--btfw-theme-accent,#6d4df6) 18%,rgba(255,255,255,0.08) 82%);color:color-mix(in srgb,var(--btfw-theme-text,#e6edf3) 98%,transparent 2%);font-size:20px;cursor:pointer;transition:background 0.2s ease,transform 0.2s ease,box-shadow 0.2s ease;}.btfw-channels__arrow:hover:not([disabled]){background:color-mix(in srgb,var(--btfw-theme-accent,#6d4df6) 65%,white 35%);box-shadow:0 12px 24px color-mix(in srgb,var(--btfw-theme-accent,#6d4df6) 30%,transparent 70%);transform:translateY(-2px);}.btfw-channels__arrow[disabled]{opacity:0.4;cursor:default;pointer-events:none;}.btfw-channels--dragging .btfw-channels__link{cursor:grabbing;}.btfw-channels__empty{padding:24px;color:color-mix(in srgb,var(--btfw-theme-text,#e6edf3) 80%,transparent 20%);font-size:15px;width:100%;text-align:center;}.btfw-channels--no-scroll .btfw-channels__arrow{display:none;}@media (max-width:960px){.btfw-channels{padding:16px 44px;}.btfw-channels__item{flex-basis:190px;}}@media (max-width:768px){.btfw-channels{padding:14px 38px;gap:10px;}.btfw-channels__item{flex-basis:170px;}.btfw-channels__label{font-size:13px;}.btfw-channels__arrow{width:34px;height:34px;font-size:18px;}}@media (max-width:600px){.btfw-channels{padding:12px 32px;}.btfw-channels__item{flex-basis:150px;}}`;document.head.appendChild(style);}async function fetchChannelData(jsonUrl){try{const response = await fetch(jsonUrl);if (!response.ok) throw new Error(`HTTP ${response.status}`);const data = await response.json();if (data.list && data.list.channels && Array.isArray(data.list.channels)){return data.list.channels;}else if (data.channels && Array.isArray(data.channels)){return data.channels;}else if (Array.isArray(data)){return data;}return [];}catch (error){return [];}}function setupCarouselControls(slider,channels){if (!slider || slider._btfwCarouselWired) return;if (!channels || channels.length === 0){slider.classList.add('btfw-channels--no-scroll');return;}slider._btfwCarouselWired = true;const viewport = slider.querySelector('.btfw-channels__viewport');const track = slider.querySelector('.btfw-channels__track');const leftBtn = slider.querySelector('.btfw-channels__arrow--prev');const rightBtn = slider.querySelector('.btfw-channels__arrow--next');if (!viewport || !track) return;const items = Array.from(track.children);if (!items.length){slider.classList.add('btfw-channels--no-scroll');return;}let currentIndex = 0;let itemWidth = 0;let gap = 0;let autoTimer = null;const cleanup = () =>{if (slider._btfwCleanup) slider._btfwCleanup();slider._btfwCleanup = () =>{if (autoTimer) clearInterval(autoTimer);window.removeEventListener('resize',measure);};};const stopAuto = () =>{if (autoTimer){clearInterval(autoTimer);autoTimer = null;}};const startAuto = () =>{stopAuto();if (channels.length <= 1) return;autoTimer = setInterval(() =>{const max = getMaxIndex();if (max <= 0) return;currentIndex = currentIndex >= max ? 0:currentIndex + 1;scrollToIndex(currentIndex);},48000);};function measure(){const first = items.find(el => el.getBoundingClientRect().width > 0);if (!first){itemWidth = 0;gap = 0;return;}const rect = first.getBoundingClientRect();itemWidth = rect.width;const style = window.getComputedStyle(track);const parsedGap = parseFloat(style.columnGap || style.gap || '0');gap = Number.isFinite(parsedGap) ? parsedGap:0;updateArrows();}function getMaxIndex(){if (!itemWidth) return 0;const visible = Math.max(1,Math.floor((viewport.clientWidth + gap) / (itemWidth + gap)));return Math.max(0,items.length - visible);}function updateArrows(){const max = getMaxIndex();if (leftBtn) leftBtn.disabled = currentIndex <= 0;if (rightBtn) rightBtn.disabled = currentIndex >= max;slider.classList.toggle('btfw-channels--no-scroll',max <= 0);}function scrollToIndex(index,behavior = 'smooth'){const max = getMaxIndex();currentIndex = Math.min(Math.max(index,0),max);viewport.scrollTo({left:(itemWidth + gap) * currentIndex,behavior});updateArrows();}if (leftBtn){leftBtn.addEventListener('click',() =>{stopAuto();scrollToIndex(currentIndex - 1);startAuto();});}if (rightBtn){rightBtn.addEventListener('click',() =>{stopAuto();scrollToIndex(currentIndex + 1);startAuto();});}viewport.addEventListener('scroll',() =>{if (!itemWidth) return;const newIndex = Math.round(viewport.scrollLeft / (itemWidth + gap));if (!Number.isNaN(newIndex)){currentIndex = newIndex;updateArrows();}});slider.addEventListener('mouseenter',stopAuto);slider.addEventListener('mouseleave',startAuto);window.addEventListener('resize',measure);measure();requestAnimationFrame(measure);startAuto();slider._btfwRecalc = () =>{measure();updateArrows();};cleanup();}function placeSliderInStack(slider){const stackBody = document.querySelector('#btfw-stack .btfw-stack-item[data-bind="channels-group"] .btfw-stack-item__body');if (!stackBody) return false;if (slider.parentElement !== stackBody) stackBody.appendChild(slider);slider._btfwRecalc && slider._btfwRecalc();return true;}function scheduleStackPlacement(slider){if (placeSliderInStack(slider)) return;let attempts = 0;const iv = setInterval(() =>{attempts += 1;if (placeSliderInStack(slider) || attempts > 10) clearInterval(iv);},400);}function removeExistingSliders(){document.querySelectorAll('#btfw-channels').forEach(existing =>{if (typeof existing._btfwCleanup === 'function'){try{existing._btfwCleanup();}catch(_){}}try{existing.remove();}catch(_){}});}function injectChannelSlider(channels){removeExistingSliders();const slider = createChannelSlider(channels);const videowrap = document.getElementById('videowrap');const leftpad = document.getElementById('btfw-leftpad');let inserted = false;if (placeSliderInStack(slider)){inserted = true;}else if (videowrap && leftpad && leftpad.contains(videowrap)){leftpad.insertBefore(slider,videowrap.nextSibling);inserted = true;}else if (leftpad){leftpad.appendChild(slider);inserted = true;}if (!inserted){document.body.appendChild(slider);}scheduleStackPlacement(slider);setTimeout(() =>{setupCarouselControls(slider,channels);slider._btfwRecalc && slider._btfwRecalc();},150);}async function initializeChannels(){removeExistingSliders();if (!isChannelListEnabled()){return;}const jsonUrl = getChannelJSON();if (!jsonUrl){return;}const channels = await fetchChannelData(jsonUrl);if (channels.length === 0){injectChannelCSS();injectChannelSlider([]);return;}injectChannelCSS();injectChannelSlider(channels);}function boot(){setTimeout(initializeChannels,500);setTimeout(initializeChannels,1500);setTimeout(initializeChannels,3000);document.addEventListener('btfw:layoutReady',() =>{setTimeout(initializeChannels,300);});let themeTimer = null;const scheduleThemeSync = () =>{if (themeTimer) clearTimeout(themeTimer);themeTimer = setTimeout(() =>{themeTimer = null;initializeChannels();},120);};document.addEventListener('btfw:channelThemeTint',scheduleThemeSync);}if (document.readyState === 'loading'){document.addEventListener('DOMContentLoaded',boot);}else{boot();}return{name:'feature:channels',initialize:initializeChannels,isEnabled:isChannelListEnabled};});BTFW.define("feature:footer",[],async () =>{const $ = (selector,root = document) => root.querySelector(selector);const $$ = (selector,root = document) => Array.from(root.querySelectorAll(selector));const BRANDING_HTML = ` <div class="btfw-footer-branding__content"> <div class="btfw-footer-branding__disclaimer"> <p> The author is not responsible for any contents linked or referred to from these pages. All CyTu.be does is link or embed content that was uploaded to popular Online Video hosting sites like Youtube.com / Google Drive. All Google users signed a contract with the sites when they set up their accounts which forces them not to upload illegal content. (<a href="https://www.lumendatabase.org/topics/14" target="_blank" rel="noopener">DMCA Safe Harbor</a>) </p> </div> <div class="btfw-footer-branding__credit"> <h4> <span>BillTube Framework</span> <a href="http://discord.gg/fwadWd9" target="_blank" rel="noopener">Available Now</a> </h4> </div> </div> `;let styleInjected = false;function ensureStyles(){if (styleInjected) return;styleInjected = true;const style = document.createElement("style");style.id = "btfw-footer-styles";style.textContent = ` #btfw-footer,.btfw-footer{width:100%;}.btfw-footer__inner{display:flex;flex-direction:column;gap:2rem;padding:1.5rem 1rem 3rem;color:rgba(255,255,255,0.85);}.btfw-footer__auth{display:flex;flex-wrap:wrap;gap:0.75rem;align-items:center;justify-content:center;}.btfw-footer__form{display:inline-flex !important;gap:0.35rem;align-items:center;}.btfw-footer-branding{border-top:1px solid rgba(255,255,255,0.12);padding-top:1.25rem;font-size:0.85rem;background:rgba(5,6,13,0.35);border-radius:12px;}.btfw-footer-branding__disclaimer{margin-bottom:1rem;opacity:0.8;}.btfw-footer-branding__disclaimer p{margin:0;text-align:center;line-height:1.5;}.btfw-footer-branding__disclaimer a,.btfw-footer-branding__credit a{color:var(--btfw-color-accent,#6d4df6);text-decoration:none;font-weight:600;}.btfw-footer-branding__disclaimer a:hover,.btfw-footer-branding__credit a:hover{text-decoration:underline;}.btfw-footer-branding__credit{text-align:center;}.btfw-footer-branding__credit h4{margin:0;font-size:1rem;font-weight:600;display:flex;flex-direction:column;gap:0.35rem;}@media (min-width:640px){.btfw-footer__auth{justify-content:flex-end;}.btfw-footer__inner{padding-inline:2.5rem;}}@media (max-width:640px){.btfw-footer-branding{font-size:0.8rem;}}`;document.head.appendChild(style);}function ensureFooterSlot(){const stackContainer = document.getElementById("btfw-stack-footer");if (stackContainer){const stray = document.getElementById("btfw-footer");const strayChildren = [];if (stray && stray !== stackContainer && !stackContainer.contains(stray)){while (stray.firstChild){strayChildren.push(stray.firstChild);}stray.remove();}let host = stackContainer.querySelector("#btfw-footer") || stackContainer.querySelector(".btfw-footer");if (!host){host = document.createElement("div");host.id = "btfw-footer";host.className = "btfw-footer";stackContainer.appendChild(host);}else{host.id = "btfw-footer";host.classList.add("btfw-footer");}strayChildren.forEach(node => host.appendChild(node));// Merge any duplicate footer nodes into the primary host stackContainer.querySelectorAll("#btfw-footer ~ .btfw-footer,#btfw-footer ~ #btfw-footer").forEach(extra =>{if (extra === host) return;while (extra.firstChild) host.appendChild(extra.firstChild);extra.remove();});host.classList.remove("btfw-footer--standalone");return host;}let host = $("#btfw-footer") || $(".btfw-footer");if (!host){host = document.createElement("div");host.id = "btfw-footer";host.className = "btfw-footer";const stack = $("#btfw-content-stack") || $("#mainpage") || $("#main") || document.body;stack.appendChild(host);}return host;}function ensureFooterInner(){const slot = ensureFooterSlot();if (!slot) return null;let inner = slot.querySelector(".btfw-footer__inner");if (!inner){inner = document.createElement("div");inner.className = "btfw-footer__inner";slot.appendChild(inner);}return inner;}function ensureAuthWrap(){const inner = ensureFooterInner();if (!inner) return null;let wrap = inner.querySelector(".btfw-footer__auth");if (!wrap){wrap = document.createElement("div");wrap.className = "btfw-footer__auth";inner.prepend(wrap);}return wrap;}function ensureBrandingBlock(){const inner = ensureFooterInner();if (!inner) return null;let block = inner.querySelector(".btfw-footer-branding");if (!block){block = document.createElement("div");block.className = "btfw-footer-branding";block.innerHTML = BRANDING_HTML;inner.appendChild(block);}return block;}function moveForms(){const wrap = ensureAuthWrap();if (!wrap) return;["#logoutform","#loginform"].forEach(selector =>{$$(selector).forEach(form =>{if (!wrap.contains(form)){form.classList.remove("navbar-text","pull-right");form.classList.add("btfw-footer__form");form.style.margin = "0";form.style.display = "inline-flex";wrap.appendChild(form);}});});}function insertBranding(){ensureBrandingBlock();}function removeLegacyFooter(){document.querySelectorAll("footer#footer").forEach(legacy =>{if (legacy && legacy.isConnected){legacy.remove();}});}function maintainFooter(){ensureStyles();moveForms();insertBranding();removeLegacyFooter();}function boot(){maintainFooter();if (!document._btfwFooterObserver){const observer = new MutationObserver(() => maintainFooter());observer.observe(document.body,{childList:true,subtree:true});document._btfwFooterObserver = observer;}}if (document.readyState === "loading"){document.addEventListener("DOMContentLoaded",boot);}else{boot();}document.addEventListener("btfw:ready",() => removeLegacyFooter(),{once:true});return{name:"feature:footer",moveForms,insertBranding,removeLegacyFooter};});BTFW.define("feature:navbar",[],async () =>{const $ = (s,r=document)=>r.querySelector(s);const MOBILE_BREAKPOINT = 768;let navToggleButton = null;let mobileNavActive = false;let mobileNavHandlersBound = false;// ---------- Helpers ---------- function getUserName(){try{return (window.CLIENT && CLIENT.name) ? CLIENT.name:"";}catch(_){return "";}}function findUserlistItem(name){if (!name) return null;// Most stable:data-name const byData = document.querySelector(`#userlist li[data-name="${CSS.escape(name)}"]`);if (byData) return byData;// Fallback:scan text const items = document.querySelectorAll("#userlist li,#userlist .userlist_item,#userlist .user");for (const el of items){const t = (el.textContent || "").trim();if (t && t.replace(/\s+/g,"").toLowerCase().startsWith(name.toLowerCase())) return el;}return null;}function getProfileImgFromUserlist(name){try{const li = findUserlistItem(name);if (!li || !window.jQuery) return "";const $li = window.jQuery(li);const prof = $li.data && $li.data("profile");const img = prof && prof.image;return img || "";}catch(_){return "";}}function getCyTubeAvatar(){try{// Many installs expose USEROPTS.avatar;harmless if absent return (window.USEROPTS && USEROPTS.avatar) ? USEROPTS.avatar:"";}catch(_){return "";}}function initialsDataURL(name,sizePx){const colors = ["#1abc9c","#16a085","#f1c40f","#f39c12","#2ecc71","#27ae60","#e67e22","#d35400","#3498db","#2980b9","#e74c3c","#c0392b","#9b59b6","#8e44ad","#0080a5","#34495e","#2c3e50"];const seed = (name||"?").codePointAt(0) || 63;const bg = colors[seed % colors.length];const letters = (name||"?").trim().slice(0,2).toUpperCase() || "?";const sz = sizePx || 28;const svg = `<svg xmlns="http://www.w3.org/2000/svg" width="${sz}" height="${sz}"> <rect width="100%" height="100%" rx="${Math.round(sz*0.2)}" fill="${bg}"/> <text x="50%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="#fff" font-family="Inter,Arial,sans-serif" font-weight="600" font-size="${Math.round(sz*0.5)}">${letters}</text> </svg>`;return "data:image/svg+xml;base64," + btoa(unescape(encodeURIComponent(svg)));}function findNavList(){// Prefer the list that contains the Theme button (keeps avatar to the right of it) const themeBtn = document.getElementById("btfw-theme-btn-nav");if (themeBtn){const ul = themeBtn.closest("ul");if (ul) return ul;}// Common fallbacks (Bootstrap/Bulma) return document.querySelector(".navbar .nav.navbar-nav") || document.querySelector(".navbar-nav") || document.querySelector(".navbar .navbar-end ul") || document.querySelector(".btfw-navbar ul") || document.querySelector(".navbar ul");}function styleThemeButton(btn){if (!btn) return;btn.id = "btfw-theme-btn-nav";btn.classList.add("btfw-nav-pill");btn.classList.remove("button","is-dark","is-small","btn","btn-default","is-primary");if (btn.tagName === "BUTTON" && !btn.hasAttribute("type")){btn.type = "button";}if (!btn.getAttribute("aria-label")){btn.setAttribute("aria-label","Theme settings");}}function ensureThemeButtonHook(){// If your nav already injects the Theme button elsewhere,we do nothing. // This only assigns an ID to an existing Theme button if missing. const existing = document.getElementById("btfw-theme-btn-nav");if (existing){styleThemeButton(existing);return;}// Try to reuse a theme button in nav,or create a minimal one const navUL = findNavList();if (!navUL) return;// Look for any button with sliders icon in nav let btn = navUL.querySelector(".fa-sliders,.fa-sliders-h,.fa-sliders-simple,.fa-sliders-h::before");if (btn){const a = btn.closest("a,button");if (a){styleThemeButton(a);return;}}// As a last resort,add a small Theme button const li = document.createElement("li");const a = document.createElement("a");a.innerHTML = ` <span class="btfw-nav-pill__icon" aria-hidden="true"><i class="fa fa-sliders"></i></span> <span class="btfw-nav-pill__label">Theme</span> `;a.href = "javascript:void(0)";styleThemeButton(a);li.appendChild(a);navUL.appendChild(li);// Let theme settings wire the click via its own ensureOpeners()}function buildAvatarElement(name){const size = 28;let src = name ? (getProfileImgFromUserlist(name) || getCyTubeAvatar() || ""):"";if (!src) src = initialsDataURL(name || "Guest",size);const a = document.createElement("a");a.href = name ? "/account/profile":"/login";a.target = "_blank";a.className = "btfw-nav-avatar-link";a.title = name ? name:"Sign in";const img = document.createElement("img");img.id = "btfw-useravatar";img.className = "btfw-nav-avatar";img.src = src;img.alt = name || "guest";img.width = size;img.height = size;a.appendChild(img);return a;}function renderAvatar(){const navUL = findNavList();if (!navUL) return;let li = document.getElementById("btfw-nav-avatar-item");if (!li){li = document.createElement("li");li.id = "btfw-nav-avatar-item";li.className = "btfw-nav-avatar-item";navUL.appendChild(li);}else{li.innerHTML = "";}li.appendChild(buildAvatarElement(getUserName()));}function pruneNavLinks(){const navUL = findNavList();if (!navUL) return;Array.from(navUL.querySelectorAll("li")).forEach(li =>{const link = li.querySelector("a");if (!link) return;const label = (link.textContent || "").trim().toLowerCase();const href = (link.getAttribute("href") || "").trim();const isHome = label === "home" || href === "/";const isLayout = label === "layout" || /layout/i.test(link.dataset?.target || "");if (isHome || isLayout){li.remove();}});}function refresh(){pruneNavLinks();renderAvatar();setupMobileNav();}function ensureMobileToggle(){const host = document.getElementById("btfw-navhost");if (!host) return null;if (!navToggleButton){navToggleButton = document.createElement("button");navToggleButton.id = "btfw-nav-toggle";navToggleButton.type = "button";navToggleButton.className = "btfw-nav-toggle";navToggleButton.setAttribute("aria-expanded","false");navToggleButton.setAttribute("aria-label","Open navigation");navToggleButton.innerHTML = ` <span class="btfw-nav-toggle__bars" aria-hidden="true"> <span></span><span></span><span></span> </span> <span class="btfw-nav-toggle__label">Menu</span> `;navToggleButton.addEventListener("click",() =>{const hostEl = document.getElementById("btfw-navhost");if (!hostEl) return;const isOpen = hostEl.getAttribute("data-mobile-open") === "true";const next = !isOpen;hostEl.setAttribute("data-mobile-open",next ? "true":"false");syncToggleState();});}if (navToggleButton.parentElement !== host){host.insertBefore(navToggleButton,host.firstChild);}return navToggleButton;}function syncToggleState(){const host = document.getElementById("btfw-navhost");if (!host || !navToggleButton) return;const isOpen = host.getAttribute("data-mobile-open") === "true";// ✅ FIX:Only update attributes if they changed const currentExpanded = navToggleButton.getAttribute("aria-expanded");if (currentExpanded !== (isOpen ? "true":"false")){navToggleButton.setAttribute("aria-expanded",isOpen ? "true":"false");}const currentLabel = navToggleButton.getAttribute("aria-label");const newLabel = isOpen ? "Close navigation":"Open navigation";if (currentLabel !== newLabel){navToggleButton.setAttribute("aria-label",newLabel);}navToggleButton.classList.toggle("btfw-nav-toggle--open",isOpen);const label = navToggleButton.querySelector(".btfw-nav-toggle__label");if (label){const newText = isOpen ? "Close":"Menu";// ✅ FIX:ONLY UPDATE IF CHANGED if (label.textContent !== newText){label.textContent = newText;}}}function updateMobileNavState(){const host = document.getElementById("btfw-navhost");if (!host) return;ensureMobileToggle();const shouldEnable = window.innerWidth <= MOBILE_BREAKPOINT;host.classList.toggle("btfw-navhost--mobile",shouldEnable);if (shouldEnable){if (!mobileNavActive){host.setAttribute("data-mobile-open","false");mobileNavActive = true;}}else{host.setAttribute("data-mobile-open","true");mobileNavActive = false;}syncToggleState();}function setupMobileNav(){const host = document.getElementById("btfw-navhost");if (!host) return;ensureMobileToggle();updateMobileNavState();if (mobileNavHandlersBound) return;mobileNavHandlersBound = true;window.addEventListener("resize",() => updateMobileNavState());host.addEventListener("click",(ev) =>{if (window.innerWidth > MOBILE_BREAKPOINT) return;if (!host) return;const target = ev.target.closest?.('#btfw-navhost a,#btfw-navhost button');if (!target || target === navToggleButton) return;host.setAttribute("data-mobile-open","false");syncToggleState();},true);}// ---------- Boot ---------- function boot(){// Keep existing nav look;only ensure Theme button hook and avatar item. ensureThemeButtonHook();pruneNavLinks();renderAvatar();setupMobileNav();// Refresh when userlist changes (profile image may load later) const userlist = $("#userlist");if (userlist && !userlist._btfwNavMO){const mo = new MutationObserver(()=> refresh());mo.observe(userlist,{childList:true,subtree:true});userlist._btfwNavMO = mo;}// Refresh on likely auth/profile events if available try{if (window.socket && socket.on){socket.on("login",refresh);socket.on("logout",refresh);socket.on("setProfile",refresh);socket.on("userlist",refresh);}}catch(_){}// Also retry a couple times during early boot in case nav mounts late let tries = 0;const t = setInterval(()=>{tries++;const navUL = findNavList();if (navUL){ensureThemeButtonHook();pruneNavLinks();renderAvatar();setupMobileNav();}if (tries > 10 || navUL) clearInterval(t);},300);}if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();return{name:"feature:navbar",refresh};});BTFW.define("feature:modal-skin",[],async () =>{const $ = (s,r=document)=>r.querySelector(s);const $$ = (s,r=document)=>Array.from(r.querySelectorAll(s));function restyleButtons(root){const map = [ ["btn-primary","is-link"],["btn-danger","is-danger"],["btn-warning","is-warning"],["btn-success","is-success"],["btn-info","is-info"],["btn-default","is-dark"] ];root.querySelectorAll(".btn").forEach(btn=>{btn.classList.add("button","is-small");btn.classList.remove("btn","btn-lg","btn-sm","btn-xs");// map Bootstrap flavor to Bulma flavor let mapped=false;for (const [bs,bul] of map){if (btn.classList.contains(bs)){btn.classList.remove(bs);btn.classList.add(bul);mapped=true;}}if (!mapped) btn.classList.add("is-dark");// alignments if (btn.classList.contains("pull-right")){btn.classList.remove("pull-right");btn.classList.add("is-pulled-right");}if (btn.classList.contains("pull-left")){btn.classList.remove("pull-left");btn.classList.add("is-pulled-left");}});}function ensureDeleteButton(modal){const header = modal.querySelector(".modal-header");if (!header) return;if (header.querySelector(".delete")) return;const del = document.createElement("button");del.className = "delete";del.setAttribute("aria-label","close");del.addEventListener("click",(e)=>{e.preventDefault();// hide using Bootstrap if available try{if (window.jQuery) window.jQuery(modal).modal("hide");}catch(_){}modal.classList.remove("is-active");// harmless for non-bulma});header.appendChild(del);}function decorate(modal){if (!modal || modal.classList.contains("btfw-modal") || modal.classList.contains("btfw-bulma-skin")) return;modal.classList.add("btfw-bulma-skin");// tag parts so CSS can skin them like Bulma modal-card modal.querySelectorAll(".modal-content").forEach(c=>c.classList.add("btfw-card"));modal.querySelectorAll(".modal-header").forEach(h=>h.classList.add("btfw-card-head"));modal.querySelectorAll(".modal-body").forEach(b=>b.classList.add("btfw-card-body"));modal.querySelectorAll(".modal-footer").forEach(f=>f.classList.add("btfw-card-foot"));// add bulma-like close button ensureDeleteButton(modal);// restyle buttons once now,and again on each show restyleButtons(modal);// When Bootstrap shows the modal,restyle again (in case content was injected) try{if (window.jQuery){window.jQuery(modal).on("shown.bs.modal",function(){restyleButtons(modal);});}}catch(_){}}function skinAll(){$$(".modal").forEach(m => decorate(m));}function boot(){// initial pass skinAll();const handleBootstrapModal = (event)=>{const modal = event?.target && event.target.classList?.contains("modal") ? event.target:event?.target?.closest?.(".modal");if (modal) decorate(modal);};document.addEventListener("show.bs.modal",handleBootstrapModal,true);document.addEventListener("shown.bs.modal",handleBootstrapModal,true);}if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();return{name:"feature:modal-skin",reskin:skinAll};});BTFW.define("feature:emotes",[],async () =>{const $ = (s,r=document) => r.querySelector(s);const $$ = (s,r=document) => Array.from(r.querySelectorAll(s));function insertAtCursor(input,text){input.focus();const s = input.selectionStart ?? input.value.length;const e = input.selectionEnd ?? input.value.length;const before = input.value.slice(0,s);const after = input.value.slice(e);input.value = before + text + after;const pos = before.length + text.length;input.selectionStart = input.selectionEnd = pos;input.dispatchEvent(new Event("input",{bubbles:true}));}// Ensure single-codepoint emoji render as emoji (VS16) function normalizeEmojiForInsert(s){if (/\uFE0F/.test(s)) return s;const cps = Array.from(s);if (cps.length === 1) return s + "\uFE0F";return s;}function ensureChatwrapRelative(){const wrap = $("#chatwrap");if (wrap && getComputedStyle(wrap).position === "static"){wrap.style.position = "relative";}}const CHANNEL_NAME = (window.CHANNEL && window.CHANNEL.name) || "default";const RECENT_KEY = `btfw:recent:emotes:${CHANNEL_NAME}`;let state ={tab:"emotes",// "emotes" | "emoji" | "recent" list:{emotes:[],emoji:[],recent:[]},filtered:[],highlight:0,emojiReady:false,search:"",renderEpoch:0 // cancels in-flight chunked renders};// Grid sizing logic (purely for keyboard nav calculations) const TILE_APPROX = 72;// px per tile including gaps for estimating columns function gridCols(grid){const w = grid.clientWidth || 520;return Math.max(3,Math.floor(w / TILE_APPROX));}function loadChannelEmotes(){const src = Array.isArray(window.CHANNEL?.emotes) ? window.CHANNEL.emotes:[];state.list.emotes = src .filter(x => x && x.name) .map(x => ({name:x.name,image:x.image || ""}));}async function loadEmoji(){try{const raw = localStorage.getItem("btfw:emoji:cache");if (raw){state.list.emoji = JSON.parse(raw);state.emojiReady = true;render(true);return;}}catch(_){}const url = "https://cdn.jsdelivr.net/npm/emoji.json@13.1.0/emoji.json";try{const res = await fetch(url,{cache:"force-cache"});const arr = await res.json();state.list.emoji = arr.map(e => ({char:e.char,name:(e.name || "").toLowerCase(),keywords:(e.keywords || "").toLowerCase()}));localStorage.setItem("btfw:emoji:cache",JSON.stringify(state.list.emoji));}catch(_){state.list.emoji = [{char:"😀",name:"grinning face",keywords:"smile happy"},{char:"😂",name:"face with tears of joy",keywords:"laugh cry"},{char:"😍",name:"smiling face with heart-eyes",keywords:"love"},{char:"👍",name:"thumbs up",keywords:"like ok yes"},{char:"🔥",name:"fire",keywords:"lit hot"},{char:"🎉",name:"party popper",keywords:"celebrate confetti"},];}state.emojiReady = true;render(true);}function loadRecent(){try{state.list.recent = JSON.parse(localStorage.getItem(RECENT_KEY) || "[]");}catch(_){state.list.recent = [];}}function pushRecent(item){const key = item.kind === "emoji" ? item.char:item.name;state.list.recent = state.list.recent.filter(x => (x.kind==="emoji" ? x.char:x.name) !== key);state.list.recent.unshift(item);state.list.recent = state.list.recent.slice(0,24);try{localStorage.setItem(RECENT_KEY,JSON.stringify(state.list.recent));}catch(_){}}function ensurePopover(){let pop = $("#btfw-emotes-pop");if (pop) return pop;ensureChatwrapRelative();pop = document.createElement("div");pop.id = "btfw-emotes-pop";pop.className = "btfw-popover btfw-emotes-pop hidden";pop.innerHTML = ` <div class="btfw-emotes-head"> <div class="btfw-emotes-tabs"> <button class="btfw-tab is-active" data-tab="emotes">Channel</button> <button class="btfw-tab" data-tab="emoji">Emoji</button> <button class="btfw-tab" data-tab="recent">Recent</button> </div> <div class="btfw-emotes-search"> <input id="btfw-emotes-search" type="text" placeholder="Search…"> <button id="btfw-emotes-clear" title="Clear">Clear</button> </div> <button class="btfw-emotes-close" title="Close">×</button> </div> <div id="btfw-emotes-grid" class="btfw-emotes-grid" tabindex="0" aria-label="Emote grid"></div> `;const wrap = $("#chatwrap") || document.body;wrap.appendChild(pop);const gridEl = pop.querySelector("#btfw-emotes-grid");if (gridEl){gridEl.setAttribute("data-twemoji-skip","true");gridEl.classList.add("btfw-emoji-grid--native");}// Tabs pop.querySelector(".btfw-emotes-tabs").addEventListener("click",ev=>{const btn = ev.target.closest(".btfw-tab");if (!btn) return;pop.querySelectorAll(".btfw-tab").forEach(x=>x.classList.toggle("is-active",x===btn));state.tab = btn.getAttribute("data-tab");state.search = "";$("#btfw-emotes-search").value = "";if (state.tab === "emoji" && !state.emojiReady) loadEmoji();render(true);focusGrid();});// Debounced search (function(){let t = 0;$("#btfw-emotes-search",pop).addEventListener("input",e=>{state.search = e.target.value.trim();clearTimeout(t);t = setTimeout(()=> render(true),120);});})();$("#btfw-emotes-clear",pop).addEventListener("click",()=>{state.search = "";$("#btfw-emotes-search").value = "";render(true);focusGrid();});// Close button $(".btfw-emotes-close",pop).addEventListener("click",(e)=>{e.preventDefault();e.stopPropagation();close();});// Keyboard navigation (full list) $("#btfw-emotes-grid",pop).addEventListener("keydown",ev=>{const grid = $("#btfw-emotes-grid");const total = grid.querySelectorAll(".btfw-emote-tile").length;if (!total) return;const cols = gridCols(grid);switch(ev.key){case "ArrowRight":state.highlight = Math.min(total-1,state.highlight+1);break;case "ArrowLeft":state.highlight = Math.max(0,state.highlight-1);break;case "ArrowDown":state.highlight = Math.min(total-1,state.highlight + cols);break;case "ArrowUp":state.highlight = Math.max(0,state.highlight - cols);break;case "Enter":{const tile = grid.querySelector(`.btfw-emote-tile[data-index="${state.highlight}"]`);if (tile) tile.click();ev.preventDefault();return;}case "Escape":close();return;default:return;}ev.preventDefault();highlightActive();ensureVisible();});// Click-outside to close document.addEventListener("click",(e)=>{if (pop.classList.contains("hidden")) return;const within = e.target.closest("#btfw-emotes-pop") || e.target.closest("#btfw-btn-emotes");if (!within) close();},true);// First position & fixed height positionPopover(true);return pop;}function focusGrid(preventScroll = true){const grid = document.getElementById("btfw-emotes-grid");if (!grid || typeof grid.focus !== "function") return;if (preventScroll){try{grid.focus({preventScroll:true});return;}catch(_){}}try{grid.focus();}catch(_){}}function findBottomBar(){// Prefer custom bottom bar → fallback to CyTube controls → final fallback:input itself return document.getElementById("btfw-chat-bottombar") || document.getElementById("chatcontrols") || document.getElementById("chatline");}function positionPopover(){const pop = document.getElementById("btfw-emotes-pop");if (!pop) return;if (window.BTFW_positionPopoverAboveChatBar){window.BTFW_positionPopoverAboveChatBar(pop,{widthPx:530,widthVw:92,maxHpx:480,maxHvh:70});}}function watchPosition(){const wrap = document.getElementById("chatwrap") || document.body;const anchor = findBottomBar() || wrap;if (wrap._btfwEmoteWatch) return;wrap._btfwEmoteWatch = true;const onReflow = () => positionPopover(false);window.addEventListener("resize",onReflow);window.addEventListener("scroll",onReflow,true);if (window.ResizeObserver){const ro = new ResizeObserver(onReflow);ro.observe(wrap);if (anchor && anchor !== wrap) ro.observe(anchor);wrap._btfwEmoteRO = ro;}else{const mo = new MutationObserver(onReflow);mo.observe(wrap,{attributes:true,childList:true,subtree:true});if (anchor && anchor !== wrap) mo.observe(anchor,{attributes:true,childList:true,subtree:true});wrap._btfwEmoteMO = mo;}}function render(fromSearch){const grid = $("#btfw-emotes-grid");if (!grid) return;// Filter entire list const q = (state.search || "").toLowerCase();if (state.tab === "emotes"){state.filtered = q ? state.list.emotes.filter(x => x.name.toLowerCase().includes(q)):state.list.emotes;}else if (state.tab === "emoji"){state.filtered = q ? state.list.emoji.filter(x => x.name.includes(q) || x.keywords.includes(q)):state.list.emoji;}else{state.filtered = q ? state.list.recent.filter(x => x.kind==="emoji" ? (x.char+(x.name||"")+(x.keywords||"")).toLowerCase().includes(q):(x.name||"").toLowerCase().includes(q)):state.list.recent;}// Reset scroll & highlight on new search/tab if (fromSearch){grid.scrollTop = 0;state.highlight = 0;}// Start a new render epoch (cancel any in-flight chunk) const epoch = ++state.renderEpoch;// Hard clear and start chunked build grid.innerHTML = "";const total = state.filtered.length;let i = 0;const CHUNK = 200;function makeTile(item,idxAbs){const tile = document.createElement("div");tile.className = "btfw-emote-tile";tile.setAttribute("data-index",String(idxAbs));if (state.tab==="emoji" || item.kind==="emoji"){tile.classList.add("btfw-emote-tile--emoji");tile.dataset.kind = "emoji";tile.setAttribute("aria-label",item.name || item.char || "Emoji");tile.dataset.emoji = item.char;const span = document.createElement("span");span.className = "btfw-emoji";span.textContent = item.char;span.setAttribute("aria-hidden","true");tile.title = item.name || "";tile.appendChild(span);}else{tile.classList.add("btfw-emote-tile--emote");tile.dataset.kind = "emote";const img = document.createElement("img");img.className = "btfw-emote-img";img.src = item.image || "";img.alt = item.name;img.loading = "lazy";img.decoding = "async";img.onerror = ()=>{img.style.display="none";tile.textContent = item.name;};tile.title = item.name;tile.setAttribute("aria-label",item.name || "Emote");tile.appendChild(img);}tile.addEventListener("click",()=>{const input = $("#chatline");if (!input) return;if (state.tab==="emoji" || item.kind==="emoji"){insertAtCursor(input,normalizeEmojiForInsert(item.char) + " ");pushRecent({kind:"emoji",char:item.char,name:item.name,keywords:item.keywords});}else{insertAtCursor(input," " + item.name + " ");pushRecent({kind:"emote",name:item.name,image:item.image});}close();});return tile;}function step(){if (epoch !== state.renderEpoch) return;// canceled const frag = document.createDocumentFragment();const end = Math.min(total,i + CHUNK);for (;i < end;i++){frag.appendChild(makeTile(state.filtered[i],i));}grid.appendChild(frag);// Let emoji-compat (Twemoji) parse the appended chunk document.dispatchEvent(new CustomEvent("btfw:emotes:rendered",{detail:{container:grid}}));if (i < total){if ('requestIdleCallback' in window){requestIdleCallback(step,{timeout:50});}else{setTimeout(step,0);}}else{// Finalize selection styling highlightActive();}}step();}function highlightActive(){const grid = $("#btfw-emotes-grid");if (!grid) return;grid.querySelectorAll(".btfw-emote-tile.is-active").forEach(el => el.classList.remove("is-active"));const active = grid.querySelector(`.btfw-emote-tile[data-index="${state.highlight}"]`);if (active) active.classList.add("is-active");}function ensureVisible(){const grid = $("#btfw-emotes-grid");const active = grid && grid.querySelector(`.btfw-emote-tile[data-index="${state.highlight}"]`);if (!grid || !active) return;const r = active.getBoundingClientRect();const gr = grid.getBoundingClientRect();if (r.top < gr.top) grid.scrollTop -= (gr.top - r.top) + 8;else if (r.bottom > gr.bottom) grid.scrollTop += (r.bottom - gr.bottom) + 8;}function removeLegacyButtons(){const sels = [ "#emotelistbtn","#emotelist","#emote-list","#emote-btn",'button[title*="Emote"]','button[onclick*="emote"]' ];sels.forEach(sel => $$(sel).forEach(el => el.remove()));}function findBottomBarContainer(){return document.getElementById("btfw-chat-bottombar") || document.querySelector("#chatcontrols .input-group-btn") || document.getElementById("chatcontrols") || document.getElementById("chatwrap");}function ensureOurButton(){if ($("#btfw-btn-emotes")) return;const bar = findBottomBarContainer();if (!bar) return;const btn = document.createElement("button");btn.id = "btfw-btn-emotes";btn.type = "button";btn.className = "button is-dark is-small btfw-chatbtn btfw-btn-emotes";btn.innerHTML = (window.FontAwesome || document.querySelector('.fa')) ? '<i class="fa fa-smile" aria-hidden="true"></i>':'<span aria-hidden="true">🙂</span>';btn.title = "Emotes / Emoji";// place before GIF button if present const gifBtn = bar.querySelector("#btfw-btn-gif,.btfw-btn-gif");if (gifBtn && gifBtn.parentNode) gifBtn.parentNode.insertBefore(btn,gifBtn);else bar.appendChild(btn);btn.addEventListener("click",ev=>{ev.preventDefault();ev.stopPropagation();const pop = document.getElementById("btfw-emotes-pop");(pop && !pop.classList.contains("hidden")) ? close():open();},{capture:true});}function bindAnyExistingOpeners(){["#btfw-btn-emotes",".btfw-btn-emotes"].forEach(sel=>{document.querySelectorAll(sel).forEach(el=>{el.removeAttribute("onclick");if (window.jQuery){try{jQuery(el).off("click");}catch(_){}}const c = el.cloneNode(true);el.parentNode.replaceChild(c,el);c.addEventListener("click",ev=>{ev.preventDefault();ev.stopPropagation();const pop = document.getElementById("btfw-emotes-pop");(pop && !pop.classList.contains("hidden")) ? close():open();},{capture:true});});});}function open(){const pop = ensurePopover();loadChannelEmotes();loadRecent();state.tab="emotes";state.search="";state.highlight=0;$("#btfw-emotes-search").value = "";// activate correct tab styling pop.querySelectorAll(".btfw-tab").forEach(b=>b.classList.toggle("is-active",b.getAttribute("data-tab")==="emotes"));positionPopover(true);// compute fixed height once per open pop.classList.remove("hidden");render(true);focusGrid();}function close(){$("#btfw-emotes-pop")?.classList.add("hidden");}function boot(){removeLegacyButtons();ensureOurButton();bindAnyExistingOpeners();watchPosition();// NO warm-up emoji fetch;loads on first Emoji tab open}if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();return{name:"feature:emotes",open,close,render,positionPopover};});BTFW.define("feature:emoji-compat",[],async () =>{const LS = "btfw:emoji:twemoji";// "1" | "0" const TW_VER = "14.0.2";const TW_JS = `https://cdn.jsdelivr.net/npm/twemoji@${TW_VER}/dist/twemoji.min.js`;const TW_ASSETS_BASE = `https://cdn.jsdelivr.net/npm/twemoji@${TW_VER}/assets/`;const SKIP_SELECTOR = "[data-twemoji-skip='true']";let enabled = false;let mo = null;function getEnabled(){try{return localStorage.getItem(LS) === "1";}catch(_){return false;}}function setEnabled(v){enabled = !!v;try{localStorage.setItem(LS,v ? "1":"0");}catch(_){}if (enabled){ensureTwemoji().then(() =>{parsePicker();startChatObserver();});}else{stopChatObserver();}}function ensureTwemoji(){return new Promise((resolve,reject)=>{if (window.twemoji) return resolve();const s = document.createElement("script");s.async = true;s.defer = true;s.src = TW_JS + "?v=" + Date.now();s.onload = ()=> resolve();s.onerror = ()=> reject(new Error("Failed to load Twemoji"));document.head.appendChild(s);});}// Hide until loaded + set attrs + remove broken/orphan FE0F images function prepImages(root){if (!root) return;root.querySelectorAll("img.twemoji").forEach(img =>{// Add attrs for smoother loading img.setAttribute("loading","lazy");img.setAttribute("decoding","async");// Fade-in on load;if already cached,mark ready immediately if (img.complete && img.naturalWidth > 0) img.classList.add("is-ready");else{img.addEventListener("load",()=> img.classList.add("is-ready"),{once:true});}// If the src is an orphaned FE0F (variation selector) image,remove it try{if (img.alt === "\uFE0F" || /\/fe0f(?:\.svg|\.png)$/.test(img.src)){img.remove();}}catch(_){}// Also remove truly broken images img.addEventListener("error",()=> img.remove(),{once:true});});}function shouldSkip(node){if (!node) return false;if (node.nodeType === 1){if (node.matches?.(SKIP_SELECTOR)) return true;if (node.closest?.(SKIP_SELECTOR)) return true;}if (node.nodeType === 11){// DocumentFragment return Array.from(node.childNodes || []).every(child => shouldSkip(child));}return false;}function parseNode(node){if (!window.twemoji || !enabled || !node) return;if (shouldSkip(node)) return;window.twemoji.parse(node,{base:TW_ASSETS_BASE,folder:"svg",ext:".svg",className:"twemoji",// add attributes to every generated <img> attributes:() => ({loading:"lazy",decoding:"async"})});prepImages(node);}function parsePicker(){const grid = document.getElementById("btfw-emotes-grid");if (grid) parseNode(grid);}function startChatObserver(){const buf = document.getElementById("messagebuffer");if (!buf) return;stopChatObserver();mo = new MutationObserver((muts)=>{for (const m of muts){m.addedNodes && m.addedNodes.forEach(n =>{if (n.nodeType === 1) parseNode(n);});}});mo.observe(buf,{childList:true,subtree:true});// initial pass parseNode(buf);}function stopChatObserver(){if (mo){try{mo.disconnect();}catch(_){}mo = null;}}// Re-parse just the picker window when it renders/updates document.addEventListener("btfw:emotes:rendered",(e)=>{const container = e.detail?.container || null;if (enabled && container && !shouldSkip(container)){parseNode(container);}});function boot(){setEnabled(getEnabled());}if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();return{name:"feature:emoji-compat",getEnabled,setEnabled};});BTFW.define("feature:emoji-loader",[],async () =>{const $$ = (s,r=document)=>Array.from(r.querySelectorAll(s));function prepCell(cell){if (!cell || cell._btfwReady) return;cell._btfwReady = true;const img = cell.querySelector(".btfw-emoji-img");if (!img) return;cell.classList.add("loading");img.addEventListener("load",()=>{cell.classList.remove("loading");cell.classList.add("ready");},{once:true});img.addEventListener("error",()=>{cell.classList.remove("loading");img.style.display = "none";},{once:true});if (img.complete && img.naturalWidth > 0){// already cached cell.classList.remove("loading");cell.classList.add("ready");}}function scan(){$$(".btfw-emoji-grid .btfw-emoji-cell").forEach(prepCell);}const mo = new MutationObserver(()=> scan());mo.observe(document.body,{childList:true,subtree:true});if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",scan);else scan();return{name:"feature:emoji-loader"};});BTFW.define("feature:gifs",[],async () =>{const $ = (s,r=document) => r.querySelector(s);const $$ = (s,r=document) => Array.from(r.querySelectorAll(s));const PER_PAGE = 12;const K ={giphy:"btfw:giphy:key",tenor:"btfw:tenor:key"};const DEFAULT_GIPHY = "bb2006d9d3454578be1a99cfad65913d";const DEFAULT_TENOR = "5WPAZ4EXST2V";// Tenor v1 used by BillTube2 function getKey(which){try{return (localStorage.getItem(K[which]) || "").trim();}catch (_){return "";}}function effKey(which,fallback){const v = getKey(which);return v || fallback;}const state ={provider:"giphy",// "giphy" | "tenor" query:"",page:1,total:0,items:[],//{id,thumb,urlClassic}loading:false};// Track rendered state for optimized rendering let renderedItems = [];// Track what's currently rendered let gridClickHandlerAttached = false;// Ensure we only attach the delegated handler once function insertAtCursor(input,text){input.focus();const s = input.selectionStart ?? input.value.length;const e = input.selectionEnd ?? input.value.length;const before = input.value.slice(0,s);const after = input.value.slice(e);input.value = before + text + after;const pos = before.length + text.length;input.selectionStart = input.selectionEnd = pos;input.dispatchEvent(new Event("input",{bubbles:true}));}function stripQuery(u){return (u||"").split("?")[0].split("#")[0];}function buildGiphyClassic(id){return `https://media1.giphy.com/media/${id}/giphy.gif`;}// NOTE:media1 (digit) for your regex function normTenor(u){return stripQuery(u);}function ensureOpeners(){["#btfw-btn-gif",".btfw-btn-gif","#giphybtn","#gifbtn"].forEach(sel=>{$$(sel).forEach(el=>{el.removeAttribute("onclick");const c = el.cloneNode(true);el.parentNode.replaceChild(c,el);c.addEventListener("click",e =>{e.preventDefault();open();},{capture:true});});});if (!$("#btfw-btn-gif")){const bar = document.getElementById("btfw-chat-bottombar") || document.querySelector("#chatcontrols .input-group-btn") || document.getElementById("chatcontrols") || document.getElementById("chatwrap");if (bar){const btn = document.createElement("button");btn.id = "btfw-btn-gif";btn.type = "button";btn.className = "button is-dark is-small btfw-chatbtn btfw-btn-gif";btn.innerHTML = (document.querySelector(".fa")) ? '<i class="fa fa-file-video-o"></i>':'GIF';btn.title = "GIFs";bar.appendChild(btn);btn.addEventListener("click",e =>{e.preventDefault();open();},{capture:true});}}}let modal = null;function ensureModal(){if (modal) return modal;modal = document.createElement("div");modal.id = "btfw-gif-modal";modal.className = "modal is-active";modal.innerHTML = ` <div class="modal-background"></div> <div class="modal-card btfw-modal"> <header class="modal-card-head"> <p class="modal-card-title">GIFs</p> <button class="delete" aria-label="close"></button> </header> <section class="modal-card-body"> <div class="btfw-gif-toolbar"> <div class="tabs is-boxed is-small btfw-gif-tabs"> <ul> <li class="is-active" data-p="giphy"><a>Giphy</a></li> <li data-p="tenor"><a>Tenor</a></li> </ul> </div> <div class="btfw-gif-search"> <input id="btfw-gif-q" class="input is-small" type="text" placeholder="Search GIFs…"> <button id="btfw-gif-go" class="button is-link is-small">Search</button> <button id="btfw-gif-trending" class="button is-dark is-small">Trending</button> </div> </div> <div id="btfw-gif-notice" class="btfw-gif-notice is-hidden"></div> <div id="btfw-gif-grid" class="btfw-gif-grid"></div> <nav class="pagination is-centered btfw-gif-pager" role="navigation" aria-label="pagination"> <button id="btfw-gif-prev" class="button is-dark is-small">Prev</button> <span id="btfw-gif-pages" class="btfw-gif-pages">1 / 1</span> <button id="btfw-gif-next" class="button is-dark is-small">Next</button> </nav> </section> <footer class="modal-card-foot"> <button class="button is-link" id="btfw-gif-close">Close</button> </footer> </div> `;document.body.appendChild(modal);modal.querySelector(".modal-background").addEventListener("click",close);modal.querySelector(".delete").addEventListener("click",close);$("#btfw-gif-close",modal).addEventListener("click",close);modal.querySelector(".btfw-gif-tabs ul").addEventListener("click",e=>{const li = e.target.closest("li[data-p]");if (!li) return;modal.querySelectorAll(".btfw-gif-tabs li").forEach(x=>x.classList.toggle("is-active",x===li));state.provider = li.getAttribute("data-p");state.page = 1;search();});$("#btfw-gif-go",modal).addEventListener("click",()=>{state.page = 1;search();});$("#btfw-gif-q",modal).addEventListener("keydown",e=>{if (e.key === "Enter"){state.page = 1;search();}});$("#btfw-gif-trending",modal).addEventListener("click",()=>{$("#btfw-gif-q").value = "";state.page = 1;search();});$("#btfw-gif-prev",modal).addEventListener("click",()=>{if (state.page > 1){state.page--;debouncedRender();}});$("#btfw-gif-next",modal).addEventListener("click",()=>{const totalPages = Math.max(1,Math.ceil(state.total / PER_PAGE));if (state.page < totalPages){state.page++;debouncedRender();}});return modal;}function showNotice(msg){const n = $("#btfw-gif-notice",modal);n.textContent = msg || "";n.classList.toggle("is-hidden",!msg);}async function fetchGiphy(q){const key = effKey("giphy",DEFAULT_GIPHY);const endpoint = q ? "https://api.giphy.com/v1/gifs/search":"https://api.giphy.com/v1/gifs/trending";const url = new URL(endpoint);url.searchParams.set("api_key",key);if (q) url.searchParams.set("q",q);url.searchParams.set("limit","50");url.searchParams.set("rating","pg-13");const res = await fetch(url.toString());if (!res.ok) throw new Error(`GIPHY_${res.status}`);const json = await res.json();const list = (json.data || []).map(g =>{const id = g.id || "";// always present const thumb = (g.images && (g.images.fixed_width_small?.url || g.images.fixed_width?.url || g.images.downsized_still?.url)) || "";const urlClassic = id ? buildGiphyClassic(id):"";// <— classic format ONLY return{id,thumb,urlClassic};});return{items:list,total:list.length};}async function fetchTenor(q){const key = effKey("tenor",DEFAULT_TENOR);// Tenor v1 to match BillTube2 const endpoint = q ? "https://api.tenor.com/v1/search":"https://api.tenor.com/v1/trending";const url = new URL(endpoint);url.searchParams.set("key",key);if (q) url.searchParams.set("q",q);url.searchParams.set("limit","50");const res = await fetch(url.toString());if (!res.ok) throw new Error(`TENOR_${res.status}`);const json = await res.json();const list = (json.results || []).map(t =>{const gif = t.media?.[0]?.gif?.url || t.media?.[0]?.mediumgif?.url || t.media?.[0]?.tinygif?.url || "";const tiny = t.media?.[0]?.nanogif?.url || t.media?.[0]?.tinygif?.url || gif;return{id:t.id,thumb:tiny,urlClassic:normTenor(gif)};});return{items:list,total:list.length};}async function search(){const q = ($("#btfw-gif-q",ensureModal()).value || "").trim();state.query = q;state.page = 1;state.loading = true;renderSkeleton();try{const{items,total}= (state.provider === "giphy") ? await fetchGiphy(q):await fetchTenor(q);state.items = items;state.total = total;state.loading = false;showNotice(total ? "":"No results. Try a different search.");render();}catch (e){state.items = [];state.total = 0;state.loading = false;showNotice("Failed to load GIFs (key limit or network). Try again,or set your own keys in localStorage.");render();}}function renderSkeleton(){const grid = $("#btfw-gif-grid",ensureModal());// Clear rendered state renderedItems = [];// Only clear if we're not already showing skeletons const existingSkeletons = grid.querySelectorAll('.is-skeleton');if (existingSkeletons.length === PER_PAGE){return;// Already showing correct number of skeletons}grid.innerHTML = "";const frag = document.createDocumentFragment();for (let i = 0;i < PER_PAGE;i++){const sk = document.createElement("div");sk.className = "btfw-gif-cell is-skeleton";frag.appendChild(sk);}grid.appendChild(frag);$("#btfw-gif-pages").textContent = "… / …";}function render(){const grid = $("#btfw-gif-grid",ensureModal());// Setup event delegation (only once) setupGridClickHandler(grid);const totalPages = Math.max(1,Math.ceil(state.total / PER_PAGE));const clamped = Math.max(1,Math.min(totalPages,state.page));if (clamped !== state.page) state.page = clamped;const start = (state.page - 1) * PER_PAGE;const pageItems = state.items.slice(start,start + PER_PAGE);// OPTIMIZATION:Check if we can update in place const canUpdateInPlace = shouldUpdateInPlace(pageItems,grid);if (canUpdateInPlace){// Fast path:update existing elements updateExistingCells(grid,pageItems);}else{// Full render needed fullRender(grid,pageItems);}// Update rendered state renderedItems = pageItems.map(item => ({id:item.id,thumb:item.thumb,urlClassic:item.urlClassic}));// Update pagination $("#btfw-gif-pages").textContent = `${state.page}/ ${totalPages}`;$("#btfw-gif-prev").disabled = (state.page <= 1);$("#btfw-gif-next").disabled = (state.page >= totalPages);}// Event delegation - ONE handler for all GIF clicks function setupGridClickHandler(grid){if (gridClickHandlerAttached) return;grid.addEventListener("click",(e) =>{// Find the clicked cell (bubbling from img or button) const cell = e.target.closest(".btfw-gif-cell");if (!cell || cell.classList.contains("is-skeleton")) return;// Get URL from data attribute const url = cell.dataset.url;if (!url) return;const input = document.getElementById("chatline");if (!input) return;insertAtCursor(input," " + url + " ");close();});gridClickHandlerAttached = true;}// Check if we can update existing cells instead of full re-render function shouldUpdateInPlace(newItems,grid){const existingCells = grid.querySelectorAll(".btfw-gif-cell:not(.is-skeleton)");// If counts don't match,need full render if (existingCells.length !== newItems.length) return false;// If we have no tracked state,need full render if (renderedItems.length === 0) return false;return true;}// Update existing cells efficiently function updateExistingCells(grid,newItems){const cells = grid.querySelectorAll(".btfw-gif-cell");newItems.forEach((item,index) =>{const cell = cells[index];if (!cell) return;const oldItem = renderedItems[index];// Only update if item actually changed if (!oldItem || oldItem.id !== item.id){updateCell(cell,item);}});}// Update a single cell's content function updateCell(cell,item){// Update data attribute cell.dataset.url = item.urlClassic || "";cell.dataset.id = item.id || "";// Update image const img = cell.querySelector("img");if (img && img.src !== item.thumb){img.src = item.thumb;img.alt = "gif";prepareImageLoadingState(cell,img);}else if (img){prepareImageLoadingState(cell,img);}// Remove skeleton class if present cell.classList.remove("is-skeleton");}// Full render when updating in place isn't possible function fullRender(grid,pageItems){// Use replaceChildren for efficient bulk replacement (better than innerHTML = "") const frag = document.createDocumentFragment();pageItems.forEach(item =>{const cell = createGifCell(item);frag.appendChild(cell);});grid.replaceChildren(frag);}// Create a single GIF cell element function createGifCell(item){const cell = document.createElement("button");cell.className = "btfw-gif-cell";cell.type = "button";// Store data in attributes for event delegation cell.dataset.url = item.urlClassic || "";cell.dataset.id = item.id || "";const img = document.createElement("img");img.src = item.thumb;img.alt = "gif";img.loading = "lazy";img.decoding = "async";prepareImageLoadingState(cell,img);cell.appendChild(img);return cell;}function prepareImageLoadingState(cell,img){const handleLoad = () =>{cell.classList.remove("is-loading");cell.classList.remove("is-broken");};const handleError = () =>{cell.classList.add("is-broken");cell.classList.remove("is-loading");};cell.classList.add("is-loading");img.onload = handleLoad;img.onerror = handleError;if (img.complete){if (img.naturalWidth && img.naturalHeight){handleLoad();}else{handleError();}}}// If you have rapid pagination clicks,you can debounce renders:let renderTimeout = null;function debouncedRender(){if (renderTimeout){clearTimeout(renderTimeout);}renderTimeout = setTimeout(() =>{render();renderTimeout = null;},16);// ~60fps}// Open the GIF modal when the bridge asks document.addEventListener('btfw:openGifs',()=>{try{openGifModal();}catch(e){}});function open(){ensureModal();showNotice("");state.page = 1;state.provider = modal.querySelector(".btfw-gif-tabs li.is-active")?.getAttribute("data-p") || "giphy";renderSkeleton();setTimeout(search,0);modal.classList.add("is-active");const input = $("#btfw-gif-q",modal);if (input){requestAnimationFrame(() =>{input.focus();input.select();});}}function close(){modal?.classList.remove("is-active");}function boot(){ensureOpeners();}if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();return{name:"feature:gifs",open,close};});BTFW.define("feature:poll-overlay",[],async () =>{"use strict";const CSS_ID = "btfw-poll-overlay-styles";const POLL_OVERLAY_CSS = ` #btfw-poll-video-overlay{position:absolute;top:0;left:0;right:0;bottom:0;z-index:1500;pointer-events:none;display:none;}:root.btfw-poll-overlay-disabled #btfw-poll-video-overlay{display:none !important;}#btfw-poll-video-overlay.btfw-poll-active{display:block;}.btfw-poll-video-content{position:absolute;top:30px;left:20px;right:20px;pointer-events:auto;background:var(--btfw-overlay-bg);backdrop-filter:saturate(130%) blur(2px);border:1px solid var(--btfw-overlay-border);border-radius:calc(var(--btfw-radius) + 6px);padding:20px;box-shadow:var(--btfw-overlay-shadow);color:var(--btfw-color-text);max-width:800px;margin:0 auto;}.btfw-poll-video-header{display:flex;justify-content:space-between;align-items:flex-start;margin-bottom:16px;}.btfw-poll-video-title{font-size:1.2rem;font-weight:700;color:var(--btfw-color-text);margin:0;flex:1;}.btfw-poll-video-close{background:none;border:none;font-size:1.2rem;color:var(--btfw-color-text);cursor:pointer;padding:4px;opacity:0.7;margin-left:12px;}.btfw-poll-video-close:hover{opacity:1;}.btfw-poll-options-grid{display:flex;flex-direction:column;gap:8px;margin-bottom:16px;}.btfw-poll-option-row{display:flex;align-items:center;gap:8px;}.btfw-poll-option-btn{background:color-mix(in srgb,var(--btfw-color-panel) 86%,transparent 14%);border:2px solid var(--btfw-border);border-radius:6px;padding:6px 12px;color:var(--btfw-color-text);cursor:pointer;transition:all 0.2s;font-weight:500;min-width:60px;text-align:center;font-size:0.9rem;}.btfw-poll-option-btn:hover{background:color-mix(in srgb,var(--btfw-color-accent) 20%,transparent 80%);border-color:var(--btfw-color-accent);}.btfw-poll-option-btn.active{background:color-mix(in srgb,var(--btfw-color-accent) 32%,transparent 68%);border-color:var(--btfw-color-accent);color:var(--btfw-color-on-accent);}.btfw-poll-option-text{flex:1;color:var(--btfw-color-text);font-weight:500;}.btfw-poll-footer{display:flex;justify-content:space-between;align-items:center;margin-top:16px;padding-top:12px;border-top:1px solid color-mix(in srgb,var(--btfw-border) 60%,transparent 40%);}.btfw-poll-info{font-size:0.85rem;color:color-mix(in srgb,var(--btfw-color-text) 70%,transparent 30%);}.btfw-poll-end-btn{background:var(--btfw-color-error,#e74c3c);color:white;border:none;border-radius:6px;padding:6px 12px;cursor:pointer;font-size:0.85rem;font-weight:600;}.btfw-poll-end-btn:hover{opacity:0.9;}@media (max-width:768px){.btfw-poll-video-content{left:12px;right:12px;top:20px;padding:16px;}}`;let videoOverlay = null;let currentPoll = null;let socketEventsWired = false;let userVotes = new Set();// Track which options user voted for let pollDomObserver = null;let observedPollElement = null;const ENTITY_DECODER = document.createElement("textarea");function decodeHtmlEntities(value){if (typeof value !== "string"){if (value == null) return "";return String(value);}if (value.length === 0){return "";}ENTITY_DECODER.innerHTML = value;return ENTITY_DECODER.value;}function injectCSS(){if (document.getElementById(CSS_ID)) return;const style = document.createElement("style");style.id = CSS_ID;style.textContent = POLL_OVERLAY_CSS;document.head.appendChild(style);}function createVideoOverlay(){if (videoOverlay) return videoOverlay;const videowrap = document.getElementById("videowrap");if (!videowrap) return null;const overlay = document.createElement("div");overlay.id = "btfw-poll-video-overlay";overlay.innerHTML = ` <div class="btfw-poll-video-content"> <div class="btfw-poll-video-header"> <h3 class="btfw-poll-video-title">Poll Title</h3> <button class="btfw-poll-video-close" type="button">&times;</button> </div> <div class="btfw-poll-options-grid"> <!-- Options populated by JS --> </div> <div class="btfw-poll-footer"> <div class="btfw-poll-info"> <span class="btfw-poll-votes">0 votes</span> </div> <button class="btfw-poll-end-btn" style="display:none;">End Poll</button> </div> </div> `;videowrap.appendChild(overlay);videoOverlay = overlay;// Wire up close button const closeBtn = overlay.querySelector(".btfw-poll-video-close");closeBtn.addEventListener("click",hideVideoOverlay);// Wire up end poll button const endBtn = overlay.querySelector(".btfw-poll-end-btn");endBtn.addEventListener("click",() =>{if (window.socket && window.socket.emit){try{window.socket.emit("closePoll");}catch (e){console.error("Failed to end poll:",e);}}});return overlay;}function canEndPoll(){// Show end poll button if user has sufficient rank (usually rank 2+ can end polls) return window.CLIENT && window.CLIENT.rank >= 2;}function getOriginalPollButtons(){return document.querySelectorAll("#pollwrap .well .option button");}function stopPollDomObserver(){if (pollDomObserver){pollDomObserver.disconnect();pollDomObserver = null;observedPollElement = null;}}function startPollDomObserver(){stopPollDomObserver();if (!videoOverlay || !videoOverlay.classList.contains("btfw-poll-active")){return;}const pollWell = document.querySelector("#pollwrap .well.active");if (!pollWell){setTimeout(() =>{if (!pollDomObserver){startPollDomObserver();}},150);return;}observedPollElement = pollWell;pollDomObserver = new MutationObserver(() =>{if (observedPollElement && !document.contains(observedPollElement)){stopPollDomObserver();setTimeout(() =>{if (!pollDomObserver){startPollDomObserver();}},120);return;}syncOverlayFromDom();});pollDomObserver.observe(pollWell,{childList:true,subtree:true,characterData:true,attributes:true});// Sync immediately in case the poll was updated before we attached syncOverlayFromDom();}function syncOverlayFromDom(){if (!videoOverlay) return;const overlayButtons = videoOverlay.querySelectorAll(".btfw-poll-option-btn");const originalButtons = getOriginalPollButtons();if (!overlayButtons.length || overlayButtons.length !== originalButtons.length){return;}const newVotes = [];overlayButtons.forEach((button,index) =>{const originalButton = originalButtons[index];const voteCount = parseInt(originalButton?.textContent) || 0;button.textContent = voteCount.toString();if (originalButton?.classList.contains("active")){button.classList.add("active");userVotes.add(index);}else{button.classList.remove("active");userVotes.delete(index);}newVotes.push(voteCount);});if (newVotes.length){const votesSpan = videoOverlay.querySelector(".btfw-poll-votes");if (votesSpan){const totalVotes = newVotes.reduce((sum,count) => sum + count,0);votesSpan.textContent = `${totalVotes}vote${totalVotes !== 1 ? 's':''}`;}if (currentPoll){currentPoll.votes = newVotes;}}}function attemptVote(optionIndex,attempt = 0){const originalButtons = getOriginalPollButtons();if (originalButtons && originalButtons[optionIndex]){originalButtons[optionIndex].click();setTimeout(() =>{syncOverlayFromDom();},120);return;}if (attempt >= 4){emitVoteFallback(optionIndex);return;}setTimeout(() =>{attemptVote(optionIndex,attempt + 1);},100);}function emitVoteFallback(optionIndex){if (!window.socket || typeof window.socket.emit !== "function"){return false;}const pollId = currentPoll && (currentPoll.id ?? currentPoll.pollId ?? currentPoll.pollID ?? currentPoll.poll_id);const attempts = [];const basePayloads = [optionIndex,{option:optionIndex}];if (pollId != null){basePayloads.push({poll:pollId,option:optionIndex});basePayloads.push({id:pollId,option:optionIndex});}const events = ["vote","votePoll"];events.forEach((event) =>{basePayloads.forEach((payload) =>{attempts.push({event,payload});});});attempts.forEach(({event,payload},index) =>{setTimeout(() =>{try{window.socket.emit(event,payload);}catch (err){if (index === attempts.length - 1){console.warn("[poll-overlay] Failed to emit vote via socket",err);}}},index * 25);});setTimeout(() =>{syncOverlayFromDom();},attempts.length * 25 + 150);return attempts.length > 0;}function showVideoOverlay(poll){const overlay = createVideoOverlay();if (!overlay || !poll) return;currentPoll = poll;userVotes.clear();// Reset user votes for new poll // Update overlay content const title = overlay.querySelector(".btfw-poll-video-title");const optionsGrid = overlay.querySelector(".btfw-poll-options-grid");//const votesSpan = overlay.querySelector(".btfw-poll-votes");const endBtn = overlay.querySelector(".btfw-poll-end-btn");if (title) title.textContent = decodeHtmlEntities(poll.title || "Poll");// Show/hide end poll button based on permissions if (endBtn){endBtn.style.display = canEndPoll() ? "block":"none";}if (optionsGrid && poll.options){optionsGrid.innerHTML = "";poll.options.forEach((option,index) =>{const optionRow = document.createElement("div");optionRow.className = "btfw-poll-option-row";const btn = document.createElement("button");btn.className = "btfw-poll-option-btn";btn.dataset.optionIndex = index;const optionText = document.createElement("span");optionText.className = "btfw-poll-option-text";optionText.textContent = decodeHtmlEntities(option);// Set initial vote count const voteCount = poll.votes && poll.votes[index] ? poll.votes[index]:0;btn.textContent = voteCount.toString();btn.addEventListener("click",() =>{try{attemptVote(index);}catch (e){console.error("Failed to trigger poll vote:",e);}// Track user vote for visual feedback if (poll.multi){// Multi-choice:toggle selection if (userVotes.has(index)){userVotes.delete(index);btn.classList.remove("active");}else{userVotes.add(index);btn.classList.add("active");}}else{// Single choice:clear others and select this one userVotes.clear();optionsGrid.querySelectorAll(".btfw-poll-option-btn").forEach(b =>{b.classList.remove("active");});userVotes.add(index);btn.classList.add("active");}});optionRow.appendChild(btn);optionRow.appendChild(optionText);optionsGrid.appendChild(optionRow);});}// Update vote count updateVoteDisplay(poll);overlay.classList.add("btfw-poll-active");// Ensure overlay stays in sync with the native poll controls once they mount setTimeout(() =>{syncOverlayFromDom();startPollDomObserver();},200);}function hideVideoOverlay(){if (videoOverlay){videoOverlay.classList.remove("btfw-poll-active");currentPoll = null;userVotes.clear();stopPollDomObserver();}}function updateVoteDisplay(poll){if (!videoOverlay || !poll) return;if (currentPoll){currentPoll ={...currentPoll,...poll,votes:Array.isArray(poll.votes) ? poll.votes:currentPoll.votes};}const votesSpan = videoOverlay.querySelector(".btfw-poll-votes");const optionsGrid = videoOverlay.querySelector(".btfw-poll-options-grid");// Update vote counts on buttons to match original poll if (optionsGrid && poll.votes){const buttons = optionsGrid.querySelectorAll(".btfw-poll-option-btn");const originalPollButtons = getOriginalPollButtons();let mirroredActiveState = false;buttons.forEach((btn,index) =>{const voteCount = poll.votes[index] || 0;btn.textContent = voteCount.toString();btn.classList.remove("active");});if (originalPollButtons.length === buttons.length){buttons.forEach((btn,index) =>{const originalBtn = originalPollButtons[index];if (originalBtn && originalBtn.classList.contains("active")){btn.classList.add("active");userVotes.add(index);mirroredActiveState = true;}else{userVotes.delete(index);}});}if (!mirroredActiveState && userVotes.size){userVotes.forEach((voteIndex) =>{const btn = buttons[voteIndex];if (btn){btn.classList.add("active");}});}}// Update total vote count if (votesSpan && poll.votes){const totalVotes = poll.votes.reduce((sum,count) => sum + (count || 0),0);votesSpan.textContent = `${totalVotes}vote${totalVotes !== 1 ? 's':''}`;}if (!pollDomObserver && videoOverlay && videoOverlay.classList.contains("btfw-poll-active")){startPollDomObserver();}}function checkForExistingPoll(){// Check if there's already an active poll when the module loads const existingPoll = document.querySelector('#pollwrap .well.active');if (existingPoll){console.log("Found existing active poll,extracting data...");// Extract poll data from the existing DOM const titleElement = existingPoll.querySelector('h3');const optionElements = existingPoll.querySelectorAll('.option');if (titleElement && optionElements.length > 0){const pollData ={title:titleElement.textContent.trim(),options:[],votes:[],multi:false // Default,will be updated if we can detect it};optionElements.forEach((option,index) =>{const button = option.querySelector('button');const optionText = option.textContent.replace(button ? button.textContent:'','').trim();const voteCount = button ? parseInt(button.textContent) || 0:0;pollData.options.push(optionText);pollData.votes.push(voteCount);});console.log("Extracted poll data:",pollData);showVideoOverlay(pollData);return true;}}return false;}function wireSocketEvents(){if (socketEventsWired || !window.socket) return;try{// Listen for new polls window.socket.on("newPoll",(poll) =>{if (poll && poll.title){showVideoOverlay(poll);}});// Listen for poll updates (vote counts) window.socket.on("updatePoll",(poll) =>{if (poll && currentPoll){updateVoteDisplay(poll);}});// Listen for poll closure window.socket.on("closePoll",() =>{hideVideoOverlay();});// Handle socket reconnection window.socket.on("connect",() =>{console.log("[poll-overlay] Socket reconnected,re-wiring events");socketEventsWired = false;setTimeout(() =>{wireSocketEvents();},500);});socketEventsWired = true;}catch (e){console.warn("[poll-overlay] Socket event wiring failed:",e);}}function waitForSocket(){return new Promise((resolve) =>{if (window.socket && window.socket.on){resolve();return;}let attempts = 0;const maxAttempts = 50;// 5 seconds max const checkSocket = () =>{attempts++;if (window.socket && window.socket.on){resolve();}else if (attempts < maxAttempts){setTimeout(checkSocket,100);}else{console.warn("[poll-overlay] Socket not available after 5 seconds");resolve();// Continue anyway}};setTimeout(checkSocket,100);});}async function boot(){try{injectCSS();// Wait for socket to be available before wiring events await waitForSocket();wireSocketEvents();// Check for existing poll after a short delay to ensure DOM is ready setTimeout(() =>{checkForExistingPoll();},500);}catch (e){console.error("[poll-overlay] Boot failed:",e);}}// Boot when DOM is ready if (document.readyState === "loading"){document.addEventListener("DOMContentLoaded",boot);}else{setTimeout(boot,0);// Async to avoid blocking}// Also boot on layout ready event (with delay to ensure everything is settled) document.addEventListener("btfw:layoutReady",() =>{setTimeout(boot,200);});return{name:"feature:poll-overlay",showOverlay:showVideoOverlay,hideOverlay:hideVideoOverlay};});BTFW.define("feature:notify",[],async () =>{const $ = (s,r=document) => r.querySelector(s);const ENTITY_DECODER = document.createElement("textarea");function decodeHtmlEntities(value){if (typeof value !== "string"){if (value == null) return "";return String(value);}if (value === "") return "";ENTITY_DECODER.innerHTML = value;return ENTITY_DECODER.value;}const LS_ENABLED = "btfw:notify:enabled";// "1"|"0" const LS_JOIN_NOTICES= "btfw:chat:joinNotices";// "1"|"0" const MAX_VISIBLE = 3;const DEFAULT_TIMEOUT= 6000;let enabled = true;try{const v = localStorage.getItem(LS_ENABLED);if (v !== null) enabled = v === "1";}catch(e){}let joinNoticesEnabled = true;try{const stored = localStorage.getItem(LS_JOIN_NOTICES);if (stored !== null) joinNoticesEnabled = stored === "1";}catch(_){}document.addEventListener("btfw:chat:joinNoticesChanged",(ev)=>{if (!ev || !ev.detail) return;joinNoticesEnabled = !!ev.detail.enabled;});document.addEventListener("btfw:themeSettings:apply",(ev)=>{const value = ev?.detail?.values?.joinNotices;if (value != null) joinNoticesEnabled = !!value;});// ---- container (absolute overlay) ------------------------------------------ function ensureStack(){const buf = $("#messagebuffer");if (!buf) return null;const chatWrap = $("#chatwrap");const topbar = chatWrap?.querySelector(".btfw-chat-topbar");let stack = $("#btfw-notify-stack");if (!stack){stack = document.createElement("div");stack.id = "btfw-notify-stack";stack.setAttribute("role","region");stack.setAttribute("aria-live","polite");stack.setAttribute("aria-relevant","additions");}const inTopbar = !!topbar;stack.classList.toggle("btfw-notify-stack--topbar",inTopbar);stack.classList.toggle("btfw-notify-stack--buffer",!inTopbar);if (inTopbar){if (getComputedStyle(topbar).position === "static"){topbar.style.position = "relative";}if (stack.parentElement !== topbar) topbar.appendChild(stack);}else{const cs = getComputedStyle(buf);if (cs.position === "static") buf.style.position = "relative";if (stack.parentElement !== buf) buf.appendChild(stack);const first = buf.firstElementChild;if (first && first !== stack) buf.insertBefore(stack,first);}return stack;}// if CyTube re-renders chat,keep the stack around function observeChat(){const cw = $("#chatwrap");if (!cw || cw._btfw_notify_obs) return;cw._btfw_notify_obs = true;new MutationObserver(() => ensureStack()).observe(cw,{childList:true,subtree:true});}// ---- queue + API ----------------------------------------------------------- const visible = [];const queued = [];function showNextFromQueue(){if (queued.length && visible.length < MAX_VISIBLE){const next = queued.shift();_mount(next);}}function notify(opts){if (!enabled) return null;const o = Object.assign({id:"n_"+Math.random().toString(36).slice(2),title:"",html:"",icon:"",kind:"info",// info|success|warn|error timeout:DEFAULT_TIMEOUT,onClick:null,actions:[]},opts||{});o.el = buildCard(o);if (visible.length >= MAX_VISIBLE) queued.push(o);else _mount(o);return o;}function _mount(o){const stack = ensureStack();if (!stack){queued.push(o);return;}visible.push(o);stack.appendChild(o.el);if (o.timeout > 0){o.el.classList.add('btfw-notice--timed');startAutoclose(o);}else{o.el.classList.remove('btfw-notice--timed');const timer = o.el.querySelector('.btfw-notice-timer');if (timer) timer.remove();const progress = o.el.querySelector('.btfw-notice-progress');if (progress) progress.remove();}}function buildCard(o){const card = document.createElement("div");card.className = `btfw-notice btfw-notice--${o.kind}`;card.setAttribute("role","status");card.setAttribute("aria-live","polite");const shell = document.createElement("div");shell.className = "btfw-notice-shell";const iconWrap = document.createElement("div");iconWrap.className = "btfw-notice-iconwrap";if (o.icon){const icon = document.createElement("span");icon.className = "btfw-notice-icon";icon.innerHTML = o.icon;iconWrap.appendChild(icon);}else{iconWrap.classList.add("is-empty");}shell.appendChild(iconWrap);const content = document.createElement("div");content.className = "btfw-notice-content";const header = document.createElement("div");header.className = "btfw-notice-header";const title = document.createElement("strong");title.className = "btfw-notice-title";title.textContent = o.title || "";const closeBtn = document.createElement("button");closeBtn.className = "btfw-notice-close";closeBtn.type = "button";closeBtn.setAttribute("aria-label","Close");closeBtn.innerHTML = "&times;";header.appendChild(title);header.appendChild(closeBtn);content.appendChild(header);const body = document.createElement("div");body.className = "btfw-notice-body";if (o.html) body.innerHTML = o.html;content.appendChild(body);if (o.actions && o.actions.length){const row = document.createElement("div");row.className = "btfw-notice-actions";o.actions.forEach(a=>{const b = document.createElement("button");b.className = "btfw-notice-cta";b.type = "button";b.textContent = a.label || "Action";b.addEventListener("click",(ev)=>{ev.stopPropagation();a.onclick && a.onclick(ev);});row.appendChild(b);});content.appendChild(row);}if (o.timeout > 0){const timer = document.createElement("p");timer.className = "btfw-notice-timer";const label = document.createElement("span");label.className = "btfw-notice-timer-label";label.innerHTML = `This message will close in <span class="btfw-notice-timer-remaining"></span> seconds.`;const stop = document.createElement("button");stop.type = "button";stop.className = "btfw-notice-stop";stop.textContent = "Click to stop.";timer.appendChild(label);timer.appendChild(stop);content.appendChild(timer);}shell.appendChild(content);card.appendChild(shell);const progress = document.createElement("div");progress.className = "btfw-notice-progress";const bar = document.createElement("div");progress.appendChild(bar);card.appendChild(progress);card.addEventListener("click",(ev)=>{if (ev.target.closest(".btfw-notice-close")){ev.preventDefault();ev.stopPropagation();close(o);return;}if (typeof o.onClick === "function") o.onClick(ev);});card.addEventListener("mouseenter",()=> pause(o));card.addEventListener("mouseleave",()=> resume(o));return card;}// ---- timers / progress ------------------------------------------------------ function startAutoclose(o){const bar = o.el.querySelector(".btfw-notice-progress > div");const timer = o.el.querySelector(".btfw-notice-timer");const label = o.el.querySelector(".btfw-notice-timer-label");const remainingNode = o.el.querySelector(".btfw-notice-timer-remaining");const stopBtn = o.el.querySelector(".btfw-notice-stop");const state ={total:Math.max(0,o.timeout),remaining:Math.max(0,o.timeout),paused:false,manual:false,lastTick:Date.now(),lastDisplayedSecs:-1,// ← ADD THIS intervalId:0,bar,label,timer,remainingNode};function render(){if (state.bar){const pct = state.total > 0 ? Math.max(0,Math.min(1,state.remaining / state.total)):0;state.bar.style.transform = `scaleX(${pct})`;}if (state.remainingNode){const secs = state.total > 0 ? Math.max(0,Math.ceil(state.remaining / 1000)):0;// ← ONLY UPDATE textContent IF THE SECOND ACTUALLY CHANGED if (secs !== state.lastDisplayedSecs){state.remainingNode.textContent = String(secs);state.lastDisplayedSecs = secs;}}}render();state.intervalId = window.setInterval(()=>{if (state.manual || state.paused){state.lastTick = Date.now();return;}const now = Date.now();const dt = now - state.lastTick;state.lastTick = now;state.remaining = Math.max(0,state.remaining - dt);render();if (state.remaining <= 0){clearInterval(state.intervalId);state.intervalId = 0;close(o);}},140);o._state = state;if (stopBtn){stopBtn.addEventListener("click",(ev)=>{ev.preventDefault();ev.stopPropagation();if (state.manual) return;state.manual = true;state.paused = true;if (state.intervalId){clearInterval(state.intervalId);state.intervalId = 0;}o.el.classList.add("btfw-notice--pinned");if (state.timer) state.timer.classList.add("is-stopped");if (state.label) state.label.textContent = "Timer stopped.";if (state.remainingNode) state.remainingNode.textContent = "0";stopBtn.remove();},{once:true});}}function pause(o){const s=o._state;if (s){s.paused = true;s.lastTick = Date.now();}}function resume(o){const s=o._state;if (s && !s.manual){s.paused = false;s.lastTick = Date.now();}}function close(o){if (o._closed) return;o._closed = true;if (o._state?.intervalId) clearInterval(o._state.intervalId);o._state = null;if (o.el && o.el.parentNode){o.el.classList.add("btfw-notice--leaving");setTimeout(()=>{try{o.el.remove();}catch(_){};},160);}const i = visible.indexOf(o);if (i>=0) visible.splice(i,1);showNextFromQueue();}function closeAll(){visible.slice().forEach(close);queued.length=0;}// convenience const api ={notify,info:p => notify(Object.assign({kind:"info"},p||{})),success:p => notify(Object.assign({kind:"success"},p||{})),warn:p => notify(Object.assign({kind:"warn"},p||{})),error:p => notify(Object.assign({kind:"error"},p||{})),closeAll,setEnabled(v){enabled=!!v;try{localStorage.setItem(LS_ENABLED,enabled?"1":"0");}catch(e){}if(!enabled) closeAll();},isEnabled(){return !!enabled;}};// ---- de-dupe (avoid many toasts for same event burst) ---------------------- const seen = new Map();// key -> expireAt (ms) function postOnce(key,ttlMs,builder){const now = Date.now();const exp = seen.get(key)||0;if (exp > now) return;// still within de-dupe window seen.set(key,now + (ttlMs||1500));builder();}// ---- CyTube hooks (wired once) --------------------------------------------- let socketWired = false;function wireSocketOnce(){if (socketWired) return;if (!window.socket || typeof window.socket.on !== "function") return;socketWired = true;// Now playing:changeMedia & setCurrent often both fire → de-dupe try{const scheduleNowPlaying = (payload) =>{const direct = titleFromData(payload);if (direct){return postNowPlayingToast(direct);}const attemptFallback = (remaining,delay = 200) =>{if (remaining <= 0) return;setTimeout(() =>{const fallback = titleFromAnywhere();if (fallback && fallback !== "New media"){postNowPlayingToast(fallback);}else{attemptFallback(remaining - 1,delay);}},delay);};attemptFallback(3);};socket.on("changeMedia",scheduleNowPlaying);socket.on("setCurrent",scheduleNowPlaying);}catch(_){}try{socket.on("newPoll",(p)=>{const title = (p && p.title) ? String(p.title):"A new poll started";postOnce("poll:"+title,2000,()=>{const items = Array.isArray(p?.options) ? p.options .slice(0,4) .map(x=>`<li>${escapeHtml(decodeHtmlEntities(String(x)))}</li>`) .join(""):"";api.info({title:"Poll started",html:`<div class="poll-title">${escapeHtml(decodeHtmlEntities(title))}</div>${items?`<ul class="poll-opts">${items}</ul>`:""}`,icon:"📊"});});});}catch(_){}try{socket.on("addUser",(u)=>{const name = (u && (u.name || u.un)) ? (u.name || u.un):"Someone";if (!joinNoticesEnabled) return;postOnce("join:"+name,60000,()=>{api.success({title:"Joined",html:`<b>${escapeHtml(decodeHtmlEntities(name))}</b> entered the channel`,icon:"👋",timeout:3500});});});}catch(_){}}function stripNowPlayingPrefix(value){return String(value || "").replace(/^\s*(?:currently|now)\s*playing\s*[:\-]\s*/i,"").trim();}function titleFromData(d){if (!d) return "";const candidates = [ d.title,d.currenttitle,d.currentTitle,d.media?.title,d.current?.media?.title,d.queue?.media?.title,d.queue?.current?.media?.title,d.queue?.item?.title,d.item?.media?.title,d.item?.title ];for (const candidate of candidates){if (candidate != null && String(candidate).trim()){return stripNowPlayingPrefix(candidate);}}return "";}function titleFromAnywhere(){const ct = $("#currenttitle");if (ct && ct.textContent) return stripNowPlayingPrefix(ct.textContent);return "New media";}function normaliseTitleKey(title){const value = (title == null) ? "":String(title);const trimmed = value.trim();if (!trimmed) return "__unknown__";return trimmed.toLowerCase();}function postNowPlayingToast(rawTitle){const decoded = decodeHtmlEntities(rawTitle || "");const cleaned = stripNowPlayingPrefix(decoded);const display = cleaned || "New media";const key = `np:${normaliseTitleKey(display)}`;postOnce(key,1500,() =>{api.info({title:"Now playing",html:`<div class="np-title">${escapeHtml(display)}</div>`,icon:"▶️"});});}function escapeHtml(s){return s.replace(/[&<>"]/g,c=>({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;'}[c]));}// ---- boot ------------------------------------------------------------------ function boot(){ensureStack();observeChat();wireSocketOnce();}if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();document.addEventListener("btfw:layoutReady",()=> setTimeout(boot,50));// handy global for ad-hoc testing window.BTFW_notify = api;return Object.assign({name:"feature:notify"},api);});BTFW.define('feature:syncGuard',[],async ()=>({name:'feature:syncGuard',disabled:true}));BTFW.define("feature:local-subs",["feature:videoOverlay"],async () =>{const $ = (s,r=document)=>r.querySelector(s);const $$ = (s,r=document)=>Array.from(r.querySelectorAll(s));function convertSRTtoVTT(srt){return "WEBVTT\n\n" + String(srt) .replace(/\r+/g,"") .replace(/^\d+\s+|\n\d+\s+/g,"") .replace(/(\d{2}):(\d{2}):(\d{2}),(\d{3})/g,"$1:$2:$3.$4");}function vttURLFromContent(txt){const blob = new Blob([txt],{type:"text/vtt"});return URL.createObjectURL(blob);}function removeOldTracksFromVideoEl(video){try{const tracks = video.querySelectorAll("track[kind='subtitles'],track[kind='captions']");tracks.forEach(t => t.remove());}catch(_){}}function addTrackToVideoEl(video,src,label="Subtitles"){const t = document.createElement("track");t.kind = "subtitles";t.src = src;t.label= label;t.default = true;video.appendChild(t);}// Video.js interop (if present) function getVideoJS(){try{return (window.videojs && videojs("ytapiplayer")) || null;}catch(_){return null;}}function removeOldTracksFromVJS(vjs){try{const list = vjs.remoteTextTracks();for (let i = list.length - 1;i >= 0;i--){vjs.removeRemoteTextTrack(list[i]);}}catch(_){}}function addTrackToVJS(vjs,src,label="Subtitles"){try{vjs.addRemoteTextTrack({kind:"subtitles",src,default:true,label},false);}catch(_){}}function getActiveHTML5Video(){// CyTube’s HTML5 player <video> usually lives under #ytapiplayer const v = $("#ytapiplayer video") || $("video");return v || null;}function pickAndLoad(){let input = $("#btfw-localsubs-input");if (!input){input = document.createElement("input");input.type = "file";input.accept = ".vtt,.srt";input.id = "btfw-localsubs-input";input.style.display = "none";document.body.appendChild(input);input.addEventListener("change",async (e)=>{const file = e.target.files && e.target.files[0];if (!file) return;const reader = new FileReader();reader.onload = function(ev){let text = String(ev.target.result || "");if (file.name.toLowerCase().endsWith(".srt")){text = convertSRTtoVTT(text);}const url = vttURLFromContent(text);const vjs = getVideoJS();if (vjs){removeOldTracksFromVJS(vjs);addTrackToVJS(vjs,url,file.name);}else{const video = getActiveHTML5Video();if (video){removeOldTracksFromVideoEl(video);addTrackToVideoEl(video,url,file.name);}else{console.warn("[local-subs] No compatible video element found.");}}};reader.readAsText(file);// reset so selecting same file again fires change e.target.value = "";});}input.click();}function injectButton(){const overlay = $("#VideoOverlay");if (!overlay || $("#btfw-btn-localsubs")) return;const btn = document.createElement("button");btn.id = "btfw-btn-localsubs";btn.className = "button is-dark is-small btfw-vo-btn";btn.title = "Local Subtitles (VTT/SRT)";btn.innerHTML = `<i class="fa fa-closed-captioning"></i>`;btn.addEventListener("click",pickAndLoad);overlay.querySelector(".btfw-vo-buttons")?.appendChild(btn) || overlay.appendChild(btn);}// Clear tracks on media change function wireChangeMedia(){try{if (window.socket && socket.on && !window._btfw_localsubs_wired){window._btfw_localsubs_wired = true;socket.on("changeMedia",()=>{const vjs = getVideoJS();if (vjs) removeOldTracksFromVJS(vjs);const v = getActiveHTML5Video();if (v) removeOldTracksFromVideoEl(v);});}}catch(_){}}function boot(){wireChangeMedia();injectButton();// Watch for overlay mount/remount const mo = new MutationObserver(()=> injectButton());mo.observe(document.body,{childList:true,subtree:true});}if (document.readyState === "loading") document.addEventListener("DOMContentLoaded",boot);else boot();return{name:"feature:local-subs"};});BTFW.define("feature:billcast",[],async () =>{const KEY = "btfw:billcast:enabled";// persisted toggle const BASE = (window.BTFW && BTFW.BASE ? BTFW.BASE.replace(/\/+$/,""):"");const SRC = BASE + "/modules/feature-billcaster.js";function isEnabled(){try{const v = localStorage.getItem(KEY);return (v === null) ? true:v === "1";// default ON}catch (_){return true;}}function setEnabled(on){try{localStorage.setItem(KEY,on ? "1":"0");}catch(_){}}function loadScriptOnce(){return new Promise((resolve,reject) =>{if (window.__BTFW_BILLCAST_LOADED) return resolve(true);const s = document.createElement("script");s.src = SRC;s.async = true;s.defer = true;s.onload = () =>{window.__BTFW_BILLCAST_LOADED = true;resolve(true);};s.onerror = () => reject(new Error("Failed to load " + SRC));document.head.appendChild(s);});}async function enable(){if (window.__BTFW_BILLCAST_LOADED) return true;try{await loadScriptOnce();console.log("[billcast] loaded");return true;}catch (e){console.warn("[billcast] load failed:",e && e.message || e);return false;}}function disable(){// We can't safely unload the Cast sender once injected,// but we can hide/remove UI bits created by billcast.js. const castBtn = document.getElementById("castButton");const fbBtn = document.getElementById("fallbackButton");if (castBtn) castBtn.remove();if (fbBtn) fbBtn.remove();console.log("[billcast] disabled (UI hidden;script not reloaded again)");}// Theme Settings integration (expects your TS to dispatch this with values.billcastEnabled) function onThemeApply(ev){const values = ev && ev.detail && ev.detail.values ||{};if (typeof values.billcastEnabled === "boolean"){setEnabled(values.billcastEnabled);if (values.billcastEnabled) enable();else disable();}}function boot(){document.addEventListener("btfw:themeSettings:apply",onThemeApply);if (isEnabled()) enable();}if (document.readyState === "loading"){document.addEventListener("DOMContentLoaded",boot);}else{boot();}return{name:"feature:billcast",enable,disable};});$(document).ready(function (){var session = null;var castPlayer = null;var CHECK_INTERVAL = 120000;// Sync every 120 seconds var SYNC_THRESHOLD = 20;// Sync if time difference > 20 seconds var player = null;var castAvailable = false;var syncInterval = null;function $overlay(){var $o = $('#btfw-video-overlay');// new theme overlay if ($o.length) return $o;$o = $('#VideoOverlay');// legacy overlay if ($o.length) return $o;// Last resort:create an overlay so buttons have a home var $vw = $('#videowrap');if ($vw.length){$o = $('<div id="btfw-video-overlay" class="btfw-video-overlay"></div>') .css({position:'absolute',inset:0,'pointer-events':'none'}) .appendTo($vw);return $o;}return $();// none yet}function $voBar(){var $b = $('#btfw-vo-bar');if ($b.length) return $b;// Create a minimal bar if overlay exists but bar doesn't var $ov = $overlay();if ($ov.length){$b = $('<div id="btfw-vo-bar" class="btfw-vo-bar"></div>') .css({position:'absolute',top:'8px',right:'8px',left:'8px',display:'flex','justify-content':'space-between',gap:'6px','pointer-events':'none','z-index':1000}) .appendTo($ov);return $b;}return $();// overlay not there yet}function $voSection(side){var id = side === 'left' ? 'btfw-vo-left':'btfw-vo-right';var cls = 'btfw-vo-section btfw-vo-section--' + side;var $section = $('#' + id);if ($section.length) return $section;var $bar = $voBar();if (!$bar.length) return $();$section = $('<div></div>') .attr('id',id) .addClass(cls) .css({display:'flex','pointer-events':'auto',gap:'6px','flex-wrap':'wrap'});if (side === 'left'){$bar.prepend($section);}else{$bar.append($section);}$bar.attr('data-left-section','#btfw-vo-left');$bar.attr('data-right-section','#btfw-vo-right');return $section;}function whenVoBarReady(fn){if ($voBar().length) return fn();var mo = new MutationObserver(function (){if ($voBar().length){mo.disconnect();fn();}});mo.observe(document.body,{childList:true,subtree:true});}function initializePlayer(){if ($('#ytapiplayer').length){player = videojs('ytapiplayer');attachPlayerEventListeners();updateCastButtonVisibility();}else{setTimeout(initializePlayer,500);}}function attachPlayerEventListeners(){if (!player) return;player.on('play',function (){if (session && castPlayer && castPlayer.playerState !== chrome.cast.media.PlayerState.PLAYING){castPlayer.play( function (){console.log('Cast player resumed');},function (error){console.error('Error playing cast player:',error);});}});player.on('pause',function (){if (session && castPlayer && castPlayer.playerState !== chrome.cast.media.PlayerState.PAUSED){castPlayer.pause(function (error){console.error('Error pausing cast player:',error);});}});player.on('seeked',function (){if (session && castPlayer){var currentTime = player.currentTime();if (castPlayer && castPlayer.sessionId === session.getSessionId()){var seekRequest = new chrome.cast.media.SeekRequest();seekRequest.currentTime = currentTime;castPlayer.seek(seekRequest,function (){console.log('Cast player synced after seek');},function (error){console.error('Error syncing cast player after seek:',error);});}else{console.error('Cannot seek:Invalid cast player session.');}}});player.on('loadstart',function (){stopSync();});player.on('loadeddata',function (){startSync();if (session) castCurrentVideo(0);updateCastButtonVisibility();});}function createCastButton(){// return a jQuery element (don’t append here) if ($('#btfw-vo-cast').length) return $('#btfw-vo-cast');// Use the same overlay styling as other buttons // Glyphicons exist via Bootswatch Slate;if you prefer FA,swap the inner <span>. var $btn = $( '<button id="btfw-vo-cast" ' + 'class="btn btn-sm btn-default btfw-vo-adopted" ' + 'title="Cast to device" data-btfw-overlay="1">' + '<i class="fa-brands fa-chromecast"></i>' + '</button>' );$btn.on('click',function (){try{cast.framework.CastContext.getInstance().requestSession();}catch (e){alert('Cast framework not ready.');}});return $btn;}function createFallbackButton(){if ($('#btfw-vo-cast-fallback').length) return $('#btfw-vo-cast-fallback');var $btn = $( '<button id="btfw-vo-cast-fallback" ' + 'class="btn btn-sm btn-default btfw-vo-adopted" ' + 'title="Casting not available" data-btfw-overlay="1">' + '<i class="fa-solid fa-circle-info"></i>' + '</button>' );$btn.on('click',function (){alert('Casting is not available in this browser. Please use Google Chrome for casting.');});return $btn;}function initializeCastButton(){var $left = $voSection('left');if (!$left.length){whenVoBarReady(initializeCastButton);return;}// Remove any previous instance to avoid duplicates when re-running $('#btfw-vo-cast,#btfw-vo-cast-fallback').remove();var $btn = castAvailable ? createCastButton():createFallbackButton();if (!$btn || !$btn.length) return;$left.append($btn);updateCastButtonVisibility();}function updateCastButtonVisibility(){var videoSrc = getCurrentVideoSrc();var isYouTubeVideo = videoSrc ? videoSrc.toLowerCase().includes('youtube'):false;if (isYouTubeVideo){$('#btfw-vo-cast,#btfw-vo-cast-fallback').hide();if (session) stopSync();}else if (castAvailable){$('#btfw-vo-cast').show();$('#btfw-vo-cast-fallback').hide();if (session && !syncInterval) startSync();}else{$('#btfw-vo-cast').hide();$('#btfw-vo-cast-fallback').show();}}function initializeCastApi(){castAvailable = true;var context = cast.framework.CastContext.getInstance();context.setOptions({receiverApplicationId:chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID,autoJoinPolicy:chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED});context.addEventListener( cast.framework.CastContextEventType.SESSION_STATE_CHANGED,sessionStateChanged );whenVoBarReady(initializeCastButton);}function sessionStateChanged(event){switch (event.sessionState){case cast.framework.SessionState.SESSION_STARTED:case cast.framework.SessionState.SESSION_RESUMED:{session = cast.framework.CastContext.getInstance().getCurrentSession();if (session) castPlayer = session.getMediaSession();waitForPlayer(function (){var t = (player && typeof player.currentTime === 'function') ? player.currentTime():0;castCurrentVideo(t);});startSync();break;}case cast.framework.SessionState.SESSION_ENDED:session = null;castPlayer = null;stopSync();break;}}function waitForPlayer(cb){if (player){cb();}else{setTimeout(function (){waitForPlayer(cb);},500);}}function getCurrentVideoSrc(){var $v = $('#ytapiplayer video');var $i = $('#ytapiplayer iframe');var src = null;if ($v.length > 0){src = $v.attr('src');if (!src){$v.find('source').each(function (){var s = $(this).attr('src');if (s){src = s;return false;}});}if (!src) src = $v.attr('data-src');}if (!src && $i.length > 0) src = $i.attr('src');return src;}function castCurrentVideo(currentTime){if (!session) return;var videoSrc = getCurrentVideoSrc();if (!videoSrc){console.error('Cannot cast:no video src');return;}// Skip YouTube (receiver app doesn’t handle YT embeds here) if (videoSrc.toLowerCase().includes('youtube')) return;var mimeType = getMimeType(videoSrc);var mediaInfo = new chrome.cast.media.MediaInfo(videoSrc,mimeType);var videoName = $('#currenttitle').text() || 'Unknown Title';var fullTitle = 'BillTube Cast:' + videoName;var metadata = new chrome.cast.media.GenericMediaMetadata();metadata.title = fullTitle;mediaInfo.metadata = metadata;var request = new chrome.cast.media.LoadRequest(mediaInfo);request.currentTime = currentTime || 0;request.autoplay = true;session.loadMedia(request).then( function (){castPlayer = session.getMediaSession();updateCastButtonVisibility();},function (error){console.error('Error loading media:',error);});}function getMimeType(url){var ext = url.split('.').pop().split(/#|\?/)[0].toLowerCase();switch (ext){case 'mp4':return 'video/mp4';case 'webm':return 'video/webm';case 'ogg':case 'ogv':return 'video/ogg';case 'mov':return 'video/quicktime';default:console.warn('Unknown extension;defaulting to video/mp4');return 'video/mp4';}}function startSync(){if (!syncInterval) syncInterval = setInterval(syncPlaybackTime,CHECK_INTERVAL);}function stopSync(){if (syncInterval){clearInterval(syncInterval);syncInterval = null;}}function syncPlaybackTime(){if (session && castPlayer && player && typeof player.currentTime === 'function'){var localTime = player.currentTime();var startTime = Date.now();castPlayer.getStatus(null,function (status){var endTime = Date.now();var latency = (endTime - startTime) / 2000;// → seconds var castTime = status.currentTime + latency;if (Math.abs(localTime - castTime) > SYNC_THRESHOLD){if (castPlayer && castPlayer.sessionId === session.getSessionId()){var seekRequest = new chrome.cast.media.SeekRequest();seekRequest.currentTime = localTime;castPlayer.seek(seekRequest,function (){console.log('Cast synced to local');},function (error){console.error('Cast sync error:',error);});}else{console.error('Invalid cast session;stopping sync.');stopSync();}}});}else{stopSync();}}if (window.socket && typeof window.socket.on === 'function'){socket.on("changeMedia",function (){waitForYtapiplayer(function (){initializePlayer();if (player && typeof player.ready === 'function'){player.ready(function (){if (session) castCurrentVideo(0);updateCastButtonVisibility();});}});});}function waitForYtapiplayer(cb){if ($('#ytapiplayer').length > 0) cb();else setTimeout(function (){waitForYtapiplayer(cb);},500);}var castScript = document.createElement('script');castScript.src = 'https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1';document.head.appendChild(castScript);window['__onGCastApiAvailable'] = function (isAvailable){if (isAvailable) initializeCastApi();else{castAvailable = false;whenVoBarReady(initializeCastButton);}};// Cleanup on unload $(window).on('beforeunload',function (){if (session) session.endSession(true);});initializePlayer();whenVoBarReady(initializeCastButton);});BTFW.define("feature:overlays",["core"],async function(){function mountHost(){if(document.getElementById("btfw-overlay-root")) return;var root=document.createElement("div");root.id="btfw-overlay-root";document.body.appendChild(root);}function openModal(opts){mountHost();var root=document.getElementById("btfw-overlay-root");var wrap=document.createElement("div");wrap.className="btfw-overlay";wrap.innerHTML="<div class='btfw-backdrop'></div><div class='btfw-modal'><button class='btfw-close' aria-label='Close'>&times;</button><div class='btfw-modal-body'></div></div>";var body=wrap.querySelector(".btfw-modal-body");if (opts && opts.content){if (typeof opts.content==="string") body.innerHTML=opts.content;else body.appendChild(opts.content);}function close(){wrap.remove();}wrap.querySelector(".btfw-backdrop").addEventListener("click",close);wrap.querySelector(".btfw-close").addEventListener("click",close);document.addEventListener("keydown",function esc(e){if(e.key==="Escape"){close();document.removeEventListener("keydown",esc);}});root.appendChild(wrap);return{close,el:wrap,body};}function openDrawer(opts){mountHost();var side = (opts && opts.side) || "right";var root=document.getElementById("btfw-overlay-root");var wrap=document.createElement("div");wrap.className="btfw-overlay btfw-drawer btfw-"+side;wrap.innerHTML="<div class='btfw-backdrop'></div><div class='btfw-panel'><div class='btfw-drawer-header'><span class='title'></span><button class='btfw-close'>&times;</button></div><div class='btfw-drawer-body'></div></div>";wrap.querySelector(".title").textContent = (opts && opts.title) || "";var body=wrap.querySelector(".btfw-drawer-body");if (opts && opts.content){if (typeof opts.content==="string") body.innerHTML=opts.content;else body.appendChild(opts.content);}function close(){wrap.remove();}wrap.querySelector(".btfw-backdrop").addEventListener("click",close);wrap.querySelector(".btfw-close").addEventListener("click",close);root.appendChild(wrap);return{close,el:wrap,body};}window.BTFW_overlays ={openModal,openDrawer};return{openModal,openDrawer};});BTFW.define("feature:userlistOverlay",["core","bridge"],async function(){var{ids}=BTFW.require("bridge");var isOpen=false,panel=null,stash=null;function ensurePanel(){if(panel && panel.parentNode) return panel;var chatCol = document.getElementById("btfw-chatcol") || document.body;panel = document.createElement("div");panel.className="btfw-chat-overlay";panel.style.display="none";panel.innerHTML = "<div class='btfw-chat-overlay-head'><span>Connected Users</span><button class='btfw-close'>&times;</button></div><div class='btfw-chat-overlay-body'></div>";panel.querySelector(".btfw-close").addEventListener("click",toggle);chatCol.appendChild(panel);return panel;}function open(){var map=ids();var p=ensurePanel();var body = p.querySelector(".btfw-chat-overlay-body");if (map.userList){map.userList.style.display="";// unhide inside overlay stash = map.userList.parentNode;body.appendChild(map.userList);}else{body.textContent = "No user list found.";}p.style.display="block";isOpen=true;}function close(){var map=ids();if (map.userList && stash){stash.appendChild(map.userList);map.userList.style.display="none";// hide again by default stash=null;}if(panel) panel.style.display="none";isOpen=false;}function toggle(){isOpen?close():open();}var ul = ids().userList;if (ul) ul.style.display="none";window.BTFW_userlist ={open,close,toggle};return{open,close,toggle};});